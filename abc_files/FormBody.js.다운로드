/// <reference path="../../Base/Controls/jquery-last-vsdoc.js" />

var m_evalXML;
var g_szAcceptLang = "ko";
var m_cvtXML;
var m_oApvList;
var m_oRecList;
var sReceiveNo = "";
var g_BaseImgURL = "/GWStorage/e-sign/ApprovalSign/BackStamp/";
//var g_SignImgURL = Common.GetBaseConfig("sign_ImgURL");  //"/GWStorage/e-sign/ApprovalSign/BackStamp/";

var g_BaseFormURL = "/GWStorage/e-sign/ApprovalForm/";
var g_BaseSender = "";
var g_BaseHeader = '';
var g_BaseORGNAME = '';
var elmComment; //	의견

var m_KMWebAttURL = '';
var m_sApvMode = "";
var m_print = false; //출력상태여부 - 출력형태로 할때 사용 
var bFileView = false;
var bPresenceView = true;
var bDisplayOnly = false;

//CB작업을 위해 추가
var m_oFormMenu = window;
try { if (m_oFormMenu == null) m_oFormMenu = parent.window; } catch (e) { }

/*-----------------------------
   editor type : X FORM PRJ.
-------------------------------*/

// 에디터 유형 정의
var editortypes = {
    textarea: "0",
    dhtml: "1",
    tagfree: "2",
    xfree: "3",
    tagfreenxfree: "4",
    activesquare: "5",
    crosseditor: "6",
    activesquaredefault: "7"
    // TODO: DEXT5 Test by 임동현 2015-08-03
    , dext5: "8"
    , cheditor: "9"
};

//에디터 참조 함수
var editortype = {
    getnum: function () {
        return getInfo("editortype"); //에디터 타입 번호(Dictionary에서 참조)
    },
    //에디터 이름 반환
    getname: function (n) {
        if (!n) return null;
        var s = n.toString(),
            r;
        for (var i in editortypes) {
            if (editortypes[i] == s) {
                console.log(i);
                r = i;
                break;
            }
        }

        return ((r) ? r : null);
    },
    //숫자 여부 체크
    isNumber: function (n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    },
    //현재 에디터 번호 또는 에디터 유형 일치 여부를 true/false로 반환
    is: function (s) {

        var t = this.getnum(); //editor type number
        if (typeof t === 'undefined') t = '';

        if (typeof s === 'undefined') {
            return t; //현재 에디터 번호
        } else {
            if (!this.isNumber(s)) {
                return (t.toString() == editortypes[s]); //에디터 비교
            } else {
                return (t.toString() == s.toString()); //에디터 비교
            }
        }
    },
    //에디터 텍스트명
    name: function () {
        var r = this.getname(this.is());
        return (r) ? r : '';
    }
};

/*******************************************/
//****** 양식 파일 내 공통 함수 정리 시작 *****
/********************************************/

// window.onload = initOnloadformedit;
function initOnloadformedit() {
    //console.log("initOnloadformedit Start : " + new Date().getHours() + ":" + new Date().getMinutes() + ":" + new Date().getSeconds() + "." + new Date().getMilliseconds());
    initialize();

    //첨부파일 있음 
    if ($('#ATTACH_FILE_INFO').val().replace(/\s/gi, "") != "") {
        $('#Doc_Etc_Info').text(Common.GetDic("lbl_apv_filelist_has"));
    }
    else {
        if (getInfo("templatemode") == "Read") {
            $("#DivFileAttachCtrl").hide();
        }
    }

    // 덧글 버튼 설정
    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {
        $("#tr_CommentTableMain").attr('colspan', '2');
    }
    //타 팀에 송신, 공유되지 않으며 본인 글은 수정, 삭제 가능합니다.
    var sSearchText = Common.GetDic("msg_comment_placeholder");
    $("#TDMStyle05").attr("placeholder", sSearchText);
    $('#formlogo').css("display", "");

    // 댓글 리스트
    var mode = getInfo("mode");
    if (!(mode == "DRAFT") && !(mode == "TEMPSAVE") && CFN_GetQueryString("Readtype") != 'preview' && getInfo("gloct") != "NOT_AUTH") {
        Get_WF_COMMENT_List();
    } else {
        if (mode == "TEMPSAVE") {
            var pPIID = getInfo('fiid');
            var pUSER_ID = getInfo("usid");
            var pDEPT_CODE = _DeptCode;
            var pPOS_CODE = getInfo("uslc");
            var pLNG_CODE = _LanguageCode;
            var connectionname = "FORM_DEF_ConnectionString";
            var pXML = "GET_COMMENT_LIST";
            var aXML = "<param><name>PIID</name><type>bigint</type><length>50</length><value><![CDATA[" + pPIID + "]]></value></param>";
            aXML += "<param><name>USER_ID</name><type>varchar</type><length>50</length><value><![CDATA[" + pUSER_ID + "]]></value></param>";
            aXML += "<param><name>DEPT_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pDEPT_CODE + "]]></value></param>";
            aXML += "<param><name>POS_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pPOS_CODE + "]]></value></param>";
            aXML += "<param><name>LNG_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pLNG_CODE + "]]></value></param>";
            aXML += "<param><name>TYPE</name><type>char</type><length>1</length><value><![CDATA[S]]></value></param>";
            var sXML = "<Items><connectionname>" + connectionname + "</connectionname><xslpath></xslpath><sql><![CDATA[" + pXML + "]]></sql><type>sp</type>" + aXML + "</Items>";
            var szURL = "/Approval/getXMLQuery.aspx";
            CFN_CallAjax(szURL, sXML, function (data) {
                var xmlReturn = data;
                var errorNode = $(xmlReturn).find("error");
                if (errorNode.length > 0) {
                    Common.Error("Desc: " + $(errorNode).text());
                } else {
                    if ($(xmlReturn).find('Table').length > 0) {
                        $('#TDMStyle05').val($(xmlReturn).find("Table").eq(0).find("COMMENT").text().trim());
                        $('#whichDeptReply').text(Common.GetDic("lbl_apv_Sending_Dept_Reply"));//임시함 의견있을경우 기본 발신댓글
                    }
                    else {
                        $('#whichDeptReply').text(Common.GetDic("lbl_apv_Sending_Dept_Reply"));//기본 발신댓글
                    }
                }
            }, false, "xml");
        }
        else {
            $('#whichDeptReply').text(Common.GetDic("lbl_apv_Sending_Dept_Reply"));//기본 발신댓글
        }
    }

    //if (getInfo("pdef") == "COOPERATION_PATTERN" && (mode != "DRAFT" && mode != "TEMPSAVE")) {
    if ((getInfo("pdef") == "COOPERATION_PATTERN" || getInfo("pdef") == "STEP3_PATTERN") && mode != "DRAFT") {
        SetCooperationInfo();
    }
    else if ((getInfo("pdef") == "COOPERATION_PATTERN" || getInfo("pdef") == "STEP3_PATTERN") && getInfo("reuse") == "C" && $("#CONSULT_LIST").val() != "") {
        SetCooperationInfo();
    }

    if ($("#CONSULT_DATE") != null && $("#CONSULT_DATE") != undefined && $("#CONSULT_DATE").length > 0) {
        $('body').append("<input id=\"hidConsultDate\" type=\"hidden\" value=\"" + $("#CONSULT_DATE").val() + "\" />"); // 협조처 추가삭제시 사용
    }

    if (getInfo("templatemode") == "Read" && $("#CONSULT_DATE") != null && $("#CONSULT_DATE") != undefined && $("#CONSULT_DATE").length > 0) {
        if (getInfo("INCREASE_CONSULT_DATE_YN") == "Y") {
            //$("#CONSULT_DATE").text($("#CONSULT_DATE").text() + "(" + Common.GetDic("btn_apv_IncreaseCooperation") + ")");
            if ($("#CONSULT_DATE").prop("tagName").toLowerCase() != "input") {
                $("#CONSULT_DATE").parent().append("<span style='color: red; font-weight: bold; vertical-align: middle;'>(" + Common.GetDic("btn_apv_IncreaseCooperation") + ")</span>");
                $("#CONSULT_DATE").parent().css("width", "230px");
            }
        }
        else {
            //if (getInfo("loct") != "REJECT" && getInfo("loct") != "COMPLETE" && getInfo("loct") != "ARCHIVE" && $('#CONSULT_LIST').val() != "" && $('#CONSULT_LIST').val().indexOf(":N:") > -1) {
            if (getInfo("loct") != "REJECT" && getInfo("loct") != "COMPLETE" && getInfo("loct") != "ARCHIVE" && ($('#CONSULT_LIST').val().indexOf(":N:") > -1 || getInfo("coperationCompletedAt") != "Y")) {
                var CONSULT_DATE_ServerTime = CFN_TransServerTime($("#CONSULT_DATE").text());
                var today = new Date();
                var dateArray = CONSULT_DATE_ServerTime.split("-");

                var dateObj = new Date(dateArray[0], Number(dateArray[1]) - 1, dateArray[2]);
                if (dateObj < today) {
                    var betweenDay = parseInt((today.getTime() - dateObj.getTime()) / 1000 / 60 / 60 / 24);
                    //alert(betweenDay+"일 지연");
                    if (betweenDay > 0)
                        //$("#CONSULT_DATE").text($("#CONSULT_DATE").text() + "(" + String.format("{0}{1}", betweenDay, Common.GetDic("msg_apv_dayDelay")) + ")");
                        $("#CONSULT_DATE").parent().append("<span style='color: red; font-weight: bold; vertical-align: middle;'>(" + String.format("{0}{1}", betweenDay, Common.GetDic("msg_apv_dayDelay")) + ")</span>")
                }
            }
        }
    }

    //TO-DO : 본문 재사용일 경우 협조처 정보는 초기화 한다
    //2017-06-14 BY YJYOO
    if (getInfo("reuse") == 'Y' || getInfo("reuse") == "C" || getInfo("reuse") == "P") {
        //양식 중간 <의견> 표시
        $('#ApvLineAttach').html('');
        $('#ApvLineTemp_comment').html('');
        $('#ApvLineTemp_exa_comment').html('');
        $('#ApvLineTemp_special').html('');
        //양식 하단 <의견> 표시 
        $('#Comment_table_exa').html('');
        $('#Comment_table_spec').html('');
        $('#Comment_table').html('');
        $('#Comment_table_REC').html('');

        if ($("#CONSULT_LIST").val() == "") {
            $("#CONSULT_DATE").val('');
        }
        else {
            var today = new Date();
            var holiydaycheck = 0;
            for (var i = 1; i <= 5; i++) {
                today.setDate(today.getDate() + 1);
                if (0 < today.getDay() && today.getDay() < 6) {
                    //평일
                } else {
                    if (today.getDay() == 0 && holiydaycheck == 0)
                        holiydaycheck = 1;
                    else
                        holiydaycheck = 2;
                }
            }
            today.setDate(today.getDate() + holiydaycheck);

            var mm = today.getMonth() + 1;
            var dd = today.getDate();
            var yyyy = today.getFullYear();
            if (today.getDate() < 10) {
                dd = '0' + today.getDate()
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            var dataChange = CFN_TransDateLocalFormat(yyyy + "-" + mm + "-" + dd);
            $('#CONSULT_DATE').val(dataChange);
        }
    }
    //console.log("initOnloadformedit END : " + new Date().getHours() + ":" + new Date().getMinutes() + ":" + new Date().getSeconds() + "." + new Date().getMilliseconds());
}

function initialize() {

    // [2015-09-01 add] 기본 가로크기 유지
    if (!_mobile) {
        var vwidth = 810;
        $("form[id='menu']").css('min-width', vwidth - 20);
        if (m_oFormMenu.g_IS_TabUI == "Y") {
            $("#divMenu").closest("div").css('min-width', vwidth - 70);
        }
        if (m_oFormMenu.g_IS_TabUI != "Y") {
            $("body").css("overflow", "visible");
        }
    }

    //배포 사용시 수신확인 보이기
    if (getInfo("scIPub") == "1") {
        // document.getElementById("trRApvLine").style.display = "";
    }

    //초기화
    initForm();

    // 신청프로세스 수신부서일경우 도착시 결재선 생성함 // 20200629 hpark 자동결재라인,연동시스템 결재선 병합
    var b_isRecDept = false;
    if (getInfo("USE_BASIC_APPROVAL_LINE") == "Y" && getInfo("pdef") == "REQUEST_PATTERN" && getInfo("mode") == "REDRAFT" && getInfo("loct") == "APPROVAL") {
        if (document.getElementById("APVLIST").value != "") {
            var m_oApvList = $.parseXML(document.getElementById("APVLIST").value);
            if ($(m_oApvList).find("step taskinfo[status='pending']").closest("step").attr("routetype") == "receive_dept") b_isRecDept = true;
        }
    }

    //2012차기버전작업 : 결재선 함수 호출이 중복으로 호출 하여 수정함.
    //if (getInfo("mode") == "DRAFT"
    //        || getInfo("mode") == "TEMPSAVE"
    //        || ((getInfo("loct") == "APPROVAL" || getInfo("loct") == "REDRAFT") && getInfo("mode") == "REDRAFT")
    //        || (getInfo("loct") == "REDRAFT" && getInfo("mode") == "SUBREDRAFT" && getInfo("scRecAssist") == "1") //부서협조일경우 수신부서에서 열었을때 접수사용으로 되어 있으면 결재선을 그려 줘야함
    //    ) {
    //TO-DO : 신세계 Customizing 기안자가 수신부서의 결재선 까지 지정하기 때문에 REDRAFT 의 케이스 제거하여 Setdomaindata 함수를 거치지 않도록 함
    //2016-10-05 BY YJYOO
    if (getInfo("mode") == "DRAFT"
            || getInfo("mode") == "TEMPSAVE"
            || (getInfo("loct") == "REDRAFT" && getInfo("mode") == "SUBREDRAFT" && getInfo("scRecAssist") == "1") //부서협조일경우 수신부서에서 열었을때 접수사용으로 되어 있으면 결재선을 그려 줘야함
			|| b_isRecDept // 신청프로세스 수신부서일경우 도착시 결재선 생성함 // 20200629 hpark 자동결재라인,연동시스템 결재선 병합
        ) {
        //결재선 본문만 가져오기 수정
        //2016-06-15 BY YJYOO
        if (getInfo("reuse") == "P" || getInfo("reuse") == "INVEST") {
            setDomainData();
        }
        else {
            if (getInfo("reuse") != "P"
            && openMode != "W"
            && (getInfo('editmode') != 'Y' || (getInfo('editmode') == 'Y' && getInfo("reuse") == "Y"))) {
                //TO-DO : 신세계 Customizing 사항 : 최근 결재선 기능을 사용하지 않는다.!
                //2016-07-19 BY YJYOO
                //설정된 결재선 가져오기
                setDomainData();
                //initApvList();
            } else if (getInfo("editmode") == 'Y' && getInfo("reuse") == "C") {
                //설정된 결재선 가져오기
                setDomainData();
            }
            else {
                //결재선 그리기
                initApvList();
            }
        }
        if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {
            $("#DOC_NO").val("");
        }
    } else {
        if (gFromAdminPreviewYN == "Y") { //관리자화면에서 미리보기한 경우 HIW 
            //설정된 결재선 가져오기
            setDomainData();
        }
        else {
            //TO-DO : 결재 진행 중일때 담당업무 에 person을 추가한다
            //if (getInfo("mode") == "PROCESS" || getInfo("mode") == "APPROVAL") {
            //    SetRolePerson();
            //}
            //결재선 그리기
            initApvList();
        }

        /* 공시여부 대상여부 체크*/
        if (getInfo("chkPulicObjectYN") == "Y") {
            var sURL = "/Approval/Controls/ApprovalWebservice.asmx";
            var oResult = CFN_CallAjaxJson(sURL + "/GetPublicObjectList", "{DN_Code:'" + _DN_Code + "', FORM_INST_ID:'" + getInfo("fiid") + "', MODE:'VIEW'}", false, null);
            var oRsltJSON = $.parseJSON(oResult);
            var xmlReturn = JSON.parse(oRsltJSON.d);

            Table1 = xmlReturn.NewDataSet.Table;
            if (Table1 != null && Table1 != undefined && $(Table1).length > 0) {
                $(".td_ApvLineInfo").prepend("<span id=\"ApvLinePulicObject\" style=\"font-size:14px;text-align:right; font-weight:bold; margin:5px 0; color:blue;float:left\"><span onclick='fn_PublicObjectType();' style='cursor:pointer'>" + "&lt;" + Common.GetDic("lbl_public_target") + "&gt;" + "</span></span>"); //다국어 :공시대상
            }
            else {
                $(".td_ApvLineInfo").prepend("<span id=\"ApvLinePulicObject\" style=\"font-size:14px;text-align:right; font-weight:bold; margin:5px 0; color:blue;float:left\"><span onclick='fn_PublicObjectType();' style='cursor:pointer'>" + "&lt;" + Common.GetDic("lbl_public_nontarget") + "&gt;" + "</span></span>"); //다국어 :공시 미대상
            }
        }
        /* 공시여부 대상여부 체크*/

    }

    if (gFromAdminPreviewYN == "Y") {   //관리자화면에서 미리보기한 경우 HIW 
        $('#headname').text($('#divFormGenerator_if', parent.document).contents().find('#fmnm').val());     //양식타이틀

        if (gUseEditYN == "Y")
            SetWebEditorContents();     //웹에디터내용 Display
    }

    if (getInfo("legacydata") != "") {
        fnLegacy();
    }

    //하이멕스, 트랜스 리드 모든양식 전결라인 셋팅 - 양식 오픈 시 전결라인 결재선 셋팅
    try {
        if (window.event != null || window.event.type != null)
            if (window.event.type === "load") {
                switch (getInfo("etid")) {
                    //미주 : [하이멕스, 트랜스리드] 양식 오픈 시 결재라인 자동으로 넣기(모든 양식) 
                    case "H302":
                    case "H205":
                        if (getInfo("mode") == "DRAFT" && getInfo("templatemode") == "Write") {
                            //재사용이 아닐 경우 
                            if (getInfo("reuse") == "" && getInfo("reuseinfo") == "") { fn_SetCommonApvLine(); }
                        }
                        break;
                }
            }
    }
    catch (ex) { }

    //[2017-01-18 현기차 결재 진행 단계 뿌려주기] 김지현
    //APV_STEP

}
function SetRolePerson() {
    var _APVData = $.parseXML(document.getElementById("APVLIST").value);
    var oCurrentRole = $(_APVData).find("steps > division:has(>taskinfo[status='pending']) > step > ou > role:has(taskinfo[status='pending'])");
    if (oCurrentRole.length != 0) {
        var oPerson = _APVData.createElement("person");
        $(oPerson).attr("code", getInfo("usid"));
        $(oPerson).attr("name", getInfo("usdn"));
        $(oPerson).attr("position", getInfo("uspc") + ";" + getInfo("uspn"));
        $(oPerson).attr("title", getInfo("ustc") + ";" + getInfo("ustn"));
        $(oPerson).attr("level", getInfo("uslc") + ";" + getInfo("usln"));
        $(oPerson).attr("oucode", getInfo("dpid"));
        $(oPerson).attr("ouname", getInfo("dpdn"));
        $(oPerson).attr("sipaddress", getInfo("ussip"));
        $(oCurrentRole).append(oPerson);
        document.getElementById("APVLIST").value = CFN_XmlToString(_APVData);
    }
}
function initForm() {

    initFields();
    //첨부쪽 처리
    G_displaySpnAttInfo(false);

    //2012차기버전작업
    //2012차기버전작업
    //연결문서 관련
    try { G_displaySpnDocLinkInfo(); } catch (e) { }
    try { G_displaySpnRejectDocLinkInfo(); } catch (e) { }
    try { if (getInfo("scPM") == "1") G_displaySpnPMLinkInfo((getInfo("scPMV") == "" ? null : getInfo("scPMV"))); } catch (e) { }

}

//에디터 타입 참조방식 변경 : KJW : 2014-04-23 : XFROM PRJ.
//읽기 / 쓰기 통합으로 수정
function initFields(szBody) {
    ////debugger;

    //공통 처리 상단 시작
    if (typeof window.setLabel == "function") {
        setLabel()
    };

    setFields("dField");
    setFields("cField");

    //기타 필드 채우기
    /*******************************************************************
    TO-DO : 본래 보존년한, 보안등급, 문서 분류가 이곳에서 바인딩 되었으나
            공통화 될 수 없는 문제로 각 함수를 양식 부분에서 함수 처리
    *********************************************************************/
    //if (getInfo("templatemode") == "Write" && getInfo("scCMB") == "0") {
    //    setSaveTerm();  //보존년한 create	
    //    if (getInfo('scApvLineTypeauto') != 'R') {
    //        //setDocLevel();  // 보안등급 create}
    //    }

    //    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {
    //        //setDocClass();  //문서분류 대입 (2012-04-02 HIW)
    //    }
    //}
    //공통 처리 상단 끝

    //쓰기인 경우 시작
    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {
        // 아래 부분 확인
        // 개별 스크립트로 이동
        //setCtrlsmFields("smField");


        //양식명 옆의 버튼이 여기는 false, 양식별 template에서는 true 확인이 필요.
        //document.getElementById("headname").innerHTML = initheadname(getLngLabel(getInfo("fmnm"), false));
        // 양식 타이틀명 다국어 정보 조회
        // 2017-05-08 BY YJYOO
        //document.getElementById("headname").innerHTML = initheadname(Common.GetDic("FormTitle_" + getInfo("etid") + "_" + getInfo("fmpf"), false));
        document.getElementById("headname").innerHTML = getInfo("fmtitle");

        // 회사별 슬로건 다국어 정보 조회
        // 2017-05-08 BY YJYOO
        if (getInfo('Form_slogan') == 'Y') {
            //var ApprovalSlogan = null
            //if (Common.GetBaseCode("ApprovalSlogan", "Code='" + getInfo("fmslogan") + "'").CacheData.length > 0)
            //    ApprovalSlogan = Common.GetBaseCode("ApprovalSlogan", "Code='" + getInfo("fmslogan") + "'").CacheData[0].CodeName;
            //else
            //    ApprovalSlogan = "";

            //document.getElementById("sloganname").innerHTML = ApprovalSlogan;
            document.getElementById("sloganname").innerHTML = getInfo("fmslogan");
        }


        document.getElementById("INITIATOR_INFO").value = getInfo("usdn");
        //document.getElementById("APPLIED").value = formatDate(getInfo("svdt"), "D");
        document.getElementById("APPLIED").value = getInfo("svdt");
        $("#INITIATED_DATE").val(getInfo("svdt")); // 20171204 hpark m/r/dField 날짜포멧 변경 - 기안일자 공통으로 처리, 전화번호도 같이 추가
        if (getInfo("mode") != "TEMPSAVE") {
            $("#TELEPHONE").val(getInfo("ustp"));
        }

        // 20171218 hpark 기안부서, 기안자명칭 다국어 처리
        $("#INITIATOR_OU_DP").val(m_oFormMenu.getLngLabel(getInfo("dpdn"), false));
        $("#INITIATOR_DP").val(m_oFormMenu.getLngLabel(getInfo("usdn"), false) + " " + m_oFormMenu.getLngLabel(getInfo("uspn"), false));

        //개별 양식 후처리로 이동
        //양식별 추가 정보 초기화
        //해당 함수가 존재하는지 확인 후 실행 : KJW : 2014.02.022 : XFORM PRJ.
        if (typeof setFormInfoDraft === 'function') {
            setFormInfoDraft();
        }

        //본문 내용
        //에디터 처리 별도 함수 구성 setEditor
        /*
        if (editortype.is('tagfree') || (editortype.is('tagfreenxfree') && window.ActiveXObject !== undefined)) {

            if (document.getElementById("tbContentElement") == null) {
                if (getInfo("BODY_CONTEXT") != undefined) {
                    setBodyContext(getInfo("BODY_CONTEXT"));
                } else {
                    setBodyContext(getInfo("fmbd").replace("euc-kr", "utf-8"));
                }
            }
        } else if (editortype.is('crosseditor') || (editortype.is('activesquaredefault') && window.ActiveXObject === undefined)) {

        } else {
            if (getInfo("BODY_CONTEXT") != undefined) {
                setBodyContext(getInfo("BODY_CONTEXT"));
            } else {
                setBodyContext(getInfo("fmbd").replace("euc-kr", "utf-8"));
            }
        }
        */

    }//쓰기인 경우 끝
        //읽기인 경우 시작
    else {
        settFields("tField");

        document.getElementById("SUBJECT").value = getInfo("SUBJECT");
        //document.getElementById("headname").innerHTML = "<u>" + getLngLabel(getInfo("fmnm")) + "</u>";
        // 양식 타이틀명 다국어 정보 조회
        // 2017-05-08 BY YJYOO
        //document.getElementById("headname").innerHTML = initheadname(Common.GetDic("FormTitle_" + getInfo("ENT_CODE") + "_" + getInfo("fmpf"), false));
        document.getElementById("headname").innerHTML = getInfo("fmtitle");
        // 회사별 슬로건 다국어 정보 조회
        // 2017-05-08 BY YJYOO
        if (getInfo('Form_slogan') == 'Y') {
            //var ApprovalSlogan = null
            //if (Common.GetBaseCode("ApprovalSlogan", "Code='" + getInfo("fmslogan") + "'").CacheData.length > 0)
            //    ApprovalSlogan = Common.GetBaseCode("ApprovalSlogan", "Code='" + getInfo("fmslogan") + "'").CacheData[0].CodeName;
            //else
            //    ApprovalSlogan = "";

            //document.getElementById("sloganname").innerHTML = ApprovalSlogan;
            document.getElementById("sloganname").innerHTML = getInfo("fmslogan");
        }
        //용도 불분명
        //setFormInfoEdit();

        //본문 내용
        /*
        if (getInfo("BODY_CONTEXT") != undefined) {
            setBodyContext(getInfo("BODY_CONTEXT"));
        } else {
            if (getInfo("fmbd") != "undefined") {
                setBodyContext(getInfo("fmbd"));
            }
        }
        */

        // 20171218 hpark 기안부서, 기안자명칭 다국어 처리
        try {
            if ($("#INITIATOR_OU_DP").prop("tagName").toLowerCase() == "span") {
                if ($("#INITIATOR_OU_DP").attr("readonly") && $("#INITIATOR_OU_DP").attr("readonly").toLowerCase() == "readonly") {
                    $("#INITIATOR_OU_DP").text(m_oFormMenu.getLngLabel(getInfo("INITIATOR_OU_NAME"), false));
                }
            } else {
                if ($("#INITIATOR_OU_DP").attr("readonly") && $("#INITIATOR_OU_DP").attr("readonly").toLowerCase() == "readonly") {
                    $("#INITIATOR_OU_DP").val(m_oFormMenu.getLngLabel(getInfo("INITIATOR_OU_NAME"), false));
                }
            }
        }
        catch (e) {
        }

        try {
            if ($("#INITIATOR_DP").prop("tagName").toLowerCase() == "span") {
                var tmp_oApvList = $.parseXML(document.getElementById("APVLIST").value);
                var tmp_initPositionName = $(tmp_oApvList).find("steps > division[divisiontype='send']").find("person:eq(0)").attr("positionname");
                if (!tmp_initPositionName) tmp_initPositionName = "";
                $("#INITIATOR_DP").text(m_oFormMenu.getLngLabel(getInfo("INITIATOR_NAME"), false) + " " + m_oFormMenu.getLngLabel(tmp_initPositionName, false));
            }
            else {
                var tmp_oApvList = $.parseXML(document.getElementById("APVLIST").value);
                var tmp_initPositionName = $(tmp_oApvList).find("steps > division[divisiontype='send']").find("person:eq(0)").attr("positionname");
                if (!tmp_initPositionName) tmp_initPositionName = "";
                $("#INITIATOR_DP").val(m_oFormMenu.getLngLabel(getInfo("INITIATOR_NAME"), false) + " " + m_oFormMenu.getLngLabel(tmp_initPositionName, false));
            }
        }
        catch (e) {
        }

        // 협조기간 KMMG - 기초설정 CooperDurationDisplayYN 값에 따라 일반품의류인 경우 공통헤더 하단에 협조기간 표시
        try {
            if (getInfo("templatemode") == "Read") {
                var initEntCode = (getInfo("ENT_CODE")) ? getInfo("ENT_CODE") : getInfo("etid");
                //var initCooperDurationDisplayYN = Common.GetDomainBaseConfig("CooperDurationDisplayYN", initEntCode);
                var initCooperDurationDisplayYN = _BaseConfigApv.CooperDurationDisplayYN;
                if (initCooperDurationDisplayYN == "Y" && getInfo("pdef") == "GENERAL_PATTERN") {
                    var arrDepartment = getInfo("cooperDurationDepartment").split("|");
                    var arrCooperation = getInfo("cooperDurationCooperation").split("|");
                    var arrFinal = getInfo("cooperDurationFinal").split("|");
                    var oLangApprovalDays = "";
                    var oLangDepartment = "";
                    var oLangCooperation = "";
                    var oLangFinalApproval = "";

                    if (formJson && formJson.oLang) {
                        oLangApprovalDays = (formJson.oLang.lbl_apv_approalDuration) ? formJson.oLang.lbl_apv_approalDuration : "ApprovalDays";
                        oLangDepartment = (formJson.oLang.lbl_apv_sendDepartment) ? formJson.oLang.lbl_apv_sendDepartment : "Department";
                        oLangCooperation = (formJson.oLang.lbl_apv_Cooperation) ? formJson.oLang.lbl_apv_Cooperation : "Cooperation";
                        oLangFinalApproval = (formJson.oLang.lbl_apv_finalapproval) ? formJson.oLang.lbl_apv_finalapproval : "Final Approval";
                    }

                    // Department : 12/06(0days), Cooperation : 12/06(0days), Final Approval : (0days)
                    if (arrDepartment.length == 2 && arrCooperation.length == 2 && arrFinal.length == 2 && $("#ConsultLine").length == 1) {
                        var departmentDate = "";
                        //if (arrDepartment[0].length > 8) departmentDate = oLangDepartment + " : " + arrDepartment[0].substring(4, 6) + "/" + arrDepartment[0].substring(6, 8) + "(" + arrDepartment[1] + ")";
                        if (arrDepartment[0].length > 8) departmentDate = oLangDepartment + " : " + CFN_TransLocalTime(arrDepartment[0]).substring(0, 10) + "(" + arrDepartment[1] + ")";
                        else departmentDate = oLangDepartment + " : " + "(" + arrDepartment[1] + ")";
                        var cooperationDate = "";
                        //if (arrCooperation[0].length > 8) cooperationDate = oLangCooperation + " : " + arrCooperation[0].substring(4, 6) + "/" + arrCooperation[0].substring(6, 8) + "(" + arrCooperation[1] + ")";
                        if (arrCooperation[0].length > 8) cooperationDate = oLangCooperation + " : " + CFN_TransLocalTime(arrCooperation[0]).substring(0, 10) + "(" + arrCooperation[1] + ")";
                        else cooperationDate = oLangCooperation + " : " + "(" + arrCooperation[1] + ")";
                        var finalDate = "";
                        //if (arrFinal[0].length > 8) finalDate = oLangFinalApproval + " : " + arrFinal[0].substring(4, 6) + "/" + arrFinal[0].substring(6, 8) + "(" + arrFinal[1] + ")";
                        if (arrFinal[0].length > 8) finalDate = oLangFinalApproval + " : " + CFN_TransLocalTime(arrFinal[0]).substring(0, 10) + "(" + arrFinal[1] + ")";
                        else finalDate = oLangFinalApproval + " : " + "(" + arrFinal[1] + ")";

                        var displayContent = departmentDate + ", " + cooperationDate + ", " + finalDate;
                        $("#ConsultLine").after("<tr><th>" + oLangApprovalDays + "</th><td colspan='3'>" + displayContent + "</td>");
                    }
                }
            }
        }
        catch (e) { }

    }//읽기인 경우 끝

    if (getInfo("reuse") == 'Y' || getInfo("reuse") == "C" || getInfo("reuse") == "P") {
        if (getInfo("reuse") == "C" && formJson.oFormData.BODY_CONTEXT != null) {
            //결재문서 첨부 초기화
        }
        else {
            $("#DOCLINKS").text('');
        }
    }
    //하단 용도 불분명 확인 요
    /*
    if (getInfo("reuse") == "P") {
        if (getInfo("BODY_CONTEXT") != undefined) {
            setBodyContext(getInfo("BODY_CONTEXT"));
        }
    }
    */
}

// initfields()에서 함수 존부를 체크하므로 setFormInfoDraft() 함수를 제거
// KJW : 2014.04.23 : XFORM PRJ.

function setTagFreeBug() {
    if (getInfo("BODY_CONTEXT") != undefined) {     //기안,임시저장으로 저장된 값 setting        
        setBodyContext(getInfo("BODY_CONTEXT"));
        try { G_displaySpnDocLinkInfo(); } catch (e) { }
    } else {//양식 생성 시 입력한 본문내역 조회            
        if (getInfo("fmbd") != "undefined") {
            try { var dom = tbContentElement.getDom(); dom.body.innerHTML = getInfo("fmbd"); } catch (e) { }
        }
    }
}

function setBodyContext(bodyXml) {
    //data를 가져온 후 재처리가 필요한 경우를 대비
    try {

        setInfo("BODY_CONTEXT", bodyXml);

        //BODY_CONTEXT json object 처리
        if (typeof formJson.oFormData.BODY_CONTEXT == 'undefined') {
            var tempObj = {};
            tempObj["BODY_CONTEXT"] = $.xml2json(bodyXml);
            if (typeof formJson.BODY_CONTEXT == 'undefined') {
                formJson = mergeJsonObj(formJson, tempObj);
            }
        }
        else {
            formJson.BODY_CONTEXT = $.xml2json(bodyXml);
        }

        if (typeof formJson.BODY_CONTEXT != 'undefined' && formJson.BODY_CONTEXT != null) {
            $.each(formJson.BODY_CONTEXT, function (key, value) {
                var $target;
                //key를 id로 가지는 element가 존재하면
                if ($('#' + key).length) {
                    if ($('#' + key)[0].nodeName == "SPAN") {
                        $('#' + key).text(value);
                    } else {
                        $('#' + key).val(value);
                    }
                }
            });

            //후처리 재실행
            postJobForDynamicCtrl();
        }
    } catch (e) {
        alert("Error at setBodyContext");
    }
}

// editor type 참조 방법 수정 : KJW : 2014.04.23 : XFORM PRJ.
/*** 데이터 뿌려주기 - Value ***/
function innerHtmlData(nodeNm, nodeVal) {
    var dom;
    var commonEditorType = _BaseConfigApv.EditorType;//Common.GetBaseConfig('EditorType');//GetBaseConfig 변경 2019.03
    //쓰기 모드인 경우
    if (getInfo("templatemode") == "Write") {

        if (document.getElementsByName(nodeNm)[0] != undefined) {
            // 첨부 처리
            // setForm_Attach 정의한 함수가 없음 아래 주석 처리
            /*
            if (nodeNm.indexOf("FORM_ATTACH") != -1) {
                setForm_Attach(nodeVal);
                document.getElementsByName(nodeNm)[0].value = nodeVal;
            }
            */
            // Radio 처리
            if (nodeNm.indexOf("OPT") != -1 || nodeNm.indexOf("RDO") != -1 || nodeNm.indexOf("RDV") != -1) {
                setRadio(nodeNm, nodeVal);
            }
                // checkbox 처리
            else if (nodeNm.indexOf("CHK") != -1) {
                setChk(nodeNm, nodeVal);
            }
                // 에디터 처리
            else if (nodeNm.indexOf("tbContentElement") != -1) {
                switch (commonEditorType) {
                    case editortypes['textarea']:
                        document.getElementById("txtareaBody").value = nodeVal;
                        break;
                    case editortypes['dhtml']: break;
                    case editortypes['tagfree']:
                        dom = document.tbContentElement.getDom();
                        dom.body.innerHTML = nodeVal.replace(/<br \/>/gi, "");
                        break;
                    case editortypes['xfree']:
                        tbContentElement.SetHtmlValue(nodeVal);
                        break;
                    case editortypes['tagfreenxfree']:
                        if (_ie) {
                            dom = document.tbContentElement.getDom();
                            dom.body.innerHTML = nodeVal.replace(/<br \/>/gi, "");
                        } else { tbContentElement.SetHtmlValue(nodeVal); }
                        break;
                    case editortypes['activesquare']:
                        document.tbContentElement.value = nodeVal;
                        break;
                }
            }
                //이외의 후처리가 필요한 mField
            else {
                document.getElementsByName(nodeNm)[0].value = nodeVal;
            }
        }
        else {
            if (nodeNm.indexOf("tbContentElement") != -1) {
                switch (commonEditorType) {
                    case editortypes['textarea']:
                        document.getElementById("txtareaBody").value = nodeVal;
                        break;
                    case editortypes['dhtml']:
                        break;
                    case editortypes['tagfree']:
                        dom = document.tbContentElement.getDom();
                        dom.body.innerHTML = nodeVal.replace(/<br \/>/gi, "");
                        break;
                    case editortypes['xfree']:
                        tbContentElement.SetHtmlValue(nodeVal);
                        break;
                    case editortypes['tagfreenxfree']:
                        if (_ie) {
                            dom = document.tbContentElement.getDom();
                            dom.body.innerHTML = nodeVal.replace(/<br \/>/gi, "");
                        } else { tbContentElement.SetHtmlValue(nodeVal); }
                        break;
                    case editortypes['activesquare']: document.tbContentElement.value = nodeVal;
                        break;
                }
            }
        }
    }
        // 읽기 모드인 경우
    else {
        if (document.getElementById(nodeNm) != undefined) {
            // radio
            if (nodeNm.indexOf("OPT") != -1) {
                setRadio(nodeNm, nodeVal);
            }
                // radio read
            else if (nodeNm.indexOf("RDO") != -1) {
                setRadioRead(nodeNm, nodeVal);
            }
                // 첨부, 주석처리
                /*
                else if (nodeNm.indexOf("FORM_ATTACH") != -1) {
                    setForm_Attach(nodeVal);
                }
                */
                // 에디터
            else if (nodeNm.indexOf("tbContentElement") != -1) {
                $("#tbContentElement").html(nodeVal); //.replace(/\n/gi, "<br \/>")
            }
                // 체크박스
            else if (nodeNm.indexOf("CHK") != -1) {
                setChkRead(nodeNm, nodeVal);
            } else {

                // 서버바인딩 테스트시 아래 주석 처리(2014-02-24 leesh)
                try {
                    document.getElementById(nodeNm).innerHTML = nodeVal.replace(/\n/gi, "<br \/>");
                } catch (e) {
                    document.getElementById(nodeNm).value = nodeVal;
                }
            }
        } else if (nodeNm.indexOf("RDV") != -1) {
            setRadioValueRead(nodeNm, nodeVal);
        }
    }
}

// editor data 처리를 위한 함수 추가
function setEditor() {
    ////debugger;
    var dom;
    var commonEditorType = _BaseConfigApv.EditorType;//Common.GetBaseConfig('EditorType');//GetBaseConfig 변경 2019.03
    //쓰기 모드인 경우
    if (getInfo("templatemode") == "Write") {

        switch (commonEditorType) {
            case editortypes['textarea']:
                if (getInfo("BODY_CONTEXT") != undefined) {
                    if (formJson.BODY_CONTEXT.tbContentElement["#cdata-section"]) {
                        document.getElementById("txtareaBody").value = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                    } else {
                        document.getElementById("txtareaBody").value = formJson.BODY_CONTEXT.tbContentElement.replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                    }
                } else {
                    if (getInfo("fmbd") != undefined) {
                        document.getElementById("txtareaBody").value = getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, "");
                    }
                }
                break;
            case editortypes['dhtml']: break;
            case editortypes['tagfree']:
                if (getInfo("BODY_CONTEXT") != undefined) {     //기안,임시저장으로 저장된 값 setting
                    dom = document.tbContentElement.getDom();
                    //dom.body.innerHTML = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                    if (formJson.BODY_CONTEXT.tbContentElement["#cdata-section"]) {
                        document.getElementById('tbContentElement').HtmlValue = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                    } else {
                        document.getElementById('tbContentElement').HtmlValue = formJson.BODY_CONTEXT.tbContentElement.replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                    }
                    try { G_displaySpnDocLinkInfo(); } catch (e) { }

                } else {//양식 생성 시 입력한 본문내역 조회            
                    if (getInfo("fmbd") != undefined) {
                        try {
                            var dom = document.tbContentElement.getDom();
                            //dom.body.innerHTML = getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, "");
                            document.getElementById('tbContentElement').HtmlValue = getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, "");
                        } catch (e) { }
                    }
                }
                //if (document.tbContentElement.ActiveTab > 0) window.setTimeout(setTagFreeBug, 500);
                break;
            case editortypes['xfree']:

                if (getInfo("BODY_CONTEXT") != undefined) {
                    if (formJson.BODY_CONTEXT.tbContentElement["#cdata-section"]) {
                        document.getElementById('xFreeFrame').contentWindow.tbContentElement.setHtmlValue(formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/\\n/gi, ""));
                    } else {
                        document.getElementById('xFreeFrame').contentWindow.tbContentElement.setHtmlValue(formJson.BODY_CONTEXT.tbContentElement.replace(/\\n/gi, ""));
                    }
                    try { G_displaySpnDocLinkInfo(); } catch (e) { }
                } else {
                    if (getInfo("fmbd") != undefined) {
                        try {
                            document.getElementById('xFreeFrame').contentWindow.tbContentElement.setHtmlValue(getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, ""));
                        } catch (e) { }
                    }
                }

                break;
            case editortypes['tagfreenxfree']:
                if (_ie) {
                    if (getInfo("BODY_CONTEXT") != undefined) {     //기안,임시저장으로 저장된 값 setting
                        dom = document.tbContentElement.getDom();
                        //dom.body.innerHTML = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                        if (formJson.BODY_CONTEXT.tbContentElement["#cdata-section"]) {
                            document.getElementById('tbContentElement').HtmlValue = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                        } else {
                            document.getElementById('tbContentElement').HtmlValue = formJson.BODY_CONTEXT.tbContentElement.replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                        }
                        try { G_displaySpnDocLinkInfo(); } catch (e) { }

                    } else {//양식 생성 시 입력한 본문내역 조회            
                        if (getInfo("fmbd") != undefined) {
                            try {
                                var dom = document.tbContentElement.getDom();
                                //dom.body.innerHTML = getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, "");
                                document.getElementById('tbContentElement').HtmlValue = getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, "");
                            } catch (e) { }
                        }
                    }
                    //if (document.tbContentElement.ActiveTab > 0) window.setTimeout(setTagFreeBug, 500);
                } else {
                    if (getInfo("BODY_CONTEXT") != undefined) {
                        if (formJson.BODY_CONTEXT.tbContentElement["#cdata-section"]) {
                            document.getElementById('xFreeFrame').contentWindow.tbContentElement.setHtmlValue(formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/\\n/gi, ""));
                        } else {
                            document.getElementById('xFreeFrame').contentWindow.tbContentElement.setHtmlValue(formJson.BODY_CONTEXT.tbContentElement.replace(/\\n/gi, ""));
                        }
                        try { G_displaySpnDocLinkInfo(); } catch (e) { }
                    } else {
                        if (getInfo("fmbd") != undefined) {
                            try {
                                document.getElementById('xFreeFrame').contentWindow.tbContentElement.setHtmlValue(getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, ""));
                            } catch (e) { }
                        }
                    }
                }
                break;
            case editortypes['activesquare']:
                if (getInfo("BODY_CONTEXT") != undefined) {
                    document.tbContentElement.value = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, "");
                } else {
                    if (getInfo("fmbd") != undefined) {
                        document.tbContentElement.value = getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, "");
                    }
                }
                break;
            case editortypes['crosseditor']:
            case editortypes['activesquaredefault']:
                var l_EditorType = false; // true : ActiveSquare , false : CrossEditor
                if (_ie) {
                    if (window.localStorage.getItem("EditorType") == "Active") {
                        try {
                            var Installx = new ActiveXObject("NamoWeCtl.2301100001.7.0"); //신세계 ProgID
                            if (Installx) Installed = true; else Installed = false;
                        }
                        catch (ex) { Installed = false; }
                        if (Installed) {
                            l_EditorType = true;
                        }
                        else {
                            l_EditorType = false;
                        }
                    }
                    else {
                        l_EditorType = false;
                    }
                }
                else {
                    l_EditorType = false;
                }

                if (l_EditorType) {
                    if (getInfo("BODY_CONTEXT") != undefined) {
                        setTimeout(function () { document.getElementById('xFreeFrame').contentWindow.tbContentElement.Value = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, ""); }, 1000);
                    } else {
                        if (getInfo("fmbd") != undefined) {
                            try {
                                setTimeout(function () { document.getElementById('xFreeFrame').contentWindow.tbContentElement.Value = getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, ""); }, 1000);
                            } catch (e) { }
                        }
                    }
                }
                else {
                    if (getInfo("BODY_CONTEXT") != undefined) {
                        document.getElementById('xFreeFrame').contentWindow.tbContentElement.SetBodyValue(formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/<br \/>/gi, "").replace(/\\n/gi, ""));
                    } else {
                        if (getInfo("fmbd") != undefined) {
                            try {
                                document.getElementById('xFreeFrame').contentWindow.tbContentElement.SetBodyValue(getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, ""));
                            } catch (e) { }
                        }
                    }
                }
                break;
            case editortypes['dext5']:
                // TODO: DEXT5 Test by 임동현 2015-07-30                
                if (getInfo("BODY_CONTEXT") != undefined) {

                    if (formJson.BODY_CONTEXT.tbContentElement["#cdata-section"]) {
                        document.getElementById('dext5Frame').contentWindow.DEXT5.setBodyValue(formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/\\n/gi, ""), 'dext5editor');
                    } else {
                        document.getElementById('dext5Frame').contentWindow.DEXT5.setBodyValue(formJson.BODY_CONTEXT.tbContentElement.replace(/\\n/gi, ""), 'dext5editor');
                    }

                    try { G_displaySpnDocLinkInfo(); } catch (e) { }
                } else {
                    if (getInfo("fmbd") != undefined) {
                        try {
                            document.getElementById('dext5Frame').contentWindow.DEXT5.setBodyValue(getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, ""), 'dext5editor');
                        } catch (e) { }
                    }
                }
                break;
            case editortypes['cheditor']:
                // TODO: ChEditor Test by 임동현 2015-08-04                
                if (getInfo("BODY_CONTEXT") != undefined) {
                    if (formJson.BODY_CONTEXT.tbContentElement["#cdata-section"]) {
                        document.getElementById('cheditorFrame').contentWindow.myeditor.loadContents(formJson.BODY_CONTEXT.tbContentElement["#cdata-section"].replace(/\\n/gi, ""));
                    } else {
                        document.getElementById('cheditorFrame').contentWindow.myeditor.loadContents(formJson.BODY_CONTEXT.tbContentElement.replace(/\\n/gi, ""));
                    }

                    try { G_displaySpnDocLinkInfo(); } catch (e) { }
                } else {
                    if (getInfo("fmbd") != undefined) {
                        try {
                            document.getElementById('cheditorFrame').contentWindow.myeditor.loadContents(getInfo("fmbd").replace("euc-kr", "utf-8").replace(/\\n/gi, ""));
                        } catch (e) { }
                    }
                }
                break;
        }
    }
    else {// 읽기 모드인 경우
        var tbContent;
        if (typeof formJson.BODY_CONTEXT.tbContentElement["#cdata-section"] != 'undefined') {
            tbContent = formJson.BODY_CONTEXT.tbContentElement["#cdata-section"];
        }
        else if (typeof formJson.BODY_CONTEXT.tbContentElement != 'undefined') {
            tbContent = formJson.BODY_CONTEXT.tbContentElement;
            //var test =  $.parseXML(tbContent);
        }
        else {
            tbContent = "error at setEditor().";
        }

        $("#tbContentElement").html(tbContent.replace(/\\n/gi, ""));
        $("#tbContentElement").find("input:text").prop("disabled", true);
        $("#tbContentElement").find("input:radio").prop("disabled", true);
        $("#tbContentElement").find("input:checkbox").prop("disabled", true);
        $("#tbContentElement").find("select").prop("disabled", true);
    }
}

//  dField, cField
// name-> id, id-> data-type, datafld->data-model 로 변경
// underscore로 binding이 일어나는 data와의 구분을 위한 data-binding attribute 추가
// CommonFields의 dField, cField && data-binding="post" 인 경우의 data 처리
function setFields(Fields) {
    ////debugger;
    var fld;
    var l_editor = "#editor";
    if (openMode == "P") {
        l_editor = CFN_GetCtrlById("editor");
    }

    //type이 Fields, data-binding="post"인 input, textarea 태그에 대한 처리
    $(l_editor).find("input[data-type='" + Fields + "'], textarea[data-type='" + Fields + "']").filter('*[data-binding="post"]').each(function (i, fld) {

        if ($(fld).attr("data-model") != null) {

            //id -> data-model
            if (getInfo($(fld).attr('id')) != undefined) {
                $(fld).val(getInfo($(fld).attr('id')));
            } else {
                if ((getInfo($(fld).attr("data-model")) != undefined)) {
                    $(fld).val(getInfo($(fld).attr("data-model")));
                } else {
                    $(fld).val('');
                }
            }

        }

        if ($(fld).attr('id') != null) {
            //미확인 일부 양식에서 사용 추측, 확인 후 이동 할 것
            if ($(fld).attr('id') == 'POSITION' && getInfo($(fld).attr('id')) == "") {
                $(fld).val(getInfo($(fld).attr("data-model")));
            }

            //CommonFields에서 처리
            if ($(fld).attr('id') == 'INITIATOR_NAME' && getInfo($(fld).attr('id')) == "") {
                $(fld).val(getInfo($(fld).attr("data-model")));
            }
            if ($(fld).attr('id') == 'INITIATOR_ID' && getInfo($(fld).attr('id')) == "") {
                $(fld).val(getInfo($(fld).attr("data-model")));
            }

        }
    });

}

//  tField 처리 방식 그대로 유지
// name-> id, id-> data-type, datafld->data-model 로 변경
// select && mField|dField 는 읽기 모드에서 tField로 변경
// input && dField 는 읽기 모드에서 tField로 변경
function settFields(Fields) {

    try {
        var fld;
        var l_editor = "#editor";
        if (openMode == "P") {
            l_editor = CFN_GetCtrlById("editor");
        }

        $(l_editor).find("td[data-type='" + Fields + "'],span[data-type='" + Fields + "']").each(function (i, fld) {

            if ($(fld).attr("data-model") != "") {
                if (getInfo($(fld).attr("id")) != undefined) {
                    $(fld).text(getInfo($(fld).attr("id")));
                }
                else {
                    if (getInfo($(fld).attr("data-model")) != undefined) {
                        $(fld).text(getInfo($(fld).attr("data-model")));
                    }//oFormData에 없는 경우 BODY_CONTEXT에서 가져 오는 구문 추가
                    else if (typeof formJson.BODY_CONTEXT[$(fld).attr("data-model")] != 'undefined') {
                        $(fld).text(formJson.BODY_CONTEXT[$(fld).attr("data-model")]);
                    }
                    else {
                        $(fld).text('');
                    }
                }
            }
        });
    } catch (e) {

    }


}

//  smField Input
function setCtrlsmFields(Fields) {
    var mBodyInfo;
    if (getInfo("bodyinfo") != undefined && getInfo("bodyinfo") != "") {
        mBodyInfo = $.parseXML(getInfo("bodyinfo"));
        var fld;
        var l_editor = "#editor";
        if (openMode == "P") l_editor = CFN_GetCtrlById("editor");
        $(l_editor).find("input[id='" + Fields + "'],textarea[id='" + Fields + "']").each(function (i, fld) {
            if ($(fld).attr("dataFld") != "") {
                if ($(mBodyInfo).find(" bodyinfo > bodydata > maintable > " + $(fld).attr("name")).text() != "") {
                    $(fld).val($(mBodyInfo).find(" bodyinfo > bodydata > maintable > " + $(fld).attr("name")).text());
                }
            }
        });
    }
}

//  smField -> underscore 바인딩으로 대체, 불필요시 삭제 할 것
function setsmFields(Fields) {
    var mBodyInfo;
    if (getInfo("bodyinfo") != undefined && getInfo("bodyinfo") != "") {
        mBodyInfo = $.parseXML(getInfo("bodyinfo"));
        var fld;
        var l_editor = "#editor";
        if (openMode == "P") l_editor = CFN_GetCtrlById("editor");
        $(l_editor).find("td[id='" + Fields + "'],span[id='" + Fields + "']").each(function (i, fld) {
            if ($(fld).attr("dataFld") != "") {
                if ($(mBodyInfo).find(" bodyinfo > bodydata > maintable > " + $(fld).attr("name")).text() != "") {
                    $(fld).html($(mBodyInfo).find(" bodyinfo > bodydata > maintable > " + $(fld).attr("name")).text().replace("\n", "<br/>"));
                }
            }
        });

        // 수신부서 결재자 수정 기능 구현(2013-10-14 leesh)
        $(l_editor).find("input[id='" + Fields + "'],textarea[id='" + Fields + "']").each(function (i, fld) {
            if ($(fld).attr("dataFld") != "") {
                if ($(mBodyInfo).find(" bodyinfo > bodydata > maintable > " + $(fld).attr("name")).text() != "") {
                    $(fld).val($(mBodyInfo).find(" bodyinfo > bodydata > maintable > " + $(fld).attr("name")).text());
                }
            }
        });
    }
}

//  stField
function setstFields(Fields) {
    var mBodyInfo;
    // json 변환 처리 할 것
    /*
    var mBodyData;
    if (typeof formJson.oFormData.bodyinfo_json.bodydata != 'undefined') {
        mBodyData = formJson.oFormData.bodyinfo_json.bodydata;
    }
    */

    if (getInfo("bodyinfo") != undefined && getInfo("bodyinfo") != "") {
        mBodyInfo = $.parseXML(getInfo("bodyinfo"));
        var mSubTable1 = $(mBodyInfo).find(" bodyinfo > bodydata > sub_table1 ");
        if ($(mSubTable1).length > 0) {
            $(mSubTable1).each(function (i, fld) {
                fnAddRow("sub_table1", fld);
            });
        }
        var mSubTable2 = $(mBodyInfo).find(" bodyinfo > bodydata > sub_table2 ");
        if ($(mSubTable2).length > 0) {
            $(mSubTable2).each(function (i, fld) {
                fnAddRow2("sub_table2", fld);
            });
        }
        var mSubTable3 = $(mBodyInfo).find(" bodyinfo > bodydata > sub_table3 ");
        if ($(mSubTable3).length > 0) {
            $(mSubTable3).each(function (i, fld) {
                fnAddRow3("sub_table3", fld);
            });
        }
        var mSubTable4 = $(mBodyInfo).find(" bodyinfo > bodydata > sub_table4 ");
        if ($(mSubTable4).length > 0) {
            $(mSubTable4).each(function (i, fld) {
                fnAddRow4("sub_table4", fld);
            });
        }
    }
}

/* 
    tblAllDelRow(objName, index) 
    moved to formutility.js 
    by KJW : 2014.04.21 : XFORM PRJ.
*/

////문서등급 조회
//function setDocLevel_READ(codegroup, szCode) {
//    var szName = '';
//    /*보광그룹변경
//    switch (szCode){
//    case "10" : szName = "공개";break;
//    case "20" : szName = "대외비";break;
//    case "30" : szName = "중요";break;
//    case "40" : szName = "극비";break;	
//    }
//    */

//    //일반문서, 보안문서
//    //switch (szCode) {
//    //    case "0": szName = Common.GetDic("DocSecurityGrade_0"); break;
//    //    case "1": szName = Common.GetDic("DocSecurityGrade_1"); break;
//    //}
//    if (codegroup != "" && szCode != "")
//        szName = Common.GetDic(codegroup + "_" + szCode);
//    else
//        szName = "";
//    return szName;
//}

////보존년한 조회
//function setSaveTerm_READ(codegroup, szCode) {
//    var szName = '';
//    if (codegroup != "" && szCode != "")
//        szName = Common.GetDic(codegroup + "_" + szCode);
//    else
//        szName = "";
//    return szName;
//}

function setDFieldSAVE_TERM(obj) {
    $("#SAVE_TERM").val(obj.value);
    //console.log("DOC_LEVEL : " + $("#DOC_LEVEL").val());
    //console.log("SAVE_TERM : " + $("#SAVE_TERM").val());
    //console.log("EXPIRE_DATE : " + $("#EXPIRE_DATE").val());
}
function SetDFieldEXPIRE_DATE(obj) {
    var today = new Date();
    var holiydaycheck = 0;
    for (var i = 1; i <= 5; i++) {
        today.setDate(today.getDate() + 1);
        if (0 < today.getDay() && today.getDay() < 6) {
            //평일
        } else {
            //토요일인 경우 2일
            if (today.getDay() == 0 && holiydaycheck == 0)
                holiydaycheck = 1;
            else
                holiydaycheck = 2;
        }
    }
    today.setDate(today.getDate() + holiydaycheck);
    var mm = today.getMonth() + 1;
    var dd = today.getDate();
    var yyyy = today.getFullYear();
    if (today.getDate() < 10) {
        dd = '0' + today.getDate()
    }
    if (mm < 10) {
        mm = '0' + mm
    }
    var minimumConsultDate = parseInt(yyyy + "" + mm + "" + dd);
    try {
        var strServerFormatDate = XFN_TransDateServerFormat(eval(obj).value);
        var intExpiredDate = parseInt(strServerFormatDate.replace(/-/g, ""));
        var minimumConsultDate = parseInt(yyyy + "" + mm + "" + dd);
        if (intExpiredDate < minimumConsultDate) {
            Common.Warning(Common.GetDic("msg_InValidDateInput"));
            alert(Common.GetDic("msg_apv_chkExpiredDate").replace("{0}", CFN_TransDateLocalFormat(yyyy + "-" + mm + "-" + dd)));// 이후로 파기일자를 지정하세요.
            eval(obj).value = CFN_TransDateLocalFormat(yyyy + "-" + mm + "-" + dd);
            $("#EXPIRE_DATE").val(CFN_TransDateLocalFormat(yyyy + "-" + mm + "-" + dd));
            return false;
        }
        else {
            $("#EXPIRE_DATE").val(eval(obj).value);
        }
    }
    catch (e) {
    }
}

function fn_docSecurityUserCheck(sValue) {
    //보안 문서 예외 사용자 기능 - 현대 건설, 현대 엔지니어링
    if (_BaseConfigApv.DOC_SECURITYUSER == "Y") {
        //DocSecurityUserCheck Y일 경우 예외
        if (getInfo("DocSecurityUserCheck") == "N") {
            if (sValue == "01") {
                $(".l-grouping").hide();
                $("#btn_ForwardMail").hide();
            }
            else {
                $(".l-grouping").show();
                if (getInfo("templatemode") == "Read") {
                    // 메일로 전달 버튼제어 
                    if (getInfo("loct") == "COMPLETE") { // 완료함에서만 보임        
                        if (getInfo("chkscForwardToMail_YN") != undefined && getInfo("chkscForwardToMail_YN") == "Y") {
                            $('#btn_ForwardMail').show();
                        }
                        else {
                            $('#btn_ForwardMail').hide();
                        }
                    }

                    // 현대건설은 메일로전달기능을 모든 문서에 대해서 사용함
                    if (getInfo("etid") == "H147") {
                        // 메일로 전달 버튼제어 
                        if (getInfo("chkscForwardToMail_YN") != undefined && getInfo("chkscForwardToMail_YN") == "Y") {
                            $('#btn_ForwardMail').show();
                        }
                    }

                }
            }
        }
    }
}

//보존년한 / 파기일자 옵션 선택 이벤트
function changeSAVETERM_STATE(obj) {
    if (obj.value == "00") {
        //평문
        var Title = Common.GetDic("lbl_PreservedDate");
        $("#SAVETERM").show();
        $("#divEXPIREDATE").hide();
        $("#EXPIREDATE").hide().removeAttr('required');
        $("#EXPIRE_DATE_IMG").hide();
        $("#TIT_SAVE_TERM").text(Title);
        $("#EXPIREDATE").val("");
        $("#EXPIRE_DATE").val("");
        $("#DOCLEVEL").next().remove();

        fn_docSecurityUserCheck(obj.value);
    }
    else if (obj.value == "0000001" || obj.value == "0000000" || obj.value == "0000003" || obj.value == "0000007") {
        var Title = Common.GetDic("lbl_PreservedDate");
        $("#SAVETERM").show();
        $("#divEXPIREDATE").hide();
        $("#EXPIREDATE").hide().removeAttr('required');
        $("#EXPIRE_DATE_IMG").hide();
        $("#TIT_SAVE_TERM").text(Title);
        $("#EXPIREDATE").val("");
        $("#EXPIRE_DATE").val("");
        $("#DOCLEVEL").next().remove();
    } else {
        //기밀,극비
        var Title = Common.GetDic("lbl_expire_date");
        if ($("#EXPIREDATE").val() == "") {

            // 20171102 hpark 파기일자 관련 수정
            //$("#EXPIREDATE").val(XFN_addMinusDateByCurrDate(15, "", _UR_DateFormat));
            //$("#EXPIRE_DATE").val(XFN_addMinusDateByCurrDate(15, "", _UR_DateFormat));
            if ($("#EXPIRE_DATE").val() == "") {
                var curDate = new Date();
                var today = getToday(curDate);
                // 20171204 hpark m/r/dField 날짜포멧 변경
                //$("#EXPIREDATE").val(addDate("m", "6", today, "-"));
                //$("#EXPIRE_DATE").val(addDate("m", "6", today, "-"));
                $("#EXPIREDATE").val(CFN_TransDateLocalFormat(addDate("m", "6", today, "-")));
                $("#EXPIRE_DATE").val(CFN_TransDateLocalFormat(addDate("m", "6", today, "-")));

                //$("#EXPIREDATE").val(XFN_addMinusDateByCurrDate(15, "", _UR_DateFormat));
                //$("#EXPIRE_DATE").val(XFN_addMinusDateByCurrDate(15, "", _UR_DateFormat));
            } else {
                $("#EXPIREDATE").val($("#EXPIRE_DATE").val());
            }
        }
        $("#divEXPIREDATE").show();
        $("#EXPIREDATE").show();
        $("#EXPIRE_DATE_IMG").show();
        $("#SAVETERM").hide();
        $("#TIT_SAVE_TERM").text(Title);

        if ($("#DOCLEVEL").next().text() == "") {
            $("#DOCLEVEL").css("float", "left");
            $("#DOCLEVEL").after("&nbsp;" + Common.GetDic("lbl_DocSecurity_Text"));
        }

        fn_docSecurityUserCheck(obj.value);
    }
    $("#DOC_LEVEL").val(obj.value);
    //console.log("DOC_LEVEL : " + $("#DOC_LEVEL").val());
    //console.log("SAVE_TERM : " + $("#SAVE_TERM").val());
    //console.log("EXPIRE_DATE : " + $("#EXPIRE_DATE").val());

    // 보존연한 상세설명 팝업
    if (typeof setSaveTermSpec == "function" || typeof setSaveTermSpec == "object") {
        setSaveTermSpec();
    }
}
/*
    DOC_LEVEL_Change(obj)
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

/*
    form_urgent_onclick
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

/*
    form_secrecy_onclick
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

/*** form data -> xml ***/
// name-> id, id-> data-type, datafld->data-model 로 변경
// 정리
function getFields(Fields) {
    ////debugger;
    var sText = "";
    var fld;
    var l_editor = "#editor";
    if (openMode == "P") l_editor = CFN_GetCtrlById("editor");

    $(l_editor).find("*[data-type='" + Fields + "']").each(function (i, fld) {

        var $fld = $(fld);

        sText += makeNodeByType($fld, Fields, i);

    });

    return sText;
}

function makeMultiRowXml(row, Fields, rowSeq) {
    var sText = '';

    row.find("*[data-type='" + Fields + "']").each(function (i, fld) {

        var $fld = $(fld);
        sText += makeNodeByType($fld, Fields, rowSeq);

    });

    return sText;
}

/*** form data table -> xml ***/
function getMultiRowFields(objName, Fields) {
    var sText = "";
    var $rows;
    var iRowSeq = 0;
    if (Fields == null) Fields = "rField";
    //template가 복수인 경우
    var $table = $("#" + objName);
    var multirowTmplCnt = $table.find(".multi-row-template").length;

    //:nth-child(3n+1)
    if (multirowTmplCnt == 1) {
        $rows = $table.find('.multi-row');
        $.each($rows, function () {//
            ++iRowSeq;
            var $row = $(this);
            sText += "<" + objName + ">";
            sText += makeMultiRowXml($row, Fields, iRowSeq.toString());
            sText += "</" + objName + ">";
        });
    } else { //multi-template
        $rows = $table.find('.multi-row').nth(multirowTmplCnt + 'n');
        $.each($rows, function () {//
            ++iRowSeq;
            var $row = $(this);
            var rows = $row.nextAll().andSelf().slice(0, multirowTmplCnt);
            sText += "<" + objName + ">";
            sText += makeMultiRowXml(rows, Fields, iRowSeq.toString());
            sText += "</" + objName + ">";
        });
    }

    return sText;
}

function getNodeName(obj) {
    var ret;

    var $name = obj.attr("name");
    var $id = obj.attr("id");
    var $nodeName = obj.attr("data-node-name");

    if (typeof $name != 'undefined' && $name != "") {
        ret = $name;
    }
    else if (typeof $id != 'undefined') {
        ret = $id;
    }
    else if (typeof $nodeName != 'undefined') {
        ret = $nodeName;
    }

    return ret;
}

/*** form data multi -> xml ***/
function getMultiFields(Fields) {
    var sText = "";
    var fld;
    var l_editor = "#editor";
    if (openMode == "P") l_editor = CFN_GetCtrlById("editor");
    $(l_editor).find("input[data-type='" + Fields + "']").each(function (i, fld) {
        sText += makeNode($(fld).attr("name") + "_" + $(fld).parent().parent().index(), $(fld).val());
    });
    return sText;
}

/*** form data table -> xml ***/
function getTableFields(objName, firstIndex, Fields) {
    ////debugger;
    var fld;
    var sText = "";
    var iRowSeq = 0;
    var oTable = document.getElementById(objName);
    if (Fields == null) Fields = "rField";
    for (var i = firstIndex; i < oTable.rows.length; i++) {
        var oRow = $(oTable.rows[i]);
        var oData = $(oRow).find("input[data-type='" + Fields + "'], textarea[data-type='" + Fields + "'], select[data-type='" + Fields + "']");
        if ($(oData).length <= 0) continue;
        sText += "<" + objName + ">";
        ++iRowSeq;
        sText += "<ROWSEQ>" + iRowSeq.toString() + "</ROWSEQ>";

        oData.each(function (i, fld) {

            var attrName = $(fld).attr("name");

            if (typeof attrName != 'undefined' && attrName != false) {
                if (attrName.indexOf("RDO") > -1) {
                    sText += getRadio(attrName);
                } else if (fld.nodeName == "SELECT") {
                    sText += getSelRadioStFields($(fld));
                }
                else {
                    sText += makeNode(attrName, $(fld).val());
                }
            }
            else {
                var attrId = $(fld).attr("id");
                if (typeof attrId != 'undefined' && attrId != false) {
                    sText += makeNode(attrId, $(fld).val());
                }
            }

        });
        sText += "</" + objName + ">";
    }
    return sText;
}

/*** form data table -> xml ***/
function getMultiRowFieldsForDB(objName, Fields) {
    var sText = "";
    var $rows;
    var iRowSeq = 0;
    if (Fields == null) Fields = "rField";
    //template가 복수인 경우
    var $table = $("#" + objName);
    var multirowTmplCnt = $table.find(".multi-row-template").length;

    //multirowTmplCnt = multirowTmplCnt / 6;

    //:nth-child(3n+1)

    //:nth-child(3n+1)
    if (multirowTmplCnt == 1) {
        $rows = $table.find('.multi-row');
        $.each($rows, function () {//
            var $row = $(this);
            sText += "<" + objName + ">";
            ++iRowSeq;
            sText += "<ROWSEQ>" + iRowSeq.toString() + "</ROWSEQ>";
            sText += makeMultiRowXmlForDB($row, Fields, iRowSeq.toString());
            sText += "</" + objName + ">";
        });
    } else { //multi-template
        $rows = $table.find('.multi-row:nth-child(' + multirowTmplCnt + 'n)');
        $.each($rows, function () {//
            var $row = $(this);
            var rows = $row.nextAll().andSelf().slice(0, multirowTmplCnt);
            sText += "<" + objName + ">";
            ++iRowSeq;
            sText += "<ROWSEQ>" + iRowSeq.toString() + "</ROWSEQ>";
            sText += makeMultiRowXmlForDB(rows, Fields, iRowSeq.toString());
            sText += "</" + objName + ">";
        });
    }
    //  alert(sText);
    return sText;
}


function makeMultiRowXmlForDB(row, Fields, rowSeq) {
    var sText = '';

    row.find("*[data-type='" + Fields + "']").each(function (i, fld) {

        var $fld = $(fld);
        sText += makeNodeByTypeForDB($fld, Fields, rowSeq);

    });

    return sText;
}

// DB 컬럼형태로 저장되는 값들에 대한 태그별 분기 처리
function makeNodeByType($fld, dataType, index) {
    var sText = '';
    //var $fld = $(elm);

    //tagName에 따른 처리
    var $tag = $fld.prop("tagName").toLowerCase();

    if ($tag == "input") {
        var $type = $fld.attr('type');

        if (typeof $type != 'undefined') {
            if ($type.toLowerCase() == "text") {
                // 20171204 hpark m/r/dField 날짜포멧 변경
                //sText += makeNode(getNodeName($fld), $fld.val());
                if ($fld.hasClass("date-convert"))
                    sText += makeNode(getNodeName($fld), formDateConvert($fld.val(), "S", dataType));
                else if ($fld.attr("data-pattern") == "currency") {     // currency에서 한번 (-)가 되면, 소스에서 (+)로 바꿔도 (-)가 유지되는 오류 : $obj.val("-111") > $obj.val("111") > $obj.val() == "-111"
                    try {
                        if ($fld[0].value && $.isNumber($fld.val()) && parseFloat($fld.val()) != parseFloat($fld[0].value.replace(/,/g, "")))
                            sText += makeNode(getNodeName($fld), $fld.val().replace(/-/g, ""));
                        else if($fld[0].value && $fld.val() != $fld[0].value.replace(/,/g, ""))
                            sText += makeNode(getNodeName($fld), $fld.val().replace(/-/g, ""));
                        else
                            sText += makeNode(getNodeName($fld), $fld.val());
                    } catch (e) {
                        sText += makeNode(getNodeName($fld), $fld.val());
                    }
                }
                else
                    sText += makeNode(getNodeName($fld), $fld.val());
            }
            else if ($type.toLowerCase() == "checkbox") {
                sText += getRadio(getNodeName($fld));
            }
            else if ($type.toLowerCase() == "radio") {
                sText += getRadio(getNodeName($fld));
            }
            else if ($type.toLowerCase() == "hidden") {
                sText += makeNode(getNodeName($fld), $fld.val());
            }
            else {
                sText += makeNode(getNodeName($fld), $fld.val());
            }
        }
    }
    else if ($tag == "textarea") {
        sText += makeNode(getNodeName($fld), $fld.val());
    }
    else if ($tag == "select") {
        sText += getSelRadio($fld);
    }
    else if ($tag == "span") {
        if ($fld.find("input").length == 0) {
            //sText += makeNode(getNodeName($fld), $fld.text());
            sText += makeNode(getNodeName($fld), $fld.html());
        }
    }

    //data-element-type에 따른 처리
    var $dataElmType = $fld.attr('data-element-type');

    if (typeof $dataElmType != 'undefined') {
        //체크박스면
        if ($dataElmType.indexOf("chk") > -1) {
            sText += getCheckBoxForMulti(getNodeName($fld), dataType, index);
        }//radio 면
        else if ($dataElmType.indexOf("rdo") > -1) {
            sText += getRadioTextValueForMulti(getNodeName($fld), dataType, index);
        }

    }

    return sText;
}

// DB 컬럼형태로 저장되는 값들에 대한 태그별 분기 처리
function makeNodeByTypeForDB($fld, dataType, rowSeq) {
    var sText = '';
    //var $fld = $(elm);

    //tagName에 따른 처리
    var $tag = $fld.prop("tagName").toLowerCase();

    if ($tag == "input") {
        var $type = $fld.attr('type');

        if (typeof $type != 'undefined') {
            if ($type.toLowerCase() == "text") {
                sText += makeNodeform(getNodeName($fld), $fld.val(), null, true);
            }
            else if ($type.toLowerCase() == "checkbox") {
                sText += getCheckBoxForDB(getNodeName($fld), "|", dataType, rowSeq);
            }
            else if ($type.toLowerCase() == "radio") {
                sText += getRadioForDB(getNodeName($fld), dataType, rowSeq);
            }
            else if ($type.toLowerCase() == "hidden") {
                sText += makeNodeform(getNodeName($fld), $fld.val(), null, true);
            }
            else {
                sText += makeNodeform(getNodeName($fld), $fld.val(), null, true);
            }
        }
    }
    else if ($tag == "textarea") {
        sText += makeNodeform(getNodeName($fld), $fld.val(), null, true);
    }
    else if ($tag == "select") {
        sText += getSelRadioForDB($fld);
    }

    //data-element-type에 따른 처리
    var $dataElmType = $fld.attr('data-element-type');

    if (typeof $dataElmType != 'undefined') {
        //체크박스면
        if ($dataElmType.indexOf("chk") > -1) {
            sText += getCheckBoxForDB(getNodeName($fld), "|", dataType, rowSeq);
        }//radio 면
        else if ($dataElmType.indexOf("rdo") > -1) {
            sText += getRadioForDB(getNodeName($fld), dataType, rowSeq);
        }

    }

    return sText;
}

/*** checkbox 값 가져오기***/
function getCheckBoxForDB(chkNm, seperator, dataType, rowSeq) {
    var ret = "";
    var vals = "";
    var indexedName = chkNm + "_" + rowSeq;

    if (dataType == "smField") {
        for (var i = 0; i < document.getElementsByName(chkNm).length; i++) {
            if (document.getElementsByName(chkNm)[i].checked) {
                // 구분자를 넣는 형태
                vals += document.getElementsByName(chkNm)[i].value + seperator;
            }
        }
    }
    else if (dataType == "stField") {
        for (var i = 0; i < document.getElementsByName(indexedName).length; i++) {
            if (document.getElementsByName(indexedName)[i].checked) {
                vals += document.getElementsByName(indexedName)[i].value + seperator;
            }
        }
    }

    ret += makeNodeform(chkNm, vals.slice(0, -1), null, true);
    return ret;
}

/*** Radio Button 값 가져오기***/
function getRadioForDB(radioNm, dataType, rowSeq) {
    var radioVal = "";
    var indexedName = radioNm + "_" + rowSeq;
    if (dataType == "smField") {
        for (var i = 0; i < document.getElementsByName(radioNm).length; i++) {
            if (document.getElementsByName(radioNm)[i].checked) {
                //radioVal += makeNode(radioNm, document.getElementsByName(radioNm)[i].value);
                radioVal += makeNodeform(radioNm, document.getElementsByName(radioNm)[i].value, null, true);
            }
        }
    }
    else if (dataType == "stField") {
        for (var i = 0; i < document.getElementsByName(indexedName).length; i++) {
            // alert($('input[name="' +  indexedName + '"]').eq(i).is(':checked'));
            if (document.getElementsByName(indexedName)[i].checked) {
                //radioVal += makeNode(radioNm, document.getElementsByName(radioNm)[i].value);
                radioVal += makeNodeform(radioNm, document.getElementsByName(indexedName)[i].value, null, true);
            }
        }
    }

    return radioVal;
}

/*** Radio Button 값 가져오기***/
function getRadio(radioNm) {
    var radioVal = "";
    for (var i = 0; i < document.getElementsByName(radioNm).length; i++) {
        if (document.getElementsByName(radioNm)[i].checked) {
            radioVal += makeNode(radioNm, document.getElementsByName(radioNm)[i].value);
        }
    }
    return radioVal;
}

/*** checkbox 값 가져오기***/
function getCheckBoxForMulti(chkNm, dataType, rowSeq) {
    var ret = "";
    var vals = "";
    var indexedName = chkNm + "_" + rowSeq;

    if (dataType == "mField") {
        for (var i = 0; i < document.getElementsByName(chkNm).length; i++) {
            if (document.getElementsByName(chkNm)[i].checked) {
                vals += makeNode(chkNm, document.getElementsByName(chkNm)[i].value);
            }
        }
    }
    else if (dataType == "rField") {
        for (var i = 0; i < document.getElementsByName(indexedName).length; i++) {
            if (document.getElementsByName(indexedName)[i].checked) {
                vals += makeNode(chkNm, document.getElementsByName(indexedName)[i].value);
            }
        }
    }

    return vals;
}

//radio 값 구분하여 가져 오기
function getRadioTextValue(radioNm) {
    ////debugger;
    var radioVal = "";
    for (var i = 0; i < document.getElementsByName(radioNm).length; i++) {
        if (document.getElementsByName(radioNm)[i].checked) {
            radioVal += makeNode(radioNm, document.getElementsByName(radioNm)[i].value);
            radioVal += makeNode(radioNm + "_TEXT", document.getElementsByName(radioNm)[i].getAttribute('data-text'));
        }
    }
    return radioVal;
}

//radio 값 구분하여 가져 오기
function getRadioTextValueForMulti(radioNm, dataType, rowSeq) {
    ////debugger;
    var radioVal = "";
    var indexedName = radioNm + "_" + rowSeq;

    if (dataType == "mField") {
        for (var i = 0; i < document.getElementsByName(radioNm).length; i++) {
            if (document.getElementsByName(radioNm)[i].checked) {
                radioVal += makeNode(radioNm, document.getElementsByName(radioNm)[i].value);
                radioVal += makeNode(radioNm + "_TEXT", document.getElementsByName(radioNm)[i].getAttribute('data-text'));
            }
        }
    }
    else if (dataType == "rField") {
        for (var i = 0; i < document.getElementsByName(indexedName).length; i++) {
            if (document.getElementsByName(indexedName)[i].checked) {
                radioVal += makeNode(radioNm, document.getElementsByName(indexedName)[i].value);
                radioVal += makeNode(radioNm + "_TEXT", document.getElementsByName(indexedName)[i].getAttribute('data-text'));
            }
        }
    }

    return radioVal;
}

/*** Single Radio Button Value 가져오기 ***/
function getChkRadio(radioNm) {
    if (eval(radioNm).checked) {
        radioVal = makeNode(radioNm, eval(radioNm).value);
        return radioVal;
    }
}

/** SELECT BOX VALUE 가져오기 **/
function getSelRadioForDB(obj) {
    var radioVal = "";
    var selNm = getNodeName(obj);

    if (obj[0].selectedIndex > -1) {
        radioVal += makeNodeform(selNm, obj[0].options[obj[0].selectedIndex].value, null, true);
    } else {
        radioVal += makeNodeform(selNm, "0", null, true);
    }
    return radioVal;
}

/** SELECT BOX VALUE 가져오기 **/
function getSelRadio(obj) {
    var radioVal = "";
    //var selNm = obj.attr("name");
    var selNm = getNodeName(obj);
    if (obj[0].selectedIndex > -1) {
        radioVal += makeNode(selNm, obj[0].options[obj[0].selectedIndex].value);
        radioVal += makeNode(selNm + "_TEXT", obj[0].options[obj[0].selectedIndex].text);
    } else {
        radioVal += makeNode(selNm, "");
        radioVal += makeNode(selNm + "_TEXT", "");
    }
    return radioVal;
}

/*** 라디오 버튼 value display ***/
function setRadio(szname, szvalue) {
    var objrdo = document.getElementsByName(szname);
    for (i = 0; i < objrdo.length; i++) {
        if (objrdo[i].value == szvalue) objrdo[i].checked = true;
    }
}

/*** 라디오 버튼 value display read 페이지용(RDO)***/
function setRadioRead(szname, szvalue) {
    if (document.getElementsByName(szname)[Number(szvalue)] != null) {
        document.getElementsByName(szname)[Number(szvalue)].innerHTML = "●";
    }
}

/*** 라디오 버튼 value가 의미있는 값일 경우 display read 페이지용(RDV) ***/
function setRadioValueRead(szname, szvalue) {
    if (document.getElementsByName(szname + "_" + szvalue)[0] != null) {
        document.getElementsByName(szname + "_" + szvalue)[0].innerHTML = "●";
    }
}

/*** single 라디오 버튼 value display ***/
function setChk(szname, szvalue) {
    var objrdo = document.getElementsByName(szname)[0];
    if (objrdo.value == szvalue) objrdo.checked = true;
}

/*** single 라디오 버튼 value display read 페이지용(CHK)***/
function setChkRead(szname, szvalue) {
    var objrdo = document.getElementById(szname);
    if (szvalue == 1) objrdo.innerHTML = "■";
}

//문서등급(보안등급) create
//function setDocLevel() {
//    // 일반문서, 보안문서
//    //makeCBOobject("10", "일반문서", DOC_LEVEL);
//    //makeCBOobject("20", "보안문서", DOC_LEVEL);
//    document.getElementById("DOC_LEVEL").options.length = 0;
//    makeCBOobject("100", formJson.commonLangItems.DOC_LEVEL_10, document.getElementById("DOC_LEVEL"));
//    makeCBOobject("200", formJson.commonLangItems.DOC_LEVEL_20, document.getElementById("DOC_LEVEL"));
//    makeCBOobject("300", formJson.commonLangItems.DOC_LEVEL_30, document.getElementById("DOC_LEVEL"));

//    //setDefaultCBOobject((getInfo("DOC_LEVEL") == null ? "10" : getInfo("DOC_LEVEL")), DOC_LEVEL);
//    //setDefaultCBOobject((getInfo("DOC_LEVEL") == null ? "10" : getInfo("DOC_LEVEL")), document.getElementById("DOC_LEVEL"));
//    //setDefaultCBOobject(getInfo("DOC_LEVEL"), document.getElementById("DOC_LEVEL"));

//    try {
//        if (getInfo("DOC_LEVEL") != undefined) {
//            setDefaultCBOobject(getInfo("DOC_LEVEL"), document.getElementById("DOC_LEVEL"));
//        }
//        else {
//            setDefaultCBOobject(getInfo("SecurityGrade"), document.getElementById("DOC_LEVEL"));   //2012-04-02 HIW
//        }
//        //1등급 기밀문서로 설정 안함
//        //        if (document.getElementById("DOC_LEVEL").value == "100") {
//        //            document.getElementById("chk_secrecy").checked = true;
//        //            document.getElementById("chk_secrecy").value = "1";
//        //        } else {
//        //            document.getElementById("chk_secrecy").checked = false;
//        //            document.getElementById("chk_secrecy").value = "0";
//        //        }

//    }
//    catch (ex) { }
//}

//보존년한 create
//function setSaveTerm() {
//document.getElementById("SAVE_TERM").options.length = 0;
//makeCBOobject("1", formJson.commonLangItems.gLabel_year_1, document.getElementById("SAVE_TERM")); 			//"1년"
//makeCBOobject("3", formJson.commonLangItems.gLabel_year_3, document.getElementById("SAVE_TERM")); 			//"3년"
//makeCBOobject("5", formJson.commonLangItems.gLabel_year_5, document.getElementById("SAVE_TERM")); 			//"5년"
//makeCBOobject("7", formJson.commonLangItems.gLabel_year_7, document.getElementById("SAVE_TERM")); 			//"7년"
//makeCBOobject("10", formJson.commonLangItems.gLabel_year_10, document.getElementById("SAVE_TERM"));  		//"10년"

// makeCBOobject("100", formJson.commonLangItems.gLabel_year_1m, document.getElementById("SAVE_TERM")); 			//"1개월"
//  makeCBOobject("600", formJson.commonLangItems.gLabel_year_6m, document.getElementById("SAVE_TERM")); 			//"6개월"
//   makeCBOobject("1", formJson.commonLangItems.gLabel_year_1, document.getElementById("SAVE_TERM")); 			//"1년"
//  makeCBOobject("3", formJson.commonLangItems.gLabel_year_3, document.getElementById("SAVE_TERM")); 			//"3년"
// makeCBOobject("5", formJson.commonLangItems.gLabel_year_5, document.getElementById("SAVE_TERM")); 			//"5년"
//  makeCBOobject("10", formJson.commonLangItems.gLabel_year_10, document.getElementById("SAVE_TERM"));  		//"10년"
//  makeCBOobject("99", formJson.commonLangItems.gLabel_permanence, document.getElementById("SAVE_TERM"));       //"영구"

//makeCBOobject("20", formJson.commonLangItems.gLabel_year_20, document.getElementById("SAVE_TERM"));       //"20년"

//setDefaultCBOobject(getInfo("SAVE_TERM"), document.getElementById("SAVE_TERM"));

//try {
//    if (getInfo("SAVE_TERM") != undefined) {
//        if (getInfo("SAVE_TERM") == "10") {
//            makeCBOobject("10", formJson.commonLangItems.gLabel_year_10, document.getElementById("SAVE_TERM"));  		//"10년"
//        }
//        if (getInfo("SAVE_TERM") == "20") {
//            makeCBOobject("10", formJson.commonLangItems.gLabel_year_10, document.getElementById("SAVE_TERM"));  		//"10년"
//            makeCBOobject("20", formJson.commonLangItems.gLabel_year_20, document.getElementById("SAVE_TERM"));       //"20년"
//        }
//        setDefaultCBOobject(getInfo("SAVE_TERM"), document.getElementById("SAVE_TERM"));
//    }
//    else {
//        if (getInfo("PreservPeriod") == "10") {
//            makeCBOobject("10", formJson.commonLangItems.gLabel_year_10, document.getElementById("SAVE_TERM"));  		//"10년"
//        }
//        if (getInfo("PreservPeriod") == "20") {
//            makeCBOobject("10", formJson.commonLangItems.gLabel_year_10, document.getElementById("SAVE_TERM"));  		//"10년"
//            makeCBOobject("20", formJson.commonLangItems.gLabel_year_20, document.getElementById("SAVE_TERM"));       //"20년"
//        }
//        setDefaultCBOobject(getInfo("PreservPeriod"), document.getElementById("SAVE_TERM"));  //2012-04-02 HIW
//    }
//}
//catch (ex) { }
//}

//문서분류 대입 (2012-04-02 HIW)
//function setDocClass() {
//    try {
//        //        document.getElementById("DOC_CLASS_NAME").value = getInfo("DocClassNm");
//        if (document.getElementById("DOC_CLASS_NAME").value == "") {
//            document.getElementById("DOC_CLASS_NAME").value = getInfo("DocClassNm");
//        }
//        if (document.getElementById("DOC_CLASS_ID").value == "") {
//            document.getElementById("DOC_CLASS_ID").value = getInfo("DocClassId");
//        }
//    }
//    catch (ex) { }
//}

function makeCBOobject(strcode, strname, cboObject) {
    try {
        var oOption = document.createElement("OPTION");
        cboObject.options.add(oOption);
        oOption.text = strname;
        oOption.value = strcode;
    } catch (e) { }
    return;
}
function setDefaultCBOobject(strcode, cboObject) {
    if (strcode == '' || strcode == null) strcode = '1';
    for (var i = 0; i < cboObject.length; i++) {
        if (cboObject.options[i].value == strcode) {
            cboObject.options[i].selected = true;
        }
    }
}
function getChangeBodyContext() {


    var sText = "";
    var fld;
    var l_editor = "#editor";
    if (openMode == "P") l_editor = CFN_GetCtrlById("editor");
    var sBODY_CONTEXT = getInfo("BODY_CONTEXT")
    var xmlBODY_CONTEXT = $.parseXML(sBODY_CONTEXT);
    $(l_editor).find("*[data-type='" + "mField" + "']").each(function (i, fld) {
        if ($(fld).attr("id") == "INITIATOR_DP") {

        } else if ($(fld).attr("id") == "INITIATOR_OU_DP") {

        } else if (fld.nodeName == "SPAN") {

        } else {
            if ($(fld).val() != $(xmlBODY_CONTEXT).find($(fld).attr("id")).text()) {
                var sString = String.format("<{0}>{1}</{0}>", $(xmlBODY_CONTEXT).find($(fld).attr("id")).selector, $(xmlBODY_CONTEXT).find($(fld).attr("id")).text());
                var $fld = $(fld);

                if ($fld.prop("tagName").toLowerCase() == "select") {
                    var tmp_sString = String.format("<{0}>{1}</{0}>", $(xmlBODY_CONTEXT).find($(fld).attr("id")).selector + "_TEXT", $(xmlBODY_CONTEXT).find($(fld).attr("id") + "_TEXT").text());
                    sBODY_CONTEXT = sBODY_CONTEXT.replace(tmp_sString, "");
                }
                sBODY_CONTEXT = sBODY_CONTEXT.replace(sString, makeNodeByType($fld, "mField", i));
            }
            else if ($(fld).val() == $(xmlBODY_CONTEXT).find($(fld).attr("data-node-name")).text()
                && $(fld).attr("data-element-type") == "rdo_d") {
                var sString = String.format("<{0}>{1}</{0}>", $(xmlBODY_CONTEXT).find($(fld).attr("data-node-name")).selector, $(xmlBODY_CONTEXT).find($(fld).attr("data-node-name")).text());
                var $fld = $(fld);
                if (sBODY_CONTEXT.indexOf(sString) > -1)
                    sBODY_CONTEXT = sBODY_CONTEXT.replace(sString, makeNodeByType($fld, "mField", i));
                else
                    sBODY_CONTEXT = sBODY_CONTEXT.replace("</BODY_CONTEXT>", makeNodeByType($fld, "mField", i) + "</BODY_CONTEXT>");
            } else if ($(fld).attr("data-element-type") == "rdo_d" && getInfo("fmpf").indexOf("GWOK_OVERSEA_INVST") > -1
                && getInfo("editmode") == "M" && getInfo("templatemode") == "Read" && (INVEST.INFO.CTRL_DEPT_USER == true || INVEST.INFO.EXAMINATION_RECEIVE_FLAG == true || INVEST.INFO.CTRL_CFO_USER == true)) { // HMB 투자품의 CFO추가
                var chkValue = false;
                var radioNm = $(fld).attr("data-node-name");

                for (var i = 0; i < document.getElementsByName(radioNm).length; i++) {
                    if (document.getElementsByName(radioNm)[i].checked) {
                        if ($(xmlBODY_CONTEXT).find($(fld).attr("data-node-name")).text() != document.getElementsByName(radioNm)[i].value) {
                            chkValue = true;
                        }
                    }
                }

                if (chkValue) {
                    var $fld = $(fld);
                    xmlBODY_CONTEXT = $.parseXML(sBODY_CONTEXT);
                    $(xmlBODY_CONTEXT).find(radioNm + "_TEXT, " + radioNm).remove();

                    sBODY_CONTEXT = CFN_XmlToString(xmlBODY_CONTEXT);
                    sBODY_CONTEXT = sBODY_CONTEXT.replace("</BODY_CONTEXT>", makeNodeByType($fld, "mField", i) + "</BODY_CONTEXT>");
                }
            }
        }

    });

    if (getInfo("fmpf").indexOf("GWOK_OVERSEA_INVST") > -1) {
        if (getInfo("editmode") == "M" && getInfo("templatemode") == "Read" && (INVEST.INFO.CTRL_DEPT_USER == true || INVEST.INFO.EXAMINATION_RECEIVE_FLAG == true || INVEST.INFO.CTRL_CFO_USER == true)) { // HMB 투자품의 CFO추가
            xmlBODY_CONTEXT = $.parseXML(sBODY_CONTEXT);
            $(xmlBODY_CONTEXT).find('Multi_TB').remove();

            sBODY_CONTEXT = CFN_XmlToString(xmlBODY_CONTEXT);
            sBODY_CONTEXT = sBODY_CONTEXT.replace("</BODY_CONTEXT>", getMultiRowFields("Multi_TB", "rField") + "</BODY_CONTEXT>");
        }
    }

    return makeNode("BODY_CONTEXT", sBODY_CONTEXT, null, false);;

}
// name-> id, id-> data-type, datafld->data-model 로 변경
function getChangeFormXML(sType) {
    var sXML = "";
    var sBodyContext = "";
    if (getInfo("editmode") == "M")
        sBodyContext = getChangeBodyContext();
    else
        sBodyContext = getBodyContext();
    ////debugger;
    if (makeNode("BODY_CONTEXT") != sBodyContext) {
        sXML = sBodyContext;
    }

    //TO-DO : 경상예산품의 경우 품의 확정 금액 입력시 BodyContext 셋팅 부분
    if ((getInfo("fmpf") == "GWOK_WORKINGBUDGET_W01" || getInfo("fmpf") == "GWOK_WORKINGBUDGET_W01_KMI" || getInfo("fmpf") == "GWOK_WORKINGBUDGET_W02_KMI" || getInfo("fmpf") == "GWOK_WORKINGBUDGET_W01_KMM" || getInfo("fmpf") == "GWOK_WORKINGBUDGET_W01_HMMR" || getInfo("fmpf") == "WF_KMM_FI_PURCHASE") && (sType == "COMPLETECONSULT" || sType == "ASSIGNREVIEW" || sType == "COMPLETEREVIEW")) {
        sXML = getChangeBodyContext();
    }

    //common fields( ex)cField, mField를 제외한 dField 화면에 보이지 않는 값)
    var l_editor = "#editor";
    if (openMode == "P") l_editor = CFN_GetCtrlById("editor");
    $(l_editor).find("input[data-type=dField], textarea[data-type=dField], checkbox[data-type=dField]", "radio[data-type=dField]").each(function (i, fld) {
        if ($(fld).attr("id") == "ATTACH_FILE_INFO") {
            //첨부파일은 xml 형식이라 비교문이 다름
            var oldFileInfo = "";
            var newFileInfo = "";
            //oldFileInfo = (getInfo($(fld).attr("id")) == "") ? "" : CFN_XmlToString($.parseXML(getInfo($(fld).attr("id"))));
            oldFileInfo = (getInfo($(fld).attr("id")) == "" || typeof $(fld).attr("id")) ? "" : CFN_XmlToString($.parseXML(getInfo($(fld).attr("id"))));
            newFileInfo = ($(fld).val() == "") ? "" : CFN_XmlToString($.parseXML($(fld).val()));
            if (newFileInfo != oldFileInfo) {
                sXML += makeNode($(fld).attr("id"), $(fld).val());
            }
        } else {
            // 20171204 hpark m/r/dField 날짜포멧 변경
            //if ($(fld).val() != getInfo($(fld).attr("id"))) {
            //	sXML += makeNode($(fld).attr("id"), $(fld).val());
            //}
            if ($(fld).hasClass("date-convert")) {
                if (formDateConvert($(fld).val(), "S", "dField") != getInfo($(fld).attr("id"))) {
                    sXML += makeNode($(fld).attr("id"), formDateConvert($(fld).val(), "S", "dField"));
                }
            } else {
                if ($(fld).val() != getInfo($(fld).attr("id"))) {
                    sXML += makeNode($(fld).attr("id"), $(fld).val());
                }
            }
        }
    });

    $(l_editor).find("select[data-type=dField]").each(function (i, fld) {
        if ($(fld).val() != getInfo($(fld).attr("id"))) {
            if ($(fld).attr("tag") == "select") {
                sXML += getSelRadio($(fld).attr("name"))
            } else {
                sXML += makeNode($(fld).attr("id"), $(fld).val());
            }
        }
    });


    //
    //if (getInfo("templatemode") == "Read")
    //{
    //    sXML += (sXML.indexOf("DOC_LEVEL") < 0) ? makeNode("DOC_LEVEL") : "";
    //    sXML += (sXML.indexOf("DOC_LEVEL_TEXT") < 0) ? makeNode("DOC_LEVEL_TEXT") : "";
    //    sXML += (sXML.indexOf("SAVE_TERM") < 0) ? makeNode("SAVE_TERM") : "";
    //    sXML += (sXML.indexOf("SAVE_TERM_TEXT") < 0) ? makeNode("SAVE_TERM_TEXT") : "";
    //    sXML += (sXML.indexOf("EXPIRE_DATE") < 0) ? makeNode("EXPIRE_DATE") : "";
    //}

    // [2015-07-20 han modi] 웹발번이 되지 않아 수정
    //if ((m_oFormMenu.document.getElementById("bLASTAPPROVER").value == 'true' && getInfo("scDNum") == '1') || (getInfo("mode") == "SIGN")) { //최종결재자 문서정보 넘길것
    if ((m_oFormMenu.document.getElementById("bLASTAPPROVER").value == 'true' && (getInfo("scDNum") == '1' || getInfo("scDNumLegacy") == '1')) || (getInfo("mode") == "SIGN")) { //최종결재자 문서정보 넘길것
        try { if (sXML.indexOf("<DOC_NO") == -1) sXML += makeNodeform("DOC_NO"); } catch (e) {
        }
    }

    //body_context & specfic fields	
    //receive no process//
    if ((getInfo("mode") == "REDRAFT") && (m_oFormMenu.getHasReceiveno() == "true")) {
        //sXML += makeNodeform("RECEIVE_NO");
        if (sXML.indexOf("INITIATOR_OU_ID") == -1) sXML += makeNodeform("INITIATOR_OU_ID");
    }

    var _return = "";
    if (sXML != "") {
        _return = "<LAST_MODIFIER_ID>" + getInfo("usid") + "</LAST_MODIFIER_ID><formdata>" + sXML + "</formdata>";
    } else {
        _return = "<formdata>" + sXML + "</formdata>";
    }

    //apst 확인
    var sApvlist = $($.parseXML(getApvList())).find("apvlist>steps"); //CFN_XmlToString($($.parseXML(getApvList())).find("apvlist>steps")[0])
    if (!(CFN_XmlToString($.parseXML(getInfo("apst"))).replace("\r\n", "") == CFN_XmlToString(sApvlist[0]))) {
        _return += "<formdata_ext>" + makeNode("apst", CFN_XmlToString($.parseXML(getInfo("apst")))) + "</formdata_ext>";
        //_return += "<formdata_ext>" + makeNode("apst", document.getElementById("APVLIST").value) + "</formdata_ext>";
    } else { // 신청프로세스 수신부서일경우 도착시 결재선 생성함 // 20200629 hpark 자동결재라인,연동시스템 결재선 병합
        if (getInfo("USE_BASIC_APPROVAL_LINE") == "Y" && getInfo("pdef") == "REQUEST_PATTERN" && getInfo("mode") == "REDRAFT" && getInfo("loct") == "APPROVAL") {
            if (document.getElementById("APVLIST").value != "") {
                var m_oApvList = $.parseXML(document.getElementById("APVLIST").value);
                if ($(m_oApvList).find("step taskinfo[status='pending']").closest("step").attr("routetype") == "receive_dept") {
                    // 신청서 수신부서인경우 도착시점에 이후결재자(자동결재선)을 셋팅하는데, 셋팅된 후 편집버튼 누르고 변경없이 저장하면, 
                    // 결재선변경내역이 없어서 BPM 결재선변경을 호출안하므로 무조건 호출하도록 수정
                    // 수신부서 도착해서 결재선 셋팅하고 편집버튼 누르면 현결재선을 넘기고 서버이동을 하므로 변경여부 체크 불가
                    _return += "<formdata_ext>" + makeNode("apst", CFN_XmlToString($.parseXML(getInfo("apst")))) + "</formdata_ext>";
                }
            }
        }
    }

    return _return
}
/*doc info - final approver, charge,  uses*/

// 컬럼형태로 저장되는 값들에 대한 처리, dField, smField, stField
function getFormXML(pType) {

    // preview
    //placeholder에 대한 처리(인쇄미리보기에서는 안함)
    if (pType != "preview") {
        $("input").attr("placeholder", "");
    }

    var sXML = "";
    sXML = getBodyContext();
    var unFiltered = document.getElementsByTagName("*");
    for (i = 0; i < unFiltered.length; i++) {
        if (unFiltered[i].getAttribute("data-type") == "dField") {
            if (unFiltered[i].getAttribute("id") == "DOC_LEVEL_TEXT") {
                sXML += makeNodeform(unFiltered[i].getAttribute("id"), $("#DOC_LEVEL option:selected").text());
                //sXML += makeNodeform("DOC_LEVEL_VAL", $("#DOC_LEVEL option:selected").val());
            } else if (unFiltered[i].getAttribute("id") == "SAVE_TERM_TEXT") {
                sXML += makeNodeform(unFiltered[i].getAttribute("id"), $("#SAVE_TERM option:selected").text());
                //sXML += makeNodeform("SAVE_TERM_VAL", $("#SAVE_TERM option:selected").text());
            } else if (unFiltered[i].getAttribute("id") == "DOC_DIVISION_TEXT") {
                sXML += makeNodeform(unFiltered[i].getAttribute("id"), $("#DOC_DIVISION option:selected").text());
            } else if (unFiltered[i].getAttribute("id") == "SUBJECT") {
                //if (getInfo("templatemode") == "Read") {
                if ($("#" + unFiltered[i].getAttribute("id"))[0].tagName.toUpperCase() == "SPAN") {
                    sXML += makeNodeform(unFiltered[i].getAttribute("id"), $("#SUBJECT").text());
                } else {
                    sXML += makeNodeform(unFiltered[i].getAttribute("id"), $("#SUBJECT").val());
                }
            } else {
                // 20171204 hpark m/r/dField 날짜포멧 변경
                //sXML += makeNodeform(unFiltered[i].getAttribute("id"), unFiltered[i].value);
                if ($(unFiltered[i]).hasClass("date-convert")) {
                    if ($(unFiltered[i]).prop("tagName").toLowerCase() == "span") {
                        sXML += makeNodeform(unFiltered[i].getAttribute("id"), formDateConvert($(unFiltered[i]).text(), "S", "dField"));
                    } else {
                        sXML += makeNodeform(unFiltered[i].getAttribute("id"), formDateConvert(unFiltered[i].value, "S", "dField"));
                    }
                }
                else {
                    if ($(unFiltered[i]).prop("tagName").toLowerCase() == "span") {
                        sXML += makeNodeform(unFiltered[i].getAttribute("id"), $(unFiltered[i]).text());
                    } else {
                        sXML += makeNodeform(unFiltered[i].getAttribute("id"), unFiltered[i].value);
                    }
                }
            }
        }
    }
    //if (getInfo("templatemode") == "Read") {
    //    sXML += (sXML.indexOf("DOC_LEVEL") < 0) ? makeNode("DOC_LEVEL") : "";
    //    sXML += (sXML.indexOf("SAVE_TERM") < 0) ? makeNode("SAVE_TERM") : "";
    //    sXML += (sXML.indexOf("EXPIRE_DATE") < 0) ? makeNode("EXPIRE_DATE") : "";
    //}
    return "<formdata>" + sXML + "</formdata>";
}

//에디터 타입 참조방식 변경 : KJW : 2014-04-23 : XFROM PRJ.
function getBodyContext() {

    var ret;

    //읽기 모드 일 경우
    if (getInfo("templatemode") == "Read") {
        //미주 - 트랜스 리드 업무표준 양식 추가로 인해 조건 수정
        if (((getInfo("fmpf") == "GOJP_WORKFORM_W01" || getInfo("fmpf") == "GOJP_WORKFORM_OVERSEAS") && getInfo("reuse") == "Y")
			|| (getInfo("fmpf") == "GWOK_FIXED_W01" && (m_sReqMode == "SPECIALREPORT" || m_sReqMode == "REMOVESPECIALREPORT"))) {
            // 업무표준 개정일 때 
            // var sBodyContext = makeBodyContext();
            var sBodyContext = getInfo("BODY_CONTEXT");
            ret = makeNode("BODY_CONTEXT", sBodyContext, null, false);
            //
        } else {
            ret = "";
        }

        if (getInfo("fmpf").indexOf("GWOK_INVEST") > -1 || getInfo("fmpf").indexOf("GWOK_PINVEST") > -1 || getInfo("fmpf").indexOf("GWOK_OVERSEA_INVST") > -1) {
            ret = getChangeBodyContext();
        }
    }
    else {
        try {
            if (editortype.is('xfree') || (editortype.is('tagfreenxfree') && window.ActiveXObject === undefined)) {
                //xfree iframe으로 변경
                document.getElementById("dhtml_body").value = document.getElementById('xFreeFrame').contentWindow.tbContentElement.getHtmlValue();
                UpdateImageData(); //이미지 업로드
            } else if (editortype.is('tagfree') || (editortype.is('tagfreenxfree') && window.ActiveXObject !== undefined)) {
                document.getElementById("dhtml_body").value = document.tbContentElement.HtmlValue;
                UpdateImageData(); //이미지 업로드
                //} else if (editortype.is('crosseditor') || (editortype.is('activesquaredefault') && window.ActiveXObject === undefined)) {
            }
                //else if (editortype.is('crosseditor') || (editortype.is('activesquaredefault') && window.localStorage.getItem("EditorType") == "Cross")) {
                //    //document.getElementById("dhtml_body").value = tbContentElement.GetBodyValue();
                //    document.getElementById("dhtml_body").value = document.getElementById('xFreeFrame').contentWindow.tbContentElement.GetBodyValue();
                //    UpdateImageData(); //이미지 업로드
                //    //} else if (editortype.is('activesquare') || (editortype.is('activesquaredefault') && window.ActiveXObject !== undefined)) {
                //}
                //else if (editortype.is('activesquare') || (editortype.is('activesquaredefault') && window.localStorage.getItem("EditorType") == "Active")) {
                //    //document.getElementById("dhtml_body").value = document.tbContentElement.value;
                //    //document.getElementById("dhtml_body").value = document.tbContentElement.value;
                //    document.getElementById("dhtml_body").value = document.getElementById('xFreeFrame').contentWindow.tbContentElement.Value;
                //    UpdateImageData(); //이미지 업로드
                //    //document.getElementById("dhtml_body").value = document.tbContentElement.value;
                //}
            else if (editortype.is('crosseditor') || (editortype.is('activesquaredefault'))) {
                var l_EditorType = false; // true : ActiveSquare , false : CrossEditor
                if (_ie) {
                    if (window.localStorage.getItem("EditorType") == "Active") {
                        try {
                            var Installx = new ActiveXObject("NamoWeCtl.2301100001.7.0"); //신세계 ProgID
                            if (Installx) Installed = true; else Installed = false;
                        }
                        catch (ex) { Installed = false; }
                        if (Installed) { l_EditorType = true; }
                        else { l_EditorType = false; }
                    }
                    else { l_EditorType = false; }
                }
                else { l_EditorType = false; }


                if (l_EditorType) {
                    document.getElementById("dhtml_body").value = document.getElementById('xFreeFrame').contentWindow.tbContentElement.Value;
                    UpdateImageData(); //이미지 업로드
                }
                else {
                    document.getElementById("dhtml_body").value = document.getElementById('xFreeFrame').contentWindow.tbContentElement.GetBodyValue();
                    UpdateImageData(); //이미지 업로드
                }
            }
            else if (editortype.is('textarea')) {
                document.getElementById("dhtml_body").value = document.getElementById("tbContentElement").value;
            }
            else if (editortype.is('dext5')) {
                // TODO: DEXT5 Test by 임동현 2015-07-30
                var oContentHtml = $(document.getElementById('dext5Frame').contentWindow.DEXT5.getBodyValue());

                try {
                    //oContentHtml.find("img").each(function (i) {
                    //    var nImgWidth = $(this).width();
                    //    if (nImgWidth > 700) {
                    //        //$(this).removeAttr("width").removeAttr("height").css({ "width": "100%", "height": "auto", "min-width": "400px", "max-width": nImgWidth + "px" });
                    //        $(this).width('100%')[i];
                    //        $(this).height('auto')[i];
                    //    }
                    //});
                    //TO-DO : iframe 태그는 이용할 수 없도록 처리한다.
                    oContentHtml.find("iframe").remove();
                    oContentHtml.find("span").each(function () {
                        //$(this).removeAttr("data-type,data-model,id,required");
                        $(this).removeAttr("id");
                        $(this).removeAttr("data-type");
                        $(this).removeAttr("data-model");
                        $(this).removeAttr("data-binding");
                        $(this).removeAttr("required");
                    })
                } catch (e) { }


                document.getElementById("dhtml_body").value = '';
                for (var i = 0; i < oContentHtml.length; i++) {
                    if ($(oContentHtml)[i].outerHTML != undefined) document.getElementById("dhtml_body").value += $(oContentHtml)[i].outerHTML;
                }

            }
            else if (editortype.is('cheditor')) {
                // TODO: Cheditor Test by 임동현 2015-08-04
                document.getElementById("dhtml_body").value = document.getElementById('cheditorFrame').contentWindow.myeditor.getContents();
            }
        } catch (e) { }
        var sBodyContext = setLineFeedDel(makeBodyContext());
        ret = makeNode("BODY_CONTEXT", sBodyContext, null, false);
    }

    return ret;
}

/*
    ApprovalServiceBPM 파일의 processFormDataWorkFlow 함수에서 실행하는 단계 정보를 설정한다
    Return XML정보로 해당 작업 수행여부를 결정한다.

    EX.) var tempXML = getEnableProcessStep("1:0:1:1:0") 
                     = getEnableProcessStep("양식정보 저장 실행여부:첨부파일 저장 실행여부:BPM프로세스 실행여부:연동 실행여부:알람발송 실행여부")
        RETURN VALUE =>
        <ProcessFormData>1</ProcessFormData>
        <ProcessAttchFile>0</ProcessAttchFile>
        <ProcessData>1</ProcessData>
        <ProcessLegacyInfo>1</ProcessLegacyInfo>
        <ProcessAlarmInfo>0</ProcessAlarmInfo>
*/
function getEnableProcessStep(strArrFlag) {
    var nodeNameArray = [
           { value: "ProcessFormData" },
           { value: "ProcessAttchFile" },
           { value: "ProcessData" },
           { value: "ProcessLegacyInfo" },
           { value: "ProcessAlarmInfo" },
    ];
    var returnNodes = "";
    if (strArrFlag != "" && strArrFlag.split(/:/g).length >= 5) {
        for (var i = 0; i < strArrFlag.split(/:/g).length; i++) {
            returnNodes += "<" + nodeNameArray[i].value + ">" + strArrFlag.split(/:/g)[i] + "</" + nodeNameArray[i].value + ">";
        }
    }
    return returnNodes;
}
function makeNodeform(sName, vVal, sKey, bCData) {
    //return "<" + sName + ">" + (bCData ? "<![CDATA[" : "") + vVal + (bCData ? "]]>" : "") + "</" + sName + ">";
    var oNode = m_cvtXML.createElement("cvtnode");
    if (vVal == null) { $(oNode).text(getInfo((sKey != null ? sKey : sName))) } else { $(oNode).text(vVal); }
    //return "<" + sName + ">" + (bCData ? "<![CDATA[" : "") + (bCData ? $(oNode).text() + "]]>" : (new XMLSerializer()).serializeToString(oNode).replace("<cvtnode>", "").replace("</cvtnode>", "").replace("<cvtnode />", "")) + "</" + sName + ">";
    return "<" + sName + ">" + (bCData ? "<![CDATA[" : "") + (bCData ? $(oNode).text() + "]]>" : CFN_XmlToString(oNode).replace("<cvtnode>", "").replace("</cvtnode>", "").replace("<cvtnode />", "")) + "</" + sName + ">";
}

/*
    event_noop()
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

function evalXML(sXML) {
    try {
        var oXML = $.parseXML(sXML)
    } catch (e) {
        throw e;
    }
}

//수신처 관련 시작
function getReceiveNo() {
    var strRecDeptNo = document.getElementById("RECEIVE_NO").value;
    if (strRecDeptNo != "") {
        var iFIndex = strRecDeptNo.indexOf('[' + getInfo("dpid") + ']');
        if (iFIndex != -1) {
            var iLIndex = strRecDeptNo.indexOf(';', iFIndex);
            var iMIndex = strRecDeptNo.indexOf(']', iFIndex);
            return strRecDeptNo.substring(iMIndex + 1, iLIndex);
        } else { return ""; }
    } else { return ""; }
}
/*
    DeCodeRecList(sRecList)
    moved to formmenu.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

/*
    CheckSilverlightInstalled()
    The similar function remains in formmenu.js
    by KJW : 2014.04.22 : XFORM PRJ.
*/

/* 문서관리시스템 분류선택창 OPEN 시작 */
function OpenDocClass() {
    ////debugger;
    if (m_oFormMenu.gDocboxMenu == "T") {
        var sUrl = "";
        sUrl = "/Approval/DocBoxTreeSelect.aspx";
        //sUrl = "/Approval/Record/Client/DocBoxTreeSelect.aspx";  //기록물철 분류팝업 (2013-10-14 HIW)
        var iWidth = 400; var iHeight = 400; var sSize = "fix";

        if (openMode == "L" || openMode == "P") {
            var nLeft = (screen.width - iWidth) / 2;
            var nTop = (screen.height - iHeight) / 2;
            var sWidth = iWidth.toString() + "px";
            var sHeight = iHeight.toString() + "px";
            var sLeft = nLeft.toString() + "px";
            var sTop = nTop.toString() + "px";

            parent.Common.ShowDialog("btn_Process", "btn_ProcessDocBox", Common.GetDic("lbl_apv_docfoldername"), sUrl + "?openID=" + openID, sWidth, sHeight, "iframe-ifNoScroll");
            //parent.Common.ShowDialog("btn_Process", "btn_ProcessDocBox", "문서분류", sUrl + "?openID=" + openID, sWidth, sHeight, "iframe-ifNoScroll");
        } else {
            CFN_OpenWindow(sUrl, "", iWidth, iHeight, sSize);
        }
    } else {
        var fdid = document.getElementById("DOC_CLASS_ID").value;
        //CFN_OpenWindow(Common.GetPgModule("Doc.DocTree") + "?doctype=doc&domainID=" + "" + "&fdid=" + fdid + "&system=Doc&viewType=Approval", "PopupDocClass", "290", "370", "fix");
        var sUrl = Common.GetPgModule("Doc.DocTree") + "?doctype=doc&domainID=" + "" + "&fdid=" + fdid + "&system=Doc&viewType=Approval";

        //신세계 Layer 수정 적용
        //2016-06-08
        //YJYOO
        //if (location.href.indexOf("/Approval/ApprovalWrite") > -1) {
        //    return Common.ShowDialog("btn_Process", "LayerDocTree", "분류", sUrl, 290, 370, "iframe-ifNoScroll");
        if (openMode == "L") { //최우석
            parent.Common.ShowDialog("", "DivPop_" + openID, Common.GetDic("lbl_apv_docfoldername"), sUrl + "&openID=" + openID, "290", "400", "iframe-ifNoScroll");
        } else {
            if (_safari) {
                CFN_OpenWindow(sUrl, "PopupDocClass", "290", "330", "fix");
            }
            else {
                if (!_ie) {
                    CFN_OpenWindow(sUrl, "PopupDocClass", "290", "400", "fix");
                } else {
                    CFN_OpenWindow(sUrl, "PopupDocClass", "290", "390", "fix");
                }//else
            }//else
        }//else
    }


}

/* 문서관리시스템 분류선택창 끝 */

/*******************************************
******** 양식 파일 내 공통 함수 정리 끝 *******
*******************************************/


/*******************************************
***** 양식 파일 내 연결문서 함수 정리 시작 *****
*******************************************/

function G_displaySpnDocLinkInfo() {//수정본

    var szdoclinksinfo = "";

    var szdoclinks = "";
    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || g_szEditable == true) {
        try { szdoclinks = document.getElementById("DOCLINKS").value; } catch (e) { }
    } else {
        try { szdoclinks = document.getElementById("DOCLINKS").value; } catch (e) { }
    }
    //DOCLINKS 값에 undefined 가 들어 가서 오류남. 원인 찾기전 임시로 작성
    szdoclinks = szdoclinks.replace("undefined^", "");
    szdoclinks = szdoclinks.replace("undefined", "");
    if (szdoclinks != "") {
        var adoclinks = szdoclinks.split("^^^");
        szdoclinksinfo += "<div style='display: flex; flex-wrap: wrap; align-items: center;'>"
        for (var i = 0; i < adoclinks.length; i++) {

            var adoc = adoclinks[i].split("@@@");
            var title = adoc[2].replace(/'/g, "\\'"); // Escaping single quotes - 임동현 2017-09-28

            // var FormUrl = "http://" + document.location.host + "/approval/forms/form.aspx";
            var FormUrl = document.location.protocol + "//" + document.location.host + "/approval/forms/form.aspx";
            var bEdit = false;
            if (getInfo("templatemode") == "Read") {
                bEdit = false
            } else {
                bEdit = true;
            }
            //var iWidth = 790;
            var iWidth = window.screen.width - 15;
            //if (IsWideOpenFormCheck(adoc[1])) {
            //    iWidth = 1070;
            //}
            //var iHeight = window.screen.height - 82;
            var iHeight = window.screen.height - 82;

            // 가로 사이즈 조절
            try {
                if (adoc.length == 6 && adoc[5] != "") {
                    var fmpf = adoc[5];
                    //가로양식
                    if (IsWideOpenFormCheck(fmpf)) {
                        iWidth = 1070;
                    }

                    var isFullSize = "0";
                    if (Common.GetBaseConfig("HEC_COMPANY") == "Y") {
                        isFullSize = "1";
                        if (IsWideOpenFormCheckReal(fmpf, Common.GetSession("DN_Code"))) {
                            iWidth = Common.GetBaseConfig("WideOpenFormWidth");
                        } else {
                            iWidth = Common.GetBaseConfig("TallOpenViewWidth");
                        }
                    }
                }
            } catch (e) {

            }
            // 가로 사이즈 조절


            if (bEdit) {
                if (location.href.indexOf("Approval/ApprovalWrite") > -1) {//모바일 추가
                    if ($("#tblDocLinkInfo").css("display") == "none") {
                        $("#tblDocLinkInfo").css({ "display": "block" });
                    }

                    var l_Tbl = $("#tblDocLinkInfo");
                    var l_Tbody = $("#tblDocLinkInfo tbody");
                    var l_Cnt = l_Tbl.find("tr").length;

                    var sHtml = "<tr id=\"tblDocLinkInfo_" + i + "\" style=\"padding-bottom:10px;\">";
                    sHtml += "<td width=\"30\">";
                    sHtml += "<input type=checkbox name='chkDocLinkInfo' class='td_check' value='" + adoc[0] + "' style='margin: 0px 5px 0px 10px !important;'>";
                    sHtml += "</td>";
                    sHtml += "<td class=\"app_list_p4\" style=\"min-width:200px; overflow:hidden; height:30px; padding:0;\"><div class='ellipsis2'>";
                    //문서제목에 특수문자가 들어갔을 경우 문서오픈시 오류로 인해 문서오픈할 경우 두번째 파라미터인 title명만 approvaldocument로 변경함. 2019.0923 STS HK.CHO
                    sHtml += "<span class='td_txt' style='cursor:pointer;' onclick=\"OpenApprovalFormWindow('" + FormUrl + "?processInstanceId=" + adoc[0] + "&parentprocessInstanceId=" + adoc[3] + "&processCode=" + adoc[4];
                    sHtml += "','approvaldocument', '" + adoc[0] + "', '" + adoc[3] + "'," + iWidth + ", " + iHeight + ", 'scroll');\">&nbsp;" + $.trim(adoc[2]) + "</span></div></td>";
                    sHtml += "<td width=\"20\" style=\"padding-right:5px;\">";
                    sHtml += "<a href='javascript:fn_DeleteDocLinkItem_mobile(\"tblDocLinkInfo_" + i + "\");'>&nbsp;";
                    sHtml += "<img src='/images/mobile/Base/images/btn_delete.jpg' alt='Delete' title='Delete' class='img_align10' /></a>";
                    sHtml += "</td>";
                    sHtml += "</tr>";

                    if (i == 0) {
                        l_Tbody.html('<tr><td id="DocLinkInfo"></td></tr>');
                    }
                    l_Tbody.append(sHtml);
                } else {

                    szdoclinksinfo += "<div style='margin: 2px 10px 2px 0px; height: 22px; display: flex; align-items: center;'>";
                    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {
                        szdoclinksinfo += "<input type=checkbox id='chkDoc' name='_" + adoc[0] + "' value='" + adoc[0] + "' class='td_check' style='margin: 0px 5px 0px 10px !important;flex:none;'>";
                    }
                    szdoclinksinfo += "<span onmouseover='this.style.color=\"#2f71ba\";' onmouseout='this.style.color=\"#555555\";'  style='cursor:pointer;'  onclick=\"OpenApprovalFormWindow('";
                    szdoclinksinfo += FormUrl + "?processInstanceId=" + adoc[0] + "&parentprocessInstanceId=" + adoc[3] + "&processCode=" + adoc[4];
                    szdoclinksinfo += "','approvaldocument', '" + adoc[0] + "', '" + adoc[3] + "'," + iWidth + ", " + iHeight + ", 'scroll') \">&nbsp;" + $.trim(adoc[2]) + "</span>";
                    // 연결문서 구분짓기 위한 Comma 추가 : 07. 6. 11. JSI
                    szdoclinksinfo += "</div>";

                }
            } else {
                if (bDisplayOnly) {
                    szdoclinksinfo += adoc[2];
                } else {
                    szdoclinksinfo += "<span onmouseover='this.style.color=\"#2f71ba\";' onmouseout='this.style.color=\"#555555\";'  style='cursor:pointer;'  onclick=\"OpenApprovalFormWindow('";
                    szdoclinksinfo += FormUrl + "?mode=COMPLETE" + "&processInstanceId=" + adoc[0] + "&parentprocessInstanceId=" + adoc[3] + "&processCode=" + adoc[4]
                    szdoclinksinfo += "','approvaldocument', '" + adoc[0] + "', '" + adoc[3] + "'," + iWidth + ", " + iHeight + ", 'scroll') \">&nbsp;" + $.trim(adoc[2]) + "</span>";
                }
                // 연결문서 구분짓기 위한 Comma 추가 : 07. 6. 11. JSI
                if (i < adoclinks.length - 1) {
                    szdoclinksinfo += ", ";
                }
            }

        }

        // 조건문 추가 : 07. 7. 6. JSI
        if (bEdit) {
            if (szdoclinksinfo != "" && (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL")) || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {
                if (location.href.indexOf("Approval/ApprovalWrite") < 0) {
                    //szdoclinksinfo += "<a href='javascript:void(0);' onclick='deletedocitem();'><font color='#009900'><b>" + m_oFormMenu.gLabel_link_delete + "<b></font></a>";
                    //szdoclinksinfo += "<div class='xbtn'><a href='javascript:void(0);'  onclick='deletedocitem();' ><em class='btn_iws_l'><span class='btn_iws_r'><strong class='txt_btn_ws'><img src='/Images/Images/Approval/ico_x.gif' alt='' class='ico_btn' />" + m_oFormMenu.gLabel_link_delete + "</strong></span></em></a></div>";
                    szdoclinksinfo += "<div class='xbtn'><a href='javascript:void(0);'  onclick='deletedocitem();' class='c-button c-button--little' >" + m_oFormMenu.gLabel_link_delete + "</a></div>";
                }
            }
        }
        szdoclinksinfo += "</div>";
    }
        // Data Migration된 문서는 BODY_CONTEXT에 연결문서 정보가 존재한다
    else {
        var bEdit = false;
        if (getInfo("templatemode") == "Read") {
            bEdit = false
        } else {
            bEdit = true;
        }
        //d Filed에 입력 되기 때문에 필요 없음
        //if (szdoclinks == "") {
        //    var m_objXML = $.parseXML("" + getInfo("BODY_CONTEXT"));
        //    if ($(m_objXML).find("DOCLINKS").length == 0) {
        //        szdoclinks = "";
        //    } else {
        //        szdoclinks = $(m_objXML).find("DOCLINKS").text();
        //        $(m_objXML).find("DOCLINKS").remove();
        //        setInfo("BODY_CONTEXT", CFN_XmlToString(m_objXML));
        //    }
        //    try { document.getElementById("DOCLINKS").value = szdoclinks; } catch (e) { }
        //}
        //2013-07-10 YHM 연결문서정보 간소
        // BODY_CONTEXT 에서 읽어 올 경우를 위하여 주석 해제
        if (!bEdit) {
            if (szdoclinks != null && szdoclinks != "") {
                var adoclinks = szdoclinks.split("^");
                for (var i = 0; i < adoclinks.length; i++) {
                    var adoc = adoclinks[i].split("@@@");
                    var aForm = adoc[1].split(";");
                    var objXML = $.parseXML(aForm[0]);
                    var pibd1 = aForm[0];
                    var piid = aForm[1];
                    var bstate = aForm[2];
                    var fmid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('id');
                    var fmnm = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('name');
                    var fmpf = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('prefix');
                    var fmrv = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('revision');
                    var scid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('schemaid');
                    var fiid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('instanceid');
                    var fmfn = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('filename');

                    var FormUrl = "http://" + document.location.host + "/approval/forms/form.aspx";

                    //2006.12.05 by wolf upload UI 변경 : 07. 7. 6. JSI
                    //편집 모드인지 확인
                    //var bEdit = false;
                    //if (getInfo("htmlfilename").indexOf("_read.htm") > -1) {
                    //    bEdit = false
                    //} else {
                    //    bEdit = true;
                    //}

                    //var iWidth = 790;
                    //if (IsWideOpenFormCheck(fmpf)) {
                    //    iWidth = 1070;
                    //}
                    var iWidth = window.screen.width - 15;
                    var iHeight = window.screen.height - 82;

                    // 가로 사이즈 조절
                    try {
                        if (fmpf != "") {
                            //가로양식
                            if (IsWideOpenFormCheck(fmpf)) {
                                iWidth = 1070;
                            }

                            var isFullSize = "0";
                            if (Common.GetBaseConfig("HEC_COMPANY") == "Y") {
                                isFullSize = "1";
                                if (IsWideOpenFormCheckReal(fmpf, Common.GetSession("DN_Code"))) {
                                    iWidth = Common.GetBaseConfig("WideOpenFormWidth");
                                } else {
                                    iWidth = Common.GetBaseConfig("TallOpenViewWidth");
                                }
                            }
                        }
                    } catch (e) {

                    }
                    // 가로 사이즈 조절

                    if (bEdit) {
                        if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {
                            szdoclinksinfo += "<input type=checkbox id='chkDoc' name='_" + adoc[0] + "' value='" + adoc[0] + "' class='td_check' style='flex:none;'>";
                        }
                        szdoclinksinfo += "<span onmouseover='this.style.color=\"#2f71ba\";' onmouseout='this.style.color=\"#555555\";'  style='cursor:pointer;'  onclick=\"OpenApprovalFormWindow('";
                        szdoclinksinfo += FormUrl + "?mode=COMPLETE" + "&piid=" + piid + "&bstate=" + bstate + "&fmid=" + fmid + "&fmnm=" + toUTF8(fmnm) + "&fmpf=" + fmpf + "&fmrv=" + fmrv + "&fiid=" + fiid + "&scid=" + scid;
                        szdoclinksinfo += "','" + adoc[2] + "', '" + adoc[0] + "', '" + adoc[3] + "'," + iWidth + ", " + iHeight + ", 'scroll') \">" + adoc[2] + "</span>";
                        // 연결문서 구분짓기 위한 Comma 추가 : 07. 6. 11. JSI

                    } else {
                        if (bDisplayOnly) {
                            szdoclinksinfo += adoc[2];
                        } else {
                            szdoclinksinfo += "<span onmouseover='this.style.color=\"#2f71ba\";' onmouseout='this.style.color=\"#555555\";'  style='cursor:pointer;'  onclick=\"OpenApprovalFormWindow('";
                            szdoclinksinfo += FormUrl + "?mode=COMPLETE" + "&piid=" + piid + "&bstate=" + bstate + "&fmid=" + fmid + "&fmnm=" + toUTF8(fmnm) + "&fmpf=" + fmpf + "&fmrv=" + fmrv + "&fiid=" + fiid + "&scid=" + scid;
                            szdoclinksinfo += "','" + adoc[2] + "', '" + adoc[0] + "', '" + adoc[3] + "'," + iWidth + ", " + iHeight + ", 'scroll') \">" + adoc[2] + "</span>";
                        }
                        // 연결문서 구분짓기 위한 Comma 추가 : 07. 6. 11. JSI
                        if (i < adoclinks.length - 1) {
                            szdoclinksinfo += ", ";
                        }
                    }
                }
                if (bEdit) {
                    if (szdoclinksinfo != "" && (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL")) || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {
                        if (location.href.indexOf("Approval/ApprovalWrite") < 0) {
                            //szdoclinksinfo += "<a href='javascript:void(0);' onclick='deletedocitem();'><font color='#009900'><b>" + m_oFormMenu.gLabel_link_delete + "<b></font></a>";
                            //szdoclinksinfo += "<div class='xbtn'><a href='javascript:void(0);'  onclick='deletedocitem();' ><em class='btn_iws_l'><span class='btn_iws_r'><strong class='txt_btn_ws'><img src='/Images/Images/Approval/ico_x.gif' alt='' class='ico_btn' />" + m_oFormMenu.gLabel_link_delete + "</strong></span></em></a></div>";
                            szdoclinksinfo += "<div class='xbtn'><a href='javascript:void(0);'  onclick='deletedocitem();' class='btn_wh_sm' >" + m_oFormMenu.gLabel_link_delete + "</a></div>";
                        }
                    }
                }
            }
        }
        else {
            if (szdoclinks != null && szdoclinks != "") {
                document.getElementById("DOCLINKS").value = "";
            }
        }
    }
    if (szdoclinksinfo != "") {
        document.getElementById("tbLinkInfo").style.display = "";
        document.getElementById("trDocLinkInfo").style.display = "";
        document.getElementById("DocLinkInfo").innerHTML = szdoclinksinfo;
    }
    else {
        document.getElementById("tbLinkInfo").style.display = "none";
        document.getElementById("trDocLinkInfo").style.display = "none";
    }
}

function OpenApprovalFormWindow(url, title, piid, parent_piid, width, height, isScroll) {
    //if (getInfo("use_tab") == "Y" && parent.g_IS_NewWindow != "Y") {
    //    var pStrTabID = piid + "_" + parent_piid.trim();
    //    var currentTabID = parent.document.getElementById("hidMasterCurrentTab").value;
    //    var currentMenu = parent.document.getElementById("hidTabMenuID_" + currentTabID).value;
    //    if ($("#divTabItem_" + pStrTabID, parent.document).length > 0) {
    //        parent.Master_Tab_OnClick(pStrTabID);
    //    }
    //    else {
    //        //var pStrTabTitle = getRowAttribute(g_eCurrentRow, "subject");
    //        var pStrTabTitle = title;
    //        var sbTabHTML = new StringBuilder();
    //        sbTabHTML.AppendFormat("<div class=\"l-contents-tabs__item\" id=\"divTabItem_{0}\" name=\"divTabItem\" onclick=\"Master_Tab_OnClick('{0}');\">", pStrTabID);
    //        sbTabHTML.AppendFormat("<div class=\"l-contents-tabs__title\" id=\"divTabItemTitle_{0}\" title=\"{2}\">{1}</div>", pStrTabID, $("<div/>").text(pStrTabTitle).html(), pStrTabTitle);
    //        sbTabHTML.AppendFormat("<a href=\"javascript:Master_TabClose_OnClick('{0}');\" class=\"l-contents-tabs__delete\"><i class=\"i-cancle\"></i></a>", pStrTabID);
    //        sbTabHTML.Append("</div>");

    //        var sbContentHTML = new StringBuilder();
    //        sbContentHTML.AppendFormat("<div id=\"divTabContent_{0}\" name=\"divTabContent\">", pStrTabID);
    //        sbContentHTML.Append("<div class=\"l-contents-body\">");
    //        sbContentHTML.Append("<div class=\"l-sub-contents\">");

    //        sbContentHTML.AppendFormat("<iframe id=\"ifrTabContent_{0}\" name=\"ifrTabContent\" ></iframe>", pStrTabID);
    //        sbContentHTML.AppendFormat("<input id=\"hidTabTitle_{0}\" type=\"hidden\" value=\"{1}\"  />", pStrTabID, pStrTabTitle);
    //        sbContentHTML.AppendFormat("<input id=\"hidTabMenuID_{0}\" type=\"hidden\" value=\"{1}\" />", pStrTabID, currentMenu);
    //        sbContentHTML.Append("</iframe>");
    //        sbContentHTML.Append("</div>");
    //        sbContentHTML.Append("</div>");
    //        sbContentHTML.Append("</div>");

    //        var oTabHTML = $(sbTabHTML.ToString());
    //        var oContentHTML = $(sbContentHTML.ToString());

    //        $("#divTabItemList", parent.document).prepend(oTabHTML);
    //        $("#divTabContent_Main", parent.document).after(oContentHTML);
    //        $("#ifrTabContent_" + pStrTabID, parent.document).attr("src", url);
    //        $("#ifrTabContent_" + pStrTabID, parent.document).css("width", $("#divTabContent_" + pStrTabID).outerWidth(true));
    //        $("#ifrTabContent_" + pStrTabID, parent.document).css("border", "0px");
    //        $("#ifrTabContent_" + pStrTabID, parent.document).css("display", "inline-table");
    //        parent.Master_Tab_OnClick(pStrTabID);
    //    }
    //}
    //else {
    CFN_OpenWindow(url, title, width, height, isScroll);
    //}
}

function G_displaySpnRejectDocLinkInfo() {//수정본
    var szdoclinksinfo = "";
    var szdoclinks = "";
    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {
        if (document.getElementById("REJECTDOCLINKS") != null) {
            try { szdoclinks = document.getElementById("REJECTDOCLINKS").value; } catch (e) { }
        }
    } else {
        if (document.getElementById("REJECTDOCLINKS") != null) {
            try { szdoclinks = document.getElementById("REJECTDOCLINKS").value; } catch (e) { }
        }
        if (szdoclinks == "") {
            m_objXML = $.parseXML("<root>" + getInfo("BODY_CONTEXT") + "</root>");
            if ($(m_objXML).find("REJECTDOCLINKS").length != 0) szdoclinks = $(m_objXML).find("REJECTDOCLINKS").text();
        }
    }
    //반송함에서 열려진 문서인 경우
    if (m_RejectDocLink != "") {
        if (szdoclinks.indexOf(m_RejectDocLink) == -1) {
            if (szdoclinks != "") {
                szdoclinks += "^" + m_RejectDocLink;
            } else {
                szdoclinks = m_RejectDocLink;
            }
            if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {
                document.getElementById("REJECTDOCLINKS").value = szdoclinks;
            }
        }
    }
    if (szdoclinks == null) { szdoclinks = ""; }
    if (szdoclinks != "") {
        var adoclinks = szdoclinks.split("^");
        for (var i = 0; i < adoclinks.length; i++) {
            var adoc = adoclinks[i].split("@@@");

            var aForm = adoc[1].split(";");
            var objXML = $.parseXML(aForm[0]);
            var pibd1 = aForm[0];
            var piid = aForm[1];
            var bstate = aForm[2];
            var fmid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('id');
            var fmnm = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('name');
            var fmpf = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('prefix');
            var fmrv = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('revision');
            var scid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('schemaid');
            var fiid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('instanceid');
            var fmfn = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('filename');
            szdoclinksinfo += "<a style='cursor:hand' onClick=\"processSelectedRow(\'" + piid + "\',\'" + bstate + "\',\'" + fmid + "\',\'" + fmnm + "\',\'" + fmpf + "\',\'" + fmrv + "\',\'" + fiid + "\',\'" + scid + "\')\">" + adoc[3] + "-" + adoc[2] + "</a>&nbsp;&nbsp;";
        }
    }
    //회신옵션 추가 20150129
    if (document.getElementById("RejectDocLinkInfo") != null && (getInfo("reuse") == "YH" || (formJson.BODY_CONTEXT.REJECTDOCLINKS != "" && formJson.BODY_CONTEXT.REJECTDOCLINKS != null && formJson.BODY_CONTEXT.REJECTDOCLINKS != "null"))) {
        document.getElementById("tbRejectDocLinkInfo").style.display = "";
        document.getElementById("RejectDocLinkInfo").innerHTML = szdoclinksinfo;
    }
}

//프로세스 메뉴얼 추가

function InputPMLinks(szPMV) {
    var szHTML = "";
    if (getInfo("scPM") == "1") {
        G_displaySpnPMLinkInfo(szPMV, (szPMV == null ? false : true));
    }
}
function G_displaySpnPMLinkInfo(szPMV, bView) {//수정본
    var szdoclinksinfo = "";
    var szdoclinks = "";
    if (szPMV != null) {
        szdoclinks = szPMV;
    } else {
        if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || g_szEditable == true) {
            try { szdoclinks = PMLINKS.value; } catch (e) { }
        } else {
            try { szdoclinks = PMLINKS.value; } catch (e) { }
            if (szdoclinks == "") {
                var m_objXML = $.parseXML("<root>" + getInfo("BODY_CONTEXT") + "</root>");
                szdoclinks = $(m_objXML).find("PMLINKS").text();
            }
        }
    }
    if (szdoclinks != "") {
        var adoclinks = szdoclinks.split("^");
        for (var i = 0; i < adoclinks.length; i++) {
            var aForm = adoclinks[i].split(";");
            var pmid = aForm[0];
            var pmnm = aForm[1];
            // var FormUrl = "http://" + document.location.host + "/CoviBPM/COVIBPMNet/BPD/Common/BPDefiner/ProcessPool/ProcessMapView.aspx?Popup=true&";
            var FormUrl = document.location.protocol + "//" + document.location.host + "/CoviBPM/COVIBPMNet/BPD/Common/BPDefiner/ProcessPool/ProcessMapView.aspx?Popup=true&";
            // 편집 모드인지 확인
            var bEdit = false;
            if (String(window.location).indexOf("_read.htm") > -1) { bEdit = false } else { bEdit = true; }
            if (bEdit) {
                if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {//getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE"
                    if (getInfo("scPMV") == "") {
                        szdoclinksinfo += "<input type=checkbox id='chkPM' name='_" + pmid + "' value='" + pmid + "'>";
                    }
                }
            }
            szdoclinksinfo += "<span onmouseover='this.style.color=\"#2f71ba\";' onmouseout='this.style.color=\"#111111\";'  style='cursor:hand;'  onclick=\"window.open('";
            szdoclinksinfo += FormUrl + "ProcessID=" + pmid;
            szdoclinksinfo += "','','width=800,height=600,scrollbars=yes') \">" + pmnm + "</span>";
            if (i < (adoclinks.length - 1)) { szdoclinksinfo += ", "; }
        }
        if (bEdit) {
            if (szdoclinksinfo != "" && (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL")) || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {//getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE"
                if (getInfo("scPMV") == "") { szdoclinksinfo += "<a href='javascript:void(0);' onclick='deletepmitem();'><font color='#009900'><b>" + m_oFormMenu.gLabel_delete + "<b></font></a>"; }
            }
        }
    }
    document.getElementById("PMLinkInfo").innerHTML = szdoclinksinfo;
    if (document.getElementById("PMLinkInfo").innerHTML != "") {
        if (document.getElementById("trPMLinkInfo") != undefined) {
            document.getElementById("trPMLinkInfo").style.display = "";
        }
    }
}

function InputDocLinks(szValue) {
    try {
        if (document.getElementById("DOCLINKS").value == "") {
            document.getElementById("DOCLINKS").value = szValue; G_displaySpnDocLinkInfo();
        }
        else {
            adddocitem(szValue);
        }
    }
    catch (e) {
    }
}
function adddocitem(szAddDocLinks) {
    //2013-07-10 YHM 연결문서정보 간소화
    //    var adoclinks = document.getElementById("DOCLINKS").value.split("^");
    //    var aadddoclinks = szAddDocLinks.split("^");
    var adoclinks = document.getElementById("DOCLINKS").value.split("^^^");
    var aadddoclinks = szAddDocLinks.split("^^^");
    var szdoclinksinfo = "";

    var tmp = "";
    for (var i = 0; i < aadddoclinks.length; i++) {
        if (aadddoclinks[i] != null) {
            var bexitdoclinks = false;
            for (var j = 0; j < adoclinks.length; j++) { if (aadddoclinks[i] == adoclinks[j]) { bexitdoclinks = true; } }
            if (!bexitdoclinks) adoclinks[adoclinks.length] = aadddoclinks[i];
        }
    }

    for (var k = 0; k < adoclinks.length; k++) {
        if (adoclinks[k] != null && adoclinks[k] != "") {
            if (szdoclinksinfo != "") {
                //2013-07-10 YHM 연결문서정보 간소화
                //                szdoclinksinfo += "^" + adoclinks[k];
                szdoclinksinfo += "^^^" + adoclinks[k];
            } else {
                szdoclinksinfo += adoclinks[k];
            }
        }
    }
    document.getElementById("DOCLINKS").value = szdoclinksinfo;
    G_displaySpnDocLinkInfo();
}
function deletedocitem() {
    //2013-07-10 YHM 연결문서정보 간소화
    //    var adoclinks = document.getElementById("DOCLINKS").value.split("^");
    var adoclinks = document.getElementById("DOCLINKS").value.split("^^^");
    var szdoclinksinfo = "";
    var chkDoc = $("#DocLinkInfo").find("input[id='chkDoc']");
    var tmp = "";

    if (chkDoc.length > 0) {
        chkDoc.each(function (i, elm) {
            if ($(elm).is(":checked")) {
                //결재 문서 첨부시 전체 선택 후 [결재문서 첨부목록] 전체 삭제 시 맨 앞 첨부된 문서가 제거 되지 않는 현상 replace 로 처리 KBW20180330 
                tmp = $(elm)[0].value.replace("^^", "");
                for (var j = adoclinks.length - 1; j >= 0; j--) {
                    if (adoclinks[j] != null && adoclinks[j].indexOf(tmp) > -1) {
                        adoclinks[j] = null;
                    }
                }
            }
        });
    }
    for (var i = 0; i < adoclinks.length; i++) {
        if (adoclinks[i] != null) {
            if (szdoclinksinfo != "") {
                //2013-07-10 YHM 연결문서정보 간소화
                //                szdoclinksinfo += "^" + adoclinks[i];
                szdoclinksinfo += "^^^" + adoclinks[i];
            } else {
                szdoclinksinfo += adoclinks[i];
            }
        }
    }
    document.getElementById("DOCLINKS").value = szdoclinksinfo;
    G_displaySpnDocLinkInfo();
}

function G_displaySpnDocLinkInfo_Mail() {//메일 보내기(문서첨부링크 만들기)
    var szdoclinksinfo = "";
    var szdoclinks = "";
    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {
        try { szdoclinks = document.getElementById("DOCLINKS").value; } catch (e) { }
    } else {
        try { szdoclinks = document.getElementById("DOCLINKS").value; } catch (e) { }
        if (szdoclinks == "") {
            var m_objXML = $.parseXML("<root>" + getInfo("BODY_CONTEXT") + "</root>");
            if ($(m_objXML).find("DOCLINKS").length == 0) {
                szdoclinks = ""
            } else {
                szdoclinks = $(m_objXML).find("DOCLINKS").text();
            }
            try { document.getElementById("DOCLINKS").value = szdoclinks; } catch (e) { }
        }
    }
    //2007.08 유유미 : DOCLINKS 값에 undefined 가 들어 가서 오류남. 원인 찾기전 임시로 작성
    //szdoclinks = szdoclinks.replace("undefined^","");
    //szdoclinks = szdoclinks.replace("undefined","");
    if (szdoclinks != "") {
        //2013-07-10 YHM 연결문서정보 간소화
        /*
        var adoclinks = szdoclinks.split("^");
        szdoclinksinfo = "&nbsp;&nbsp;";
        for (var i = 0; i < adoclinks.length; i++) {
            var adoc = adoclinks[i].split("@@@");
            var aForm = adoc[1].split(";");
            var objXML = $.parseXML(aForm[0]);
            if ($(objXML).find("ClientAppInfo > App > forminfos > forminfo").length > 0) {
                var pibd1 = aForm[0];
                var piid = aForm[1];
                var bstate = aForm[2];
                var fmid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('id');
                var fmnm = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('name');
                var fmpf = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('prefix');
                var fmrv = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('revision');
                var scid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('schemaid');
                var fiid = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('instanceid');
                var fmfn = $(objXML).find("ClientAppInfo > App > forminfos > forminfo").attr('filename');

                //2006.12.05 by wolf upload UI 변경 : 07. 7. 6. JSI
                // 편집 모드인지 확인
                var bEdit = false;
                if (String(window.location).indexOf("_read.htm") > -1) {
                    bEdit = false
                } else {
                    bEdit = true;
                }

                if (bEdit) {

                    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {//getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE"
                        szdoclinksinfo += "<input type=checkbox id='chkDoc' name='_" + adoc[0] + "' value='" + adoc[0] + "'>";

                    }
                    szdoclinksinfo += "<img height='14' src='/common/images/COVIPortalNet/i_clip.gif' width='7' align='absmiddle' />&nbsp;<a style='cursor:hand' href='" + processSelectedRow_Mail(piid, bstate, fmid, fmnm, fmpf, fmrv, fiid, scid) + "' target='_blank'><b>" + adoc[2] + "</b></a>&nbsp;&nbsp;";

                } else {
                    szdoclinksinfo += "<img height='14' src='/common/images/COVIPortalNet/i_clip.gif' width='7' align='absmiddle' />&nbsp;<a href='" + processSelectedRow_Mail(piid, bstate, fmid, fmnm, fmpf, fmrv, fiid, scid) + "' target='_blank'><b>" + adoc[2] + "</b></a>&nbsp;&nbsp;";

                    // 연결문서 구분짓기 위한 Comma 추가 : 07. 6. 11. JSI
                    if (i < adoclinks.length - 1) { szdoclinksinfo += ", "; }
                }
            }
        }
        */
        var adoclinks = szdoclinks.split("^^^");
        szdoclinksinfo = "&nbsp;&nbsp;";
        for (var i = 0; i < adoclinks.length; i++) {
            var adoc = adoclinks[i].split("@@@");

            //2006.12.05 by wolf upload UI 변경 : 07. 7. 6. JSI
            // 편집 모드인지 확인
            var bEdit = false;
            if (String(window.location).indexOf("_read.htm") > -1) {
                bEdit = false
            } else {
                bEdit = true;
            }

            if (bEdit) {

                if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {//getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE"
                    szdoclinksinfo += "<input type=checkbox id='chkDoc' name='_" + adoc[0] + "' value='" + adoc[0] + "' style='flex:none;'>";

                }
                szdoclinksinfo += "<img height='14' src='/common/images/COVIPortalNet/i_clip.gif' width='7' align='absmiddle' />&nbsp;<a style='cursor:hand' href='" + processSelectedRow_Mail(adoc[0]) + "' target='_blank'><b>" + adoc[2] + "</b></a>&nbsp;&nbsp;";

            } else {
                szdoclinksinfo += "<img height='14' src='/common/images/COVIPortalNet/i_clip.gif' width='7' align='absmiddle' />&nbsp;<a href='" + processSelectedRow_Mail(adoc[0]) + "' target='_blank'><b>" + adoc[2] + "</b></a>&nbsp;&nbsp;";

                // 연결문서 구분짓기 위한 Comma 추가 : 07. 6. 11. JSI
                if (i < adoclinks.length - 1) { szdoclinksinfo += ", "; }
            }

        }

        // 조건문 추가 : 07. 7. 6. JSI
        if (bEdit) {

            if (szdoclinksinfo != "" && (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE" || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBAPPROVAL")) || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "PCONSULT") || (getInfo("loct") == "APPROVAL" && getInfo("mode") == "SUBREDRAFT") || g_szEditable == true) {//getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE"

                szdoclinksinfo += "<a href='javascript:void(0);' onclick='deletedocitem();' class='btn_wh_sm'><img src='/GWImages/Common/attachicon/del.gif' border='0' style='vertical-align:middle;' /></a>";
            }
        }
    }
    document.getElementById("DocLinkInfo").innerHTML = szdoclinksinfo;
    try {
        //parent.frames.document.getElementById("fileview").document.getElementById("DocLinkInfo").innerHTML = szdoclinksinfo;
        document.getElementById("DocLinkInfo").innerHTML = szdoclinksinfo;
        var eTR = document.getElementById("DocLinkInfo").parentElement;
        if (String(window.location).indexOf("_read.htm") > -1) { //조회페이지 일때만 첨부파일 영역 활성화
            while (eTR.tagName != "TABLE") {
                eTR = eTR.parentElement;
            }
            if (bFileView) {
                eTR.style.display = "none";
            } else {
                eTR.style.display = "";
            }
            parent.main.rows = "40,*,80,0";
        } else {
            while (eTR.tagName != "TABLE") {
                eTR = eTR.parentElement;
            }
            eTR.style.display = "";
            //parent.main.rows = "40,*,0,0";
        }
    } catch (e) { }
}

function processSelectedRow(piid, bstate, fmid, fmnm, fmpf, fmrv, fiid, scid) {
    var strURL = "Form.aspx?mode=COMPLETE" + "&piid=" + piid + "&bstate=" + bstate
					+ "&fmid=" + fmid + "&fmnm=" + toUTF8(fmnm)
					+ "&fmpf=" + fmpf + "&fmrv=" + fmrv + "&fiid=" + fiid + "&scid=" + scid;
    //openWindow(strURL, "newMessageWindow", 800, 600, 'resize');

    window.open(strURL, "newMessageWindow", "width=800,height=600,scrollbars=yes", false);
}

function processSelectedRow_Mail(piid) {
    //2013-07-10 YHM 연결문서정보 간소화
    //    var strURL = "/Approval/forms/form.aspx?mode=COMPLETE" + "&piid=" + piid + "&bstate=" + bstate
    //					+ "&fmid=" + fmid + "&fmnm=" + toUTF8(fmnm)
    //					+ "&fmpf=" + fmpf + "&fmrv=" + fmrv + "&fiid=" + fiid + "&scid=" + scid
    //					+ "&hhdFrom=outlook&hhdBiz=APV&hhdRtUrl=FORM";
    var strURL = "/Approval/forms/form.aspx?mode=COMPLETE" + "&piid=" + piid
					+ "&hhdFrom=outlook&hhdBiz=APV&hhdRtUrl=FORM";
    // return "http://" + window.location.host + strURL;
    return document.location.protocol + "//" + window.location.host + strURL;
}

/*******************************************
***** 양식 파일 내 에디터 함수 정리 시작   *****
*******************************************/

////////////////////////////////////////////////////////////////////
//				에디터에 추가된 이미지, 업로드				      //	
////////////////////////////////////////////////////////////////////

var gz_Editor = "0";
//시스템 사용 에디터 0.TextArea, 1.DHtml, 2.TagFree, 3.XFree, 4.TagFree/XFree, 5.Activesquare, 6.CrossEditor, 7.ActivesquareDefault/CrossEditor

//에디터 타입 참조방식 변경 : 김진우 : 2014-04-23 : XFROM PRJ.
function UpdateImageData() {
    gz_Editor = editortype.is(); //getInfo("editortype");
    var nfolder = "IMAGEATTACH";
    var n = -1;
    if (editortype.is('xfree') || (editortype.is('tagfreenxfree') && window.ActiveXObject === undefined)) {
        // xfree iframe으로 변경
        //[2014-11-24 XFree2]
        document.getElementById("dhtml_body").value = document.getElementById('xFreeFrame').contentWindow.tbContentElement.getHtmlValue();
        n = document.getElementById("dhtml_body").value.indexOf('/FrontStorage/') + 1;
    } else if (editortype.is('tagfree') || (editortype.is('tagfreenxfree') && window.ActiveXObject !== undefined)) {
        document.tbContentElement.SetDefaultTargetAs('_blank'); //link 변경
        document.getElementById("dhtml_body").value = document.tbContentElement.HtmlValue;
        n = document.getElementById("dhtml_body").value.indexOf('file:///');
    } else if (editortype.is('crosseditor') || (editortype.is('activesquaredefault') && window.ActiveXObject === undefined)) {
        //[2014-11-24 XFree2]
        document.getElementById("dhtml_body").value = document.getElementById('xFreeFrame').contentWindow.tbContentElement.getHtmlValue();
        //n = document.getElementById("dhtml_body").value.indexOf(document.location.protocol + "//") + 1;
        var protocol = document.location.protocol.toLowerCase() + "//";
        n = document.getElementById("dhtml_body").value.indexOf(protocol) + 1;
    } else if (editortype.is('activesquare') || (editortype.is('activesquaredefault') && window.ActiveXObject !== undefined)) {
        //n = document.tbContentElement.GetFileNum(0);
        l_EditorType = false; // true : ActiveSquare , false : CrossEditor
        if (_ie) {
            if (window.localStorage.getItem("EditorType") == "Active") {
                var Installed;
                try {
                    var Installx = new ActiveXObject("NamoWeCtl.2301100001.7.0"); //신세계 ProgID
                    if (Installx) Installed = true; else Installed = false;
                }
                catch (ex) { Installed = false; }

                if (Installed) {
                    l_EditorType = true;
                } else {
                    l_EditorType = false;
                }
            } else {
                l_EditorType = false;
            }
        } else {
            l_EditorType = false;
        }

        if (l_EditorType) {
            //n = document.tbContentElement.GetFileNum(0);
            var imgs = $(document.getElementById("dhtml_body").value).find("img");
            $(imgs).each(function () {
                n = n + 2;
            });
        }
        else {
            var protocol = document.location.protocol.toLowerCase() + "//";
            n = document.getElementById("dhtml_body").value.indexOf(protocol) + 1;
        }
    }

    if (n > 0) {
        EditorGetContent();
        if (hidContentMime != "") {
            // frontstorage에 있는 이미지를 BackStorage\Approval 로 이동
            var EditorType = "";
            if (l_EditorType)
                EditorType = "Active";
            else
                EditorType = "Cross";

            var szRequestXml = "<?xml version='1.0'?>" +
								"<parameters>" +
									"<BodyContent><![CDATA[" + hidContentText + "]]></BodyContent>" +
									"<EditorContent><![CDATA[" + hidContentMime + "]]></EditorContent>" +
									"<ImageContent><![CDATA[" + hidContentImage + "]]></ImageContent>" +
									"<fiid><![CDATA[" + getInfo("fiid") + "]]></fiid>" +
                                    "<EditorType><![CDATA[" + EditorType + "]]></EditorType>" +
                                "</parameters>";
            CFN_CallAjax("/Approval/FileAttach/BodyImgMoveBAckStorage.aspx", szRequestXml, function (data) {
                event_attchSync(data);
            }, false, "xml");
        }
    }
}

function event_attchSync(dataresponseXML) {
    var xmlReturn = dataresponseXML;
    var errorNode = $(xmlReturn).find("response > error");
    if (errorNode.length > 0) {
        alert("AttachImage ERROR : " + errorNode[0].text);
        return;
    } else {
        document.getElementById("dhtml_body").value = $(xmlReturn).find("response > htmldata").text();
        if (editortype.is('xfree') || (editortype.is('tagfreenxfree') && window.ActiveXObject === undefined)) {
            tbContentElement.SetHtmlValue(document.getElementById("dhtml_body").value);
        } else if (editortype.is('tagfree') || (editortype.is('tagfreenxfree') && window.ActiveXObject !== undefined)) {
            document.tbContentElement.HtmlValue = document.getElementById("dhtml_body").value;
        } else if (editortype.is('crosseditor') || (editortype.is('activesquaredefault') && window.ActiveXObject === undefined)) {
            tbContentElement.SetBodyValue(document.getElementById("dhtml_body").value);
        } else if (editortype.is('activesquare') || (editortype.is('activesquaredefault') && window.ActiveXObject !== undefined)) {
            document.tbContentElement.value = document.getElementById("dhtml_body").value;
            //url변경
            var objDOM = document.tbContentElement.CreateDOM();
            objDOM.charset = "utf-8";
            var imgName = new Array;
            var szdate = getInfo("svdt").replace(/:/gi, "").replace(/오후/gi, "").replace(/오전/gi, "").replace(/ /gi, "");
            var g_szURL = "/GWStorage/e-sign/Approval/IMAGEATTACH"; //"http://" + document.location.host + 
            for (var i = 0; i < objDOM.images.length; i++) {
                var imgSrc = objDOM.images[i].src;
                imgSrc = imgSrc.toLowerCase();
                if (imgSrc.indexOf("file:///") > -1) { //backstorage/approval/attach== -1					
                    imgName[i] = imgSrc.substring(imgSrc.lastIndexOf('/') + 1, imgSrc.length);
                    objDOM.images[i].src = g_szURL + "/" + szdate + "_" + imgName[i];
                }
            }
            document.tbContentElement.Value = objDOM.body.innerHTML;
            document.tbContentElement.DeleteDOM(); // DOM 사용하고 난 후에는 삭제해주어야 한다.		                    
        }
    }
}

/*******************************************
***** 양식 파일 내 에디터 함수 정리 끝   *****
*******************************************/

/*******************************************
*** 양식 이름 옆 버튼 이벤트 처리 : 시작   *****
*******************************************/

//양식 이름 셋팅
function initheadname(szfmnm, bContextMenu) {
    var szheadname = szfmnm;

    //2014-05-27 박한 workplace때 사용하던 즐겨찾기 버튼 삭제 (양식제목 우측 버튼)
    //if (m_oFormMenu.document.getElementById("btModify") == null) {
    //    if (bContextMenu) {
    //        szheadname += '<img src=\"/Covi/common/btn/btn_temp_space.gif" align="abmiddle" alt="" />'; //이미지를 뺄경우 디자인이 틀어져서 빈이미지 넣음
    //    }
    //}
    //else if (m_oFormMenu.document.getElementById("btModify").title == "1") {//편집모드일경우 버튼 안보임
    //    if (bContextMenu) {
    //        szheadname += '<img src=\"/Covi/common/btn/btn_temp_space.gif" align="abmiddle" alt="" />'; //이미지를 뺄경우 디자인이 틀어져서 빈이미지 넣음
    //    }
    //}
    //else {
    //    if (bContextMenu) {
    //        szheadname += '&nbsp;<img src=\"/Images/Images/Approval/btn_layer.gif" align="abmiddle" alt="" onclick="displayminimenu(this)"  id="btn_formhead" />';
    //    }
    //}

    return szheadname;
}

/***********2014-05-27 박한 workplace때 사용하던 즐겨찾기 버튼 삭제 (양식제목 우측 버튼)
	function displayminimenu() , function minimenu() 주석처리 ********************/
//function displayminimenu(obj) {
//    minimenu(obj, -100, 10, obj.value);
//}

//function minimenu(f1, diffx, diffy, szvalue) {
//    ////debugger;

//    var x = 0; var y = 0;
//    var sH = 0; var sW = 0;
//    if (document.getElementById) {
//        if (isNaN(window.screenX)) {
//            //			x=window.screenLeft;
//            //			y = window.screenTop;
//            x = (document.layers) ? loc.pageX : event.clientX;
//            y = (document.layers) ? loc.pageY : event.clientY;
//        } else {
//            x = AnchorPosition_getPageOffsetLeft(f1) + 10;
//            y = AnchorPosition_getPageOffsetTop(f1) + 10;
//        }
//    }
//    else if (document.all) {
//        x = event.clientX;
//        y = event.clientY;
//        sH = parseInt(document.body.scrollTop);
//        sW = parseInt(document.body.scrollLeft);
//    }
//    else if (document.layers) {
//        x = loc.pageX;
//        y = loc.pageY;
//        sH = parseInt(document.body.scrollTop);
//        sW = parseInt(document.body.scrollLeft);
//    }

//    if (window.ActiveXObject !== undefined) {
//        document.getElementById("minifmmenu").style.pixelTop = sH + y + diffy;
//        document.getElementById("minifmmenu").style.pixelLeft = sW + x + diffx;
//    } else {
//        document.getElementById("minifmmenu").style.top = sH + y + diffy + "px";
//        document.getElementById("minifmmenu").style.left = sW + x + diffx + "px";
//    }
//    f1.src = (document.getElementById("minifmmenu").style.display == "block") ? m_oFormMenu.g_imgBasePath + "/Images/Images/Approval/btn_layer.gif" : m_oFormMenu.g_imgBasePath + "/Covi/common/btn/btn_icon_up.gif";
//    document.getElementById("minifmmenu").style.display = (document.getElementById("minifmmenu").style.display == "block") ? "none" : "block";
//    if (document.getElementById("minifmmenu").style.display == "none") {
//        document.getElementById("dropForm").style.display = "none"
//    }
//    if (document.getElementById("minifmmenu").style.display == "block") {
//        ////debugger;
//        var oContextHTML = "";
//        if (window.ActiveXObject !== undefined) {
//            oContextHTML = frmminimenu.document.all["divminemenu_Main"];
//        } else {
//            oContextHTML = document.getElementById("frmminimenu").contentDocument.getElementById("divminemenu_Main");
//        }
//        if (oContextHTML != null) {
//            oContextHTML.style.display = "";

//            var h = oContextHTML.offsetHeight;
//            var w = oContextHTML.offsetWidth;
//            document.getElementById("minifmmenu").style.width = w + "px";
//            document.getElementById("minifmmenu").style.height = h + "px";
//        }
//    }
//    if (m_oFormMenu.document.getElementById("btReUse").title == "1") {//재사용일 경우 타양식 내용 복사 안보임
//        if (window.ActiveXObject !== undefined) {
//            frmminimenu.document.getElementById("dCopy").style.display = "none";
//        } else {
//            document.getElementById("frmminimenu").contentDocument.getElementById("dCopy").style.display = "none";
//        }
//    }
//}
function AnchorPosition_getPageOffsetLeft(el) {
    var ol = el.offsetLeft;
    while ((el = el.offsetParent) != null) { ol += el.offsetLeft; }
    return ol;
}
function AnchorPosition_getPageOffsetTop(el) {
    var ot = el.offsetTop;
    while ((el = el.offsetParent) != null) { ot += el.offsetTop; }
    return ot;
}

//타양식으로 내용 복사 2008.05 강성채
function copyDiff(diffx, diffy, obj) {
    sH = parseInt(document.body.scrollTop);
    sW = parseInt(document.body.scrollLeft);

    document.getElementById("dropForm").style.Top = sH + diffy;
    document.getElementById("dropForm").style.Left = sW + diffx;

    document.getElementById("dropForm").style.display = (document.getElementById("dropForm").style.display == "block") ? "none" : "block";
    if (document.getElementById("dropForm").style.display == "block") {
        var oContextHTML = document.getElementById("nDropForm").document.getElementById("divDifferform");
        if (oContextHTML != null) {
            oContextHTML.style.display = "";

            var h = oContextHTML.offsetHeight;
            var w = oContextHTML.offsetWidth;
            document.getElementById("dropForm").style.width = w;
            document.getElementById("dropForm").style.height = h;
        }
    }
}

/*******************************************
*** 양식 이름 옆 버튼 이벤트 처리 : 끝   *****
*******************************************/

/*******************************************
************* 미사용 함수 : 시작   **********
*******************************************/
/*
    displayRecApvDept(pRecDept)
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

/*
    displayRemainApv(pMaxApv, pRemainApv, poHTML, strwidth) 
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/
function minimenu__(f1, diffx, diffy, szvalue) {
    //x = (document.layers) ? loc.pageX : event.clientX;
    //y = (document.layers) ? loc.pageY : event.clientY;
    var x = 0; var y = 0;
    var sH = 0; var sW = 0;
    if (document.getElementById) {
        if (isNaN(window.screenX)) {
            x = window.screenLeft;
            y = window.screenTop;
        } else {
            x = AnchorPosition_getPageOffsetLeft(f1) + 10;
            y = AnchorPosition_getPageOffsetTop(f1) + 10;
        }
    }
    else if (document.all) {
        x = event.clientX;
        y = event.clientY;
        sH = parseInt(document.body.scrollTop);
        sW = parseInt(document.body.scrollLeft);
    }
    else if (document.layers) {
        x = loc.pageX;
        y = loc.pageY;
        sH = parseInt(document.body.scrollTop);
        sW = parseInt(document.body.scrollLeft);
    }

    //document.getElementById("minifmmenu").style.pixelTop	= sH+y+diffy;
    //document.getElementById("minifmmenu").style.pixelLeft	= sW+x+diffx;
    document.getElementById("minifmmenu").style.top = sH + y + diffy + "px";
    document.getElementById("minifmmenu").style.left = sW + x + diffx + "px";
    f1.src = (document.getElementById("minifmmenu").style.display == "block") ? m_oFormMenu.g_imgBasePath + "/Images/Images/Approval/btn_layer.gif" : m_oFormMenu.g_imgBasePath + "/Covi/common/btn/btn_icon_up.gif";
    document.getElementById("minifmmenu").style.display = (document.getElementById("minifmmenu").style.display == "block") ? "none" : "block";
    if (document.getElementById("minifmmenu").style.display == "none") {
        document.getElementById("dropForm").style.display = "none"
    }
    if (document.getElementById("minifmmenu").style.display == "block") {
        var oContextHTML = document.getElementById("frmminimenu").contentDocument.getElementById("divminemenu_Main");
        if (oContextHTML != null) {
            oContextHTML.style.display = "";

            var h = oContextHTML.offsetHeight;
            var w = oContextHTML.offsetWidth;
            document.getElementById("minifmmenu").style.width = w + "px";
            document.getElementById("minifmmenu").style.height = h + "px";
        }
    }
    if (m_oFormMenu.document.getElementById("btReUse").title == "1") {//재사용일 경우 타양식 내용 복사 안보임
        document.getElementById("frmminimenu").contentDocument.getElementById("dCopy").style.display = "none";
    }
}

function getDocFormXML() {
    var sXML = "";
    if ((getInfo("fmpf") == 'DRAFT') || (getInfo("fmpf") == 'OUTERPUBLISH') || (getInfo("fmpf") == 'OFFICIAL_DOCUMENT') || (getInfo("fmpf") == 'DRAFT03')) {
        if ((m_oFormMenu.document.getElementById("bLASTAPPROVER").value == 'true') || (getInfo("mode") == "SIGN")) { //최종결재자 문서정보 넘길것
            sXML += makeNodeform("DOC_NO") + makeNodeform("INITIATOR_OU_ID") + makeNodeform("DOC_CLASS_ID") + makeNodeform("APPLIED");
        }
    } else {
        if ((m_oFormMenu.document.getElementById("bLASTAPPROVER").value == 'true')) { //최종결재자 문서정보 넘길것
            sXML += makeNodeform("DOC_NO", "0000") + makeNodeform("INITIATOR_OU_ID") + makeNodeform("DOC_CLASS_ID", "0000") + makeNodeform("APPLIED", "2004.05.18");
        }
    }
    if ((getInfo("mode") == "REDRAFT") && (m_oFormMenu.getHasReceiveno() == "true")) sXML += makeNodeform("RECEIVE_NO") + makeNodeform("INITIATOR_OU_ID");
    if (sXML != "") { return "<LAST_MODIFIER_ID>" + getInfo("usid") + "</LAST_MODIFIER_ID><formdata>" + sXML + "</formdata>"; } else { return "<formdata>" + sXML + "</formdata>"; }
}

/*
    setDocLinks()
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

/*
    getLengthOfString(str)
    moved to formutility.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

function setDefaultBody(sText) {
    if (sText == null || sText == "") return;
    switch (getInfo("fmbt")) {
        case "DHTML":
            try {
                Wec.MIMEValue = sText;
            } catch (e) {
                alert(e.message);
                tbContentElement.DocumentHTML = sText;
            }
            break;
        case "HWP":
            HwpCtrl.SetTextFile(sText, "HWP", ""); break;
    }
}

function CoviWindow(fileName, windowName, theWidth, theHeight, etcParam) {
    var objNewWin;
    var x = theWidth;
    var y = theHeight;

    var sx = window.screen.width / 2 - x / 2;
    var sy = window.screen.height / 2 - y / 2 - 40;

    if (etcParam == 'fix') {
        etcParam = "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=0";
    }
    else if (etcParam == 'scroll') {
        etcParam = "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=1,resizable=1";
    }
    else if (etcParam == 'resize') {
        etcParam = "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=1";
    }

    if (sy < 0) {
        sy = 0;
    }

    var sz = ",top=" + sy + ",left=" + sx;

    if (windowName == "newMessageWindow" || windowName == "") {
        windowName = new String(Math.round(Math.random() * 100000));
    }

    objNewWin = window.open(fileName, windowName, etcParam + ",width=" + x + ",height=" + y + sz);
}

/*
    handleResize(elm, offset)
    moved to formutility.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/
/*
    getSplitted(src, delim, idx)
    moved to formutility.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

////양식내 지급결재 처리
//function chk_urgent_onclick(){
//    try{m_oFormMenu.chk_urgent.checked = CHKREQTYPE.checked;}catch(e){}
//    m_oFormMenu.chk_urgent_onclick();
//}
//문서번호 발번 시 관련 값 체크
function checkDocNo(bTemp) {
    if (!bTemp) {
        try {
            if (FORMNO.value == "") {
                alert("양식 내 서식번호가 없습니다.");
                return false;
            } else if (txtDeptCode.value == "") {
                alert("양식 내 과명이 없습니다.");
                return false;
            } else if (txtDocCode.value == "") {
                alert("양식 내 분류가 없습니다.");
                return false;
            }
                //현해당 조건은 전체 체크 최하순으로 가야함

            else if (txtDocCodeDesc != null) {
                if (txtDocCodeDesc.value == "") {
                    alert("양식 내 직무가 없습니다.");
                    return false;
                }
                else {
                    return true;
                }
            }
            else {
                return true;
            }
        } catch (e) {
            alert(e.message)
            return false;
        }
    }
}

//의견 여부 체크 및 링크
function chk_comment_link(user_code, skind) {
    var spath = "";
    if (skind == null) {
    } else {
        switch (skind) {
            case "R": spath = "and @KIND='receive'"; break;
            case "charge": spath = "and @KIND='initiator'"; break;
            default: spath = "and @KIND!='initiator' and @KIND!='receive'"; break;
        }
    }
    if ($(elmComment).find("comment_list[USER_ID='" + user_code + "' " + spath + "]").length > 0) {
        var sUrl = "/Approval/Comment/comment_view.aspx?form_inst_id=" + getInfo("fiid");
        if (g_IS_TabUI == "Y") { sUrl = sUrl + "&IS_Tab=Y"; }
        return "&nbsp;<font color='red' size='2'>☜</font>";
    } else {
        return "";
    }
}

/*
    OpenWorkRequest()
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/
/*
    DelWorkRequest()
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

function getTaskID(strTaskID) {
    if (strTaskID != ';' && -1 != strTaskID.indexOf(';')) {
        $('#WORKREQUEST_ID').val(strTaskID.split(";")[1]);
        $('#WORKREQUEST_NAME').val(strTaskID.split(";")[0]);
    }
}

/*** 업무의뢰 선택 끝 ***/

/*
    setDisplayApvlineLayer(isDisplay)
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

function setInlineRecList(oApvList) { draftRecList(oApvList); }

/*
    insertDicFileInfo(fileName)
    moved to form.refactor.deleted.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

function viewSummary() { //문서정보관련(요약전)
    openWindow("doc_summary.htm", "", 380, 280, "fix");
}

var aryComment = new Array();
function viewComment(idx) {
    var rgParams = null;
    rgParams = new Array();
    rgParams["objMessage"] = aryComment[idx];
    var nWidth = 400;
    var nHeight = 400;
    var sFeature = "dialogHeight:" + nHeight + "px;dialogWidth:" + nWidth + "px;status:no;resizable:yes;scrolling:no;help:no;";
    var strNewFearture = ModifyDialogFeature(sFeature);
    var vRetval = window.showModelessDialog("../ApvLineMgr/comment.aspx", rgParams, strNewFearture);
    //var vRetval = window.showModelessDialog("../ApvLineMgr/comment.aspx", rgParams, "dialogHeight:"+nHeight+"px;dialogWidth:"+nWidth+"px;status:no;resizable:yes;scrolling:no;help:no;");
}

/*******************************************
************* 미사용 함수 : 끝   **********
*******************************************/

//관리자화면의 미리보기시 웹에디터내용 Display (HIW)
function SetWebEditorContents() {
    var vContents = $('#divFormGenerator_if', parent.document)[0].contentWindow.GetWebEditorBody();

    $("#hdnEditorContent").val(vContents);

    var vMode = getInfo("mode");    //DRAFT:양식작성모드 , PROCESS:양식읽기모드

    if (vMode == "DRAFT") {         //양식작성모드
        setTimeout("SetWebEditorContents2();", 2000);
    }
    else if (vMode == "PROCESS") { //양식읽기모드
        $("#tbContentElement").html(vContents);
    }
}

//에디터 타입 참조방식 변경 : KJW : 2014-04-23 : XFROM PRJ.
function SetWebEditorContents2() {
    try {
        var commonEditorType = _BaseConfigApv.EditorType;//Common.GetBaseConfig('EditorType');//GetBaseConfig 변경 2019.03
        var vContents = $("#hdnEditorContent").val();

        switch (commonEditorType) {
            case editortypes['textarea']:
                document.getElementById("txtareaBody").value = vContents;
                break;
            case editortypes['dhtml']:
                //
                break;
            case editortypes['tagfree']:
                dom = document.tbContentElement.getDom();
                dom.body.innerHTML = vContents.replace(/<br \/>/gi, "");
                break;
            case editortypes['xfree']:
                tbContentElement.SetHtmlValue(vContents);
                break;
            case editortypes['tagfreenxfree']:
                if (_ie) {
                    dom = document.tbContentElement.getDom();
                    dom.body.innerHTML = vContents.replace(/<br \/>/gi, "");
                }
                else {
                    tbContentElement.SetHtmlValue(vContents);
                }

                break;
            case editortypes['activesquare']:
                document.tbContentElement.value = vContents;
                break;
        }
    }
    catch (ex) {
        //
    }
}

/*
    changeStFieldsSEL(obj)
    moved to formutility.js
    by KJW : 2014.04.21 : XFORM PRJ.
*/

/** SELECT BOX VALUE 가져오기 **/
function getSelRadioStFields(obj) {
    var radioVal = "";
    var selNm = obj.attr("name");
    if (obj[0].selectedIndex > -1) {
        radioVal += makeNode(selNm, obj[0].options[obj[0].selectedIndex].value);
    } else {
        radioVal += makeNode(selNm, "");
    }
    return radioVal;
}

function getRedraftcheck() {

    //mode,loct 로 확인
    //var strMode = getInfo("mode");
    //var strLoct = getInfo("loct");
    //if ((strMode == "REDRAFT" && strLoct == "REDRAFT") || (strMode == "REDRAFT" && strLoct == "APPROVAL") || (strMode == "RECAPPROVAL" && strLoct == "APPROVAL")) return true;
    //else return false;

    //결재선, loct 로 확인
    var strLoct = getInfo("loct");
    var m_oApvList = $.parseXML(document.getElementById("APVLIST").value);
    var nReceivePending = $(m_oApvList).find("steps>division>taskinfo[kind='receive'][status='pending1']").length;
    if (nReceivePending > 0 && (strLoct == "REDRAFT" || strLoct == "APPROVAL")) return true;
    else return false;
}


function receiveHTTPGetData_OSSelect_master(responseXMLdata, Sel_id) {
    var xmlReturn = responseXMLdata;
    var elmlist = $(xmlReturn).find("response > NewDataSet > Table");
    var Codegrp = '';

    $("select[name='" + Sel_id + "']")[0].options.length = 0;
    $("select[name='" + Sel_id + "']").append("<option value=''>선택</option>");
    $(elmlist).each(function () {
        $("select[name='" + Sel_id + "']").append("<option value='" + $(this).find("CODE_VALUE").text() + "'>" + $(this).find("CODE_VALUE").text() + "</option>");
    });
}


function getJqGridData(sObjId, sHeaderName) {
    var allRowsInGrid = $('#' + sObjId).jqGrid('getGridParam', 'data');
    var sJqGridData = json2xmlForJqGrid(allRowsInGrid, sHeaderName);
    // alert(sJqGridData);
    return "<" + sObjId + ">" + sJqGridData + "</" + sObjId + ">";
}

function ValidateDate(objStartDate, objEndDate) {
    if ($(objStartDate).val() != "" && $(objEndDate).val() == "") {
        alert("종료일을 입력해주세요.");
        // $(objEndDate).focus();
        return false;
    }

    if ($(objStartDate).val() == "" && $(objEndDate).val() != "") {
        alert("시작일을 입력해주세요.");
        // $(objStartDate).focus();
        return false;
    }

    if ($(objStartDate).val() <= $(objEndDate).val()) {
        return true;
    } else {
        alert("날짜를 잘못 선택하셨습니다. 종료일은 시작일 이후부터 입니다.");
        // $(objStartDate).focus();
        return false;
    }
}
//요일 관련 구분 추가  2010년 5월 17일 
function makeDay() {
    var strRet = "";
    var Today = new Date();

    switch (Today.getDay()) {
        case 0:
            strRet = "일";
            break;
        case 1:
            strRet = "월";
            break;
        case 2:
            strRet = "화";
            break;
        case 3:
            strRet = "수";
            break;
        case 4:
            strRet = "목";
            break;
        case 5:
            strRet = "금";
            break;
        case 6:
            strRet = "토";
            break;

    }
    return strRet + "요일";
}

// 댓글 리스트 가져오기
Get_WF_COMMENT_List = function () {
    var m_oApvList_comment = $.parseXML(document.getElementById("APVLIST").value);
    var pPIID = getInfo('piid') == '' ? getInfo('fiid') : getInfo('piid');
    var pUSER_ID = getInfo("usid");
    var pDEPT_CODE = _DeptCode;
    var pPOS_CODE = getInfo("uslc");
    var pLNG_CODE = _LanguageCode;

    var clas_nm = new Array();
    var clas_nmPush;
    var obj;

    //var pTYPE = $(m_oApvList_comment).find("steps").find("division[divisiontype='send']").length > 0 ? "S" : "R"; //첫번째것만 고려 
    $('#div_table').css('display', 'none');
    $('#div_table_REC').css('display', 'none');
    var pTYPE = getInfo('piid_parent');

    if (pTYPE == '') {
        pTYPE = 'S';
        $('#div_table').css('display', '');
        $('#whichDeptReply').text(Common.GetDic("lbl_apv_Sending_Dept_Reply"));

    } else {
        pTYPE = 'R';
        $('#div_table_REC').css('display', '');
        $('#whichDeptReply').text(Common.GetDic("lbl_apv_Receiving_Dept_Reply"));


    }

    $("#TDMStyle05").val("");


    if (getInfo('readtype') == 'preview' || getInfo('readtype') == 'Pubpreview') {
        $('#CommentTable').css('display', 'none');
    }
    /* 결재선 다른 부서일 경우 덧글 사용 X */
    $(m_oApvList_comment).find('steps').find('division').each(function (i, elm) {
        //division마다 step에 ou name을 session gr_code를 비교하여 같은게있어야 덧글을 사용 할 수 있게 처리 
        //if (($(elm).find('step').find('person').attr('oucode') == Common.GetSession("GR_Code")) && (getInfo("mode") != 'DRAFT')) {   Common.GetSession("GR_Code") 갑자기 GR_code가 변경 되어 getInfo(dpid)로 변경하였음 
        if (($(elm).find('step').find('person').attr('oucode') == getInfo('dpid')) && (getInfo("mode") != 'DRAFT')) {
            if (getInfo('Dept_comment') == 'Y') {
                $('#CommentTable').css('display', '');
                $('#tr_WF_COMMENT').css('display', '');
            }
        }
    });

    //var APVLIST = $.xml2json(formJson.oFormData.apst);
    /* division이 여러개 일때 생각 */
    //var pTYPE = $(m_oApvList_comment).find("steps").find("division[divisiontype='send']");
    //var pFIID = getInfo("fiid"); // piid에서 fiid로 변경 

    var connectionname = "FORM_DEF_ConnectionString";
    if (CFN_GetQueryString("archive") == "TRUE")
        connectionname = "FORM_ARCHIVE_ConnectionString";
    var pXML = "GET_COMMENT_LIST";
    var aXML = "<param><name>PIID</name><type>bigint</type><length>50</length><value><![CDATA[" + pPIID + "]]></value></param>";
    aXML += "<param><name>USER_ID</name><type>varchar</type><length>50</length><value><![CDATA[" + pUSER_ID + "]]></value></param>";
    aXML += "<param><name>DEPT_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pDEPT_CODE + "]]></value></param>";
    aXML += "<param><name>POS_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pPOS_CODE + "]]></value></param>";
    aXML += "<param><name>LNG_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pLNG_CODE + "]]></value></param>";
    aXML += "<param><name>TYPE</name><type>char</type><length>1</length><value><![CDATA[" + pTYPE + "]]></value></param>";
    var sXML = "<Items><connectionname>" + connectionname + "</connectionname><xslpath></xslpath><sql><![CDATA[" + pXML + "]]></sql><type>sp</type>" + aXML + "</Items>";
    var szURL = "/Approval/getXMLQuery.aspx";

    CFN_CallAjax(szURL, sXML, function (data) {
        var xmlReturn = data;
        var errorNode = $(xmlReturn).find("error");
        if (errorNode.length > 0) {
            Common.Error("Desc: " + $(errorNode).text());
        } else {

            for (var i = 0; i <= $(xmlReturn).find('Table').length - 1; i++) {
                obj = new Object();
                obj.COMMENT_ID = $(xmlReturn).find("Table").eq(i).find("COMMENT_ID").text().trim();
                obj.PIID = $(xmlReturn).find("Table").eq(i).find("PIID").text().trim();
                obj.USER_ID = $(xmlReturn).find("Table").eq(i).find("USER_ID").text().trim();
                obj.LNG_USER_NAME = $(xmlReturn).find("Table").eq(i).find("LNG_USER_NAME").text().trim();
                obj.USER_NAME = $(xmlReturn).find("Table").eq(i).find("USER_NAME").text().trim();
                obj.USER_NAME_ENG = $(xmlReturn).find("Table").eq(i).find("USER_NAME_ENG").text().trim();
                obj.DEPT_CODE = $(xmlReturn).find("Table").eq(i).find("DEPT_CODE").text().trim();
                obj.LNG_DEPT_NAME = $(xmlReturn).find("Table").eq(i).find("LNG_DEPT_NAME").text().trim();
                obj.DEPT_NAME = $(xmlReturn).find("Table").eq(i).find("DEPT_NAME").text().trim();
                obj.DEPT_NAME_ENG = $(xmlReturn).find("Table").eq(i).find("DEPT_NAME_ENG").text().trim();
                obj.POS_CODE = $(xmlReturn).find("Table").eq(i).find("POS_CODE").text().trim();
                obj.LNG_POS_NAME = $(xmlReturn).find("Table").eq(i).find("LNG_POS_NAME").text().trim();
                obj.POS_NAME = $(xmlReturn).find("Table").eq(i).find("POS_NAME").text().trim();
                obj.POS_NAME_ENG = $(xmlReturn).find("Table").eq(i).find("POS_NAME_ENG").text().trim();
                obj.LNG_CODE = $(xmlReturn).find("Table").eq(i).find("LNG_CODE").text().trim();
                obj.TYPE = $(xmlReturn).find("Table").eq(i).find("TYPE").text().trim();
                obj.INSERT_DATE = $(xmlReturn).find("Table").eq(i).find("INSERT_DATE").text().trim();
                obj.UPDATE_DATE = $(xmlReturn).find("Table").eq(i).find("UPDATE_DATE").text().trim();
                obj.COMMENT = $(xmlReturn).find("Table").eq(i).find("COMMENT").text().trim();
                clas_nm.push(obj);
            }
            if ($(xmlReturn).find('Table').length == 0) {
                if (getInfo('piid_parent') == '') { //발신
                    $("#div_table").html('');
                } else {//수신
                    $("#div_table_REC").html('');
                }
            }

            var Json_clas_nm = JSON.stringify(clas_nm);
            var _Json_clas_nm = $.parseJSON(Json_clas_nm);
            renderCommentList(_Json_clas_nm);
        }
    }, true, "xml");
    ////발신팀원 div_table
    ////수신팀원 div_table_REC 테이블에 그린다. 

    //var table = "";
    //var tstart = "";
    //var tend = ""
    //var tcontent = "";

    //var table_REC = "";
    //var table_REC = "";
    //var tstart_REC = "";
    //var tend_REC = ""
    //var tcontent_REC = "";
    //if (getInfo('mode') == 'TEMPSAVE') { //임시함 에서 댓글
    //    $.each(_Json_clas_nm, function (i, item) {
    //        $('#TDMStyle05').val(_Json_clas_nm[0].COMMENT);

    //    });
    //} else {
    //    $.each(_Json_clas_nm, function (i, item) {

    //        if (_Json_clas_nm[i].TYPE == 'S') { //부서제외 발신부서일때
    //            tstart = "<table class='table_10' id='table' style='margin-top:20px;'><thead><tr><th>" + Common.GetDic("lbl_apv_Sending_Dept_Reply") + "</th></tr></thead><tbody>"; //발신 팀원 댓글
    //            tend = "</tbody></table>"
    //            tcontent += "<tr id='" + _Json_clas_nm[i].COMMENT_ID + "'>";
    //            tcontent += "<td style='text-align:left;padding:0px;'><div class='form__textbox' style='overflow:hidden'>";

    //            // tcontent += "<dl>";
    //            tcontent += "<dt style='height: 24px; overflow:hidden;padding-top: 5px;'>";
    //            tcontent += "<div style='float:left;margin-top:0px'> [" + CFN_TransLocalTime(_Json_clas_nm[i].UPDATE_DATE) + " " + XFN_GetDicDatas(_Json_clas_nm[i].USER_NAME) + " " + XFN_GetDicDatas(_Json_clas_nm[i].POS_NAME) + " " + XFN_GetDicDatas(_Json_clas_nm[i].DEPT_NAME) + "] </div>" + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"; // 20171204 hpark m/r/dField 날짜포멧 변경(댓글,의견)
    //            if (_UR_Code == _Json_clas_nm[i].USER_ID) {
    //                tcontent += "<div style='float:left;margin-left:30px'id='WF_COMMENT_modifyRow' name='WF_COMMENT_modifyRow'><em class='btn_ws_l' style='margin: 0px; height: auto;'><span class='button--blue'  id='Alter_" + _Json_clas_nm[i].COMMENT_ID + "' onclick=\"WF_COMMENT_modifyRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_update") + "</strong></span></em></div>"; //수정 
    //                tcontent += "<div style='float:left'  id='WF_COMMENT_deleteRow' name='WF_COMMENT_deleteRow'><em class='btn_ws_l' style='margin-left: 7px; float: left;'><span class='button--red' id='Delete_" + _Json_clas_nm[i].COMMENT_ID + "' onclick=\"WF_COMMENT_deleteRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_delete") + "</strong></span></em></div>";//삭제
    //            }
    //            tcontent += "<div style='margin-left:10px;float:left;display:none'  id='WF_COMMENT_saveRow'><em class='btn_ws_l' style='margin: 0px; height: auto;'><span class='button--blue' onclick=\"WF_COMMENT_saveRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_tempsave") + "</strong></span></em></div>";//저장
    //            tcontent += "<div style='float:left;display:none'  id='WF_COMMENT_cancelRow'><em class='btn_ws_l' style='margin-left: 7px; float: left;'><span class='button--blue' onclick=\"WF_COMMENT_cancelRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_modify_cancel") + "</strong></span></em></div>";//편집 취소
    //            tcontent += "</dt>";
    //            var commentContents = fn_replaceXLCharacter(_Json_clas_nm[i].COMMENT);  // 20171101 hpark XSS 관련 수정
    //            tcontent += "<dd style='margin-left:0px;float:left;padding-bottom: 5px;width: 100%;'><div id='commentRowDiv" + _Json_clas_nm[i].COMMENT_ID + "' rows='1' class='shin_area05' style='word-wrap:break-word;' disabled >" + commentContents.replace(/\n/g, '<br />') + "</div></dd>";
    //            //tcontent += "</dl>";
    //            tcontent += "<db><textarea id='commentRowText" + _Json_clas_nm[i].COMMENT_ID + "' rows='5' class='shin_area05' style='display:none' >" + commentContents + "</textarea></db></div>";
    //            tcontent += "</th>";
    //            tcontent += "</tr>";
    //            table = tstart + tcontent + tend;
    //            $("#div_table").html(table);
    //        } else if (_Json_clas_nm[i].DEPT_CODE == _DeptCode && _Json_clas_nm[i].TYPE == 'R') {
    //            tstart_REC = "<table class='table_10' id='table' style='margin-top:20px;'><thead><tr><th>" + Common.GetDic("lbl_apv_Receiving_Dept_Reply") + "</th></tr></thead><tbody>"; //발신 팀원 댓글
    //            tend_REC = "</tbody></table>"
    //            tcontent_REC += "<tr id='" + _Json_clas_nm[i].COMMENT_ID + "'>";
    //            tcontent_REC += "<td style='text-align:left;padding:0px;'><div class='form__textbox' >";

    //            //tcontent_REC += "<dl>";
    //            tcontent_REC += "<dt style='height: 24px; overflow:hidden;padding-top: 5px;'>";
    //            tcontent_REC += "<div style='float:left;margin-top:0px;font-weight:700;'> [" + CFN_TransLocalTime(_Json_clas_nm[i].UPDATE_DATE) + " " + XFN_GetDicDatas(_Json_clas_nm[i].USER_NAME) + " " + XFN_GetDicDatas(_Json_clas_nm[i].POS_NAME) + " " + XFN_GetDicDatas(_Json_clas_nm[i].DEPT_NAME) + "] </div>" + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"; // 20171204 hpark m/r/dField 날짜포멧 변경(댓글,의견)
    //            if (_UR_Code == _Json_clas_nm[i].USER_ID) {
    //                tcontent_REC += "<div style='float:left;margin-left:30px'id='WF_COMMENT_modifyRow' name='WF_COMMENT_modifyRow'><em class='btn_ws_l'  style='margin: 0px; height: auto;'><span class='button--blue'  id='Alter_" + _Json_clas_nm[i].COMMENT_ID + "' onclick=\"WF_COMMENT_modifyRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_update") + "</strong></span></em></div>"; //수정 
    //                tcontent_REC += "<div style='float:left'  id='WF_COMMENT_deleteRow' name='WF_COMMENT_deleteRow'><em class='btn_ws_l'  style='margin-left: 7px; float: left;'><span class='button--red' id='Delete_" + _Json_clas_nm[i].COMMENT_ID + "' onclick=\"WF_COMMENT_deleteRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_delete") + "</strong></span></em></div>";//삭제
    //            }
    //            tcontent_REC += "<div style='margin-left:10px;float:left;display:none'  id='WF_COMMENT_saveRow'><em class='btn_ws_l'    style='margin: 0px; height: auto;'     ><span class='button--blue' onclick=\"WF_COMMENT_saveRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_tempsave") + "</strong></span></em></div>";//저장
    //            tcontent_REC += "<div style='float:left;display:none'  id='WF_COMMENT_cancelRow'><em class='btn_ws_l'  style='margin-left: 7px; float: left;' ><span class='button--blue' onclick=\"WF_COMMENT_cancelRow('" + _Json_clas_nm[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_modify_cancel") + "</strong></span></em></div>";//편집 취소
    //            tcontent_REC += "</dt>";

    //            var commentContents = fn_replaceXLCharacter(_Json_clas_nm[i].COMMENT);  // 20171101 hpark XSS 관련 수정
    //            tcontent_REC += "<dd style='margin-left:0px;padding-bottom: 5px;width:100%'><div id='commentRowDiv" + _Json_clas_nm[i].COMMENT_ID + "' rows='1' class='shin_area05' style='word-wrap:break-word;' disabled >" + commentContents.replace(/\n/g, '<br />') + "</div></dd>";
    //            //tcontent_REC += "</dl>";

    //            tcontent_REC += "<db><textarea id='commentRowText" + _Json_clas_nm[i].COMMENT_ID + "' rows='5' class='shin_area05' style='display:none' >" + commentContents + "</textarea></db></div>";
    //            tcontent_REC += "</th>";
    //            tcontent_REC += "</tr>";
    //            table_REC = tstart_REC + tcontent_REC + tend_REC;
    //            $("#div_table_REC").html(table_REC);
    //        }
    //    });
    //}
}

function renderCommentList(objData) {
    //발신팀원 div_table
    //수신팀원 div_table_REC 테이블에 그린다. 

    var table = "";
    var tstart = "";
    var tend = ""
    var tcontent = "";

    var table_REC = "";
    var table_REC = "";
    var tstart_REC = "";
    var tend_REC = ""
    var tcontent_REC = "";
    if (getInfo('mode') == 'TEMPSAVE') { //임시함 에서 댓글
        $.each(objData, function (i, item) {
            $('#TDMStyle05').val(objData[0].COMMENT);

        });
    } else {
        $.each(objData, function (i, item) {

            if (objData[i].TYPE == 'S') { //부서제외 발신부서일때
                tstart = "<table class='table_10' id='table' style='margin-top:20px;'><thead><tr><th>" + Common.GetDic("lbl_apv_Sending_Dept_Reply") + "</th></tr></thead><tbody>"; //발신 팀원 댓글
                tend = "</tbody></table>"
                tcontent += "<tr id='" + objData[i].COMMENT_ID + "'>";
                tcontent += "<td style='text-align:left;padding:0px;'><div class='form__textbox' style='overflow:hidden'>";

                // tcontent += "<dl>";
                tcontent += "<dt style='height: 24px; overflow:hidden;padding-top: 5px;'>";
                tcontent += "<div style='float:left;margin-top:0px'> [" + CFN_TransLocalTime(objData[i].UPDATE_DATE) + " " + XFN_GetDicDatas(objData[i].USER_NAME) + " " + XFN_GetDicDatas(objData[i].POS_NAME) + " " + XFN_GetDicDatas(objData[i].DEPT_NAME) + "] </div>" + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"; // 20171204 hpark m/r/dField 날짜포멧 변경(댓글,의견)
                if (_UR_Code == objData[i].USER_ID) {
                    tcontent += "<div style='float:left;margin-left:30px'id='WF_COMMENT_modifyRow' name='WF_COMMENT_modifyRow'><em class='btn_ws_l' style='margin: 0px; height: auto;'><span class='button--blue'  id='Alter_" + objData[i].COMMENT_ID + "' onclick=\"WF_COMMENT_modifyRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_update") + "</strong></span></em></div>"; //수정 
                    tcontent += "<div style='float:left'  id='WF_COMMENT_deleteRow' name='WF_COMMENT_deleteRow'><em class='btn_ws_l' style='margin-left: 7px; float: left;'><span class='button--red' id='Delete_" + objData[i].COMMENT_ID + "' onclick=\"WF_COMMENT_deleteRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_delete") + "</strong></span></em></div>";//삭제
                }
                tcontent += "<div style='margin-left:10px;float:left;display:none'  id='WF_COMMENT_saveRow'><em class='btn_ws_l' style='margin: 0px; height: auto;'><span class='button--blue' onclick=\"WF_COMMENT_saveRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_tempsave") + "</strong></span></em></div>";//저장
                tcontent += "<div style='float:left;display:none'  id='WF_COMMENT_cancelRow'><em class='btn_ws_l' style='margin-left: 7px; float: left;'><span class='button--blue' onclick=\"WF_COMMENT_cancelRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_modify_cancel") + "</strong></span></em></div>";//편집 취소
                tcontent += "</dt>";
                var commentContents = fn_replaceXLCharacter(objData[i].COMMENT);  // 20171101 hpark XSS 관련 수정
                tcontent += "<dd style='margin-left:0px;float:left;padding-bottom: 5px;width: 100%;'><div id='commentRowDiv" + objData[i].COMMENT_ID + "' rows='1' class='shin_area05' style='word-wrap:break-word;' disabled >" + commentContents.replace(/\n/g, '<br />') + "</div></dd>";
                //tcontent += "</dl>";
                tcontent += "<db><textarea id='commentRowText" + objData[i].COMMENT_ID + "' rows='5' class='shin_area05' style='display:none' >" + commentContents + "</textarea></db></div>";
                tcontent += "</th>";
                tcontent += "</tr>";
                table = tstart + tcontent + tend;
                $("#div_table").html(table);
            } else if (objData[i].DEPT_CODE == _DeptCode && objData[i].TYPE == 'R') {
                tstart_REC = "<table class='table_10' id='table' style='margin-top:20px;'><thead><tr><th>" + Common.GetDic("lbl_apv_Receiving_Dept_Reply") + "</th></tr></thead><tbody>"; //발신 팀원 댓글
                tend_REC = "</tbody></table>"
                tcontent_REC += "<tr id='" + objData[i].COMMENT_ID + "'>";
                tcontent_REC += "<td style='text-align:left;padding:0px;'><div class='form__textbox' >";

                //tcontent_REC += "<dl>";
                tcontent_REC += "<dt style='height: 24px; overflow:hidden;padding-top: 5px;'>";
                tcontent_REC += "<div style='float:left;margin-top:0px;font-weight:700;'> [" + CFN_TransLocalTime(objData[i].UPDATE_DATE) + " " + XFN_GetDicDatas(objData[i].USER_NAME) + " " + XFN_GetDicDatas(objData[i].POS_NAME) + " " + XFN_GetDicDatas(objData[i].DEPT_NAME) + "] </div>" + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"; // 20171204 hpark m/r/dField 날짜포멧 변경(댓글,의견)
                if (_UR_Code == objData[i].USER_ID) {
                    tcontent_REC += "<div style='float:left;margin-left:30px'id='WF_COMMENT_modifyRow' name='WF_COMMENT_modifyRow'><em class='btn_ws_l'  style='margin: 0px; height: auto;'><span class='button--blue'  id='Alter_" + objData[i].COMMENT_ID + "' onclick=\"WF_COMMENT_modifyRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_update") + "</strong></span></em></div>"; //수정 
                    tcontent_REC += "<div style='float:left'  id='WF_COMMENT_deleteRow' name='WF_COMMENT_deleteRow'><em class='btn_ws_l'  style='margin-left: 7px; float: left;'><span class='button--red' id='Delete_" + objData[i].COMMENT_ID + "' onclick=\"WF_COMMENT_deleteRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_delete") + "</strong></span></em></div>";//삭제
                }
                tcontent_REC += "<div style='margin-left:10px;float:left;display:none'  id='WF_COMMENT_saveRow'><em class='btn_ws_l'    style='margin: 0px; height: auto;'     ><span class='button--blue' onclick=\"WF_COMMENT_saveRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_tempsave") + "</strong></span></em></div>";//저장
                tcontent_REC += "<div style='float:left;display:none'  id='WF_COMMENT_cancelRow'><em class='btn_ws_l'  style='margin-left: 7px; float: left;' ><span class='button--blue' onclick=\"WF_COMMENT_cancelRow('" + objData[i].COMMENT_ID + "');\"><strong class='txt_btn_ws'>" + Common.GetDic("btn_apv_modify_cancel") + "</strong></span></em></div>";//편집 취소
                tcontent_REC += "</dt>";

                var commentContents = fn_replaceXLCharacter(objData[i].COMMENT);  // 20171101 hpark XSS 관련 수정
                tcontent_REC += "<dd style='margin-left:0px;padding-bottom: 5px;width:100%'><div id='commentRowDiv" + objData[i].COMMENT_ID + "' rows='1' class='shin_area05' style='word-wrap:break-word;' disabled >" + commentContents.replace(/\n/g, '<br />') + "</div></dd>";
                //tcontent_REC += "</dl>";

                tcontent_REC += "<db><textarea id='commentRowText" + objData[i].COMMENT_ID + "' rows='5' class='shin_area05' style='display:none' >" + commentContents + "</textarea></db></div>";
                tcontent_REC += "</th>";
                tcontent_REC += "</tr>";
                table_REC = tstart_REC + tcontent_REC + tend_REC;
                $("#div_table_REC").html(table_REC);
            }
        });
    }
}
function convertUTCDateToLocalDate(date1) {
    function p(s) { return (s < 10) ? '0' + s : s; }

    var newDate = new Date();
    var ary = date1.split(" ");
    var ary2 = ary[0].split("-");
    var ary1 = ary[1].split(":");

    newDate.setUTCHours(parseInt(ary1[0]));
    newDate.setUTCMinutes(ary1[1]);
    newDate.setUTCSeconds(ary1[2]);
    newDate.setUTCFullYear(ary2[0]);
    newDate.setUTCMonth(ary2[1]);
    newDate.setUTCDate(ary2[2]);

    return newDate.getFullYear() + "-" + p(newDate.getMonth()) + "-" + p(newDate.getDate()) + " " + p(newDate.getHours()) + ":" + p(newDate.getMinutes()) + ":" + p(newDate.getSeconds());
}

// 댓글 저장
Save_WF_COMMENT = function (CUD, varCOMMENT_ID, varCOMMENT) {

    var APVLIST = $.xml2json(formJson.oFormData.apst);

    /*저장할때 다국어로 저장 되어야하는데*/
    var pCUD = CUD;
    var pPIID = getInfo("piid");
    var pUSER_ID = getInfo("usid");
    var pUSER_NAME = getInfo("usdn");
    var pUSER_NAME_ENG = getInfo("usdn").split(';')[2];
    var pDEPT_CODE = _DeptCode;
    var pDEPT_NAME = getInfo("dpdn");
    var pDEPT_NAME_ENG = getInfo("dpdn").split(';')[2];
    var pPOS_CODE = getInfo("uspc");
    var pPOS_NAME = getInfo("uspn");
    var pPOS_NAME_ENG = getInfo("uspn").split(';')[1];
    var pLNG_CODE = _LanguageCode;

    //var pTYPE = APVLIST.division.divisiontype == "send" ? "S" : "R";
    //var pTYPE = $(m_oApvList_comment).find("steps").find("division[divisiontype='send']");
    //발신부서에서 저장 할때는 Send 인데 수신부서에서 저장할때는 Receive임 

    var m_oApvList_comment = $.parseXML(document.getElementById("APVLIST").value);


    /* 발신 부서 측은 파라미터에 processInstanceId에 있으며,
       수신 부서 측은 파라미터에 parentprocessInstanceId가 존재 한다.*/
    var pTYPE = getInfo('piid_parent');

    if (pTYPE == '') {
        pTYPE = 'S';
    } else {
        pTYPE = 'R';
    }
    //var pTYPE = $(m_oApvList_comment).find("steps").find("division[divisiontype='send']").length > 0 ? "S" : "R"; //첫번째것만 고려 수정해야함

    var pCOMMENT = varCOMMENT_ID == "" ? $("#TDMStyle05").val() : varCOMMENT;
    var pCOMMENT_ID = varCOMMENT_ID == "" ? 0 : varCOMMENT_ID;

    pCOMMENT = setLineFeedDel(pCOMMENT);

    pUSER_NAME_ENG = pUSER_NAME_ENG == undefined ? "" : pUSER_NAME_ENG;
    pDEPT_NAME_ENG = pDEPT_NAME_ENG == undefined ? "" : pDEPT_NAME_ENG;
    pPOS_NAME_ENG = pPOS_NAME_ENG == undefined ? "" : pPOS_NAME_ENG;

    if (CUD == "C" || CUD == "U") {
        if (pCOMMENT.trim().length == 0) {
            alert(Common.GetDic("lbl_apv_plz_comment"));  //팀원 댓글 : 내용을 입력하시기 바랍니다. 
            return;
        }
    }

    var clas_nm = new Array();
    var clas_nmPush;
    var obj;
    var connectionname = "FORM_DEF_ConnectionString";
    var pXML = "CUD_COMMENT";
    var aXML = "<param><name>CUD</name><type>nvarchar</type><length>100</length><value><![CDATA[" + pCUD + "]]></value></param>";
    aXML += "<param><name>PIID</name><type>bigint</type><length>50</length><value><![CDATA[" + pPIID + "]]></value></param>";
    aXML += "<param><name>USER_ID</name><type>varchar</type><length>50</length><value><![CDATA[" + pUSER_ID + "]]></value></param>";
    aXML += "<param><name>USER_NAME</name><type>nvarchar</type><length>512</length><value><![CDATA[" + pUSER_NAME + "]]></value></param>";
    aXML += "<param><name>USER_NAME_ENG</name><type>nvarchar</type><length>512</length><value><![CDATA[" + pUSER_NAME_ENG + "]]></value></param>";
    aXML += "<param><name>DEPT_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pDEPT_CODE + "]]></value></param>";
    aXML += "<param><name>DEPT_NAME</name><type>nvarchar</type><length>512</length><value><![CDATA[" + pDEPT_NAME + "]]></value></param>";
    aXML += "<param><name>DEPT_NAME_ENG</name><type>nvarchar</type><length>512</length><value><![CDATA[" + pDEPT_NAME_ENG + "]]></value></param>";
    aXML += "<param><name>POS_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pPOS_CODE + "]]></value></param>";
    aXML += "<param><name>POS_NAME</name><type>nvarchar</type><length>512</length><value><![CDATA[" + pPOS_NAME + "]]></value></param>";
    aXML += "<param><name>POS_NAME_ENG</name><type>nvarchar</type><length>512</length><value><![CDATA[" + pPOS_NAME_ENG + "]]></value></param>";
    aXML += "<param><name>LNG_CODE</name><type>varchar</type><length>50</length><value><![CDATA[" + pLNG_CODE + "]]></value></param>";
    aXML += "<param><name>TYPE</name><type>char</type><length>1</length><value><![CDATA[" + pTYPE + "]]></value></param>";
    aXML += "<param><name>COMMENT</name><type>ntext</type><length>2000</length><value><![CDATA[" + pCOMMENT + "]]></value></param>";
    aXML += "<param><name>COMMENT_ID</name><type>decimal</type><length>18</length><value><![CDATA[" + pCOMMENT_ID + "]]></value></param>";
    var sXML = "<Items><connectionname>" + connectionname + "</connectionname><xslpath></xslpath><sql><![CDATA[" + pXML + "]]></sql><type>sp</type>" + aXML + "</Items>";
    var szURL = "../GetXMLQuery.aspx";

    CFN_CallAjax(szURL, sXML, function (data) {
        var xmlReturn = data;
        var errorNode = $(xmlReturn).find("error");
        if (errorNode.length > 0) {
            Common.Error("Desc: " + $(errorNode).text());
        } else {
            Get_WF_COMMENT_List();

            //알림 저장 
            var approvalOrder = '';
            var m_oApvList_comment = $.parseXML(document.getElementById("APVLIST").value);
            var elmRoot_Con = $(m_oApvList_comment).find("steps > division");

            $(elmRoot_Con).find("step").each(function (div, elmdiv) {
                /*의견추가 버튼표시*/
                if ($(elmdiv).find('ou > person').attr('code') == Common.GetSession("UR_Code")) {
                    approvalOrder = $(elmdiv).attr('approvalorder');
                }
            });
            var pTYPESAVE = getInfo('piid_parent');
            if (pTYPESAVE == '') {
                pTYPESAVE = 'SENDREPLY';
            } else {
                pTYPESAVE = 'RECEIVEREPLY';
            }
            //var m_oApvList_comment = $.parseXML(document.getElementById("APVLIST").value);
            //var szURL = "/Approval/Controls/ApprovalService.asmx/InsertApprovalHistory";
            //var Param = String.format("{ strProcessInstanceId:'{0}',strParentProcessInstanceId:'{1}',strApprovalOrder:'{2}',sSender:'{3}',sFORM_PREFIX:'{4}',strSubject:'{5}',strFORM_INST_ID:'{6}',sType:'{7} }", getInfo("piid"), getInfo("piid_parent"), approvalOrder, getInfo("INITIATOR_ID"), getInfo("fmpf"), getInfo("SUBJECT"), getInfo("fiid"), pTYPESAVE);
            //var oResult = CFN_CallAjaxJson(szURL, Param, false, null);
            //oResult = $.parseJSON(oResult);
            //var xmlReturn = $.parseXML(oResult.d);
            //var errorNode = $(xmlReturn).find("response > error");
            //if (errorNode.length > 0) {
            //    Common.Error("Desc: " + errorNode.text());
            //    return false;
            //}
            //else {
            //}
        }
    }, false, "xml");

}

function WF_COMMENT_modifyRow(pCOMMENT_ID) { //수정버튼
    $('#' + pCOMMENT_ID).find('td > div > db > textarea').css('display', '');
    $('#' + pCOMMENT_ID).find('td > div > dd > div').css('display', 'none');
    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_modifyRow']").css('display', 'none');//수정버튼
    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_deleteRow']").css('display', 'none');//삭제버튼
    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_saveRow']").css('display', '');//저장버튼
    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_cancelRow']").css('display', '');//편집취소버튼
}
function WF_COMMENT_cancelRow(pCOMMENT_ID) { //편집취소
    //$('#' + pCOMMENT_ID).find('th > dd > textarea').prop("disabled", "");

    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_modifyRow']").css('display', '');//수정버튼
    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_deleteRow']").css('display', '');//삭제버튼
    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_saveRow']").css('display', 'none');//저장버튼
    $('#' + pCOMMENT_ID).find("td > div > dt > div[id='WF_COMMENT_cancelRow']").css('display', 'none');//편집취소버튼
    Get_WF_COMMENT_List();
}

function WF_COMMENT_saveRow(pCOMMENT_ID) { //저장버튼
    Save_WF_COMMENT("U", pCOMMENT_ID, $("#" + pCOMMENT_ID).find("textarea").val());
}

function WF_COMMENT_deleteRow(pCOMMENT_ID) { //삭제 
    Common.Confirm(Common.GetDic("msg_Common_43"), 'Confirmation Dialog', function (result) {  //삭제하시겠습니까 ?
        if (result) {
            Save_WF_COMMENT("D", pCOMMENT_ID, "");
            Get_WF_COMMENT_List();
        }
    });
}


//의견 여부 체크 및 링크
function apvConsult_popUp() {
    var sUrl = "/Approval/Comment/comment_view.aspx?form_inst_id=" + getInfo("fiid");

}
//검토의견
function btComment_exa() {
    //commentType 검토의견일 경우 Commentexa
    var t_sUrl = "/Approval/Comment/comment_view.aspx?piid=" + getInfo("piid") + "&form_inst_id=" + getInfo("fiid") + "&commentType=Commentexa";
    if (g_IS_TabUI == "Y") { t_sUrl = t_sUrl + "&IS_Tab=Y"; }
    var openID = getInfo('fmid');
    var t_Height = 290;
    var t_Width = 530;
    //20120131 by ssuby, 의견창위치 화면 중앙으로 맞추기
    var nLeft = (screen.width - t_Width) / 2;
    var nTop = (screen.height - t_Height) / 2;
    var sWidth = t_Width.toString() + "px";
    var sHeight = t_Height.toString() + "px";

    // 20171127 hpark 결재의견 명칭정리
    //parent.Common.ShowDialog("btCommentView", "DivPop_" + openID, Common.GetDic("lbl_apv_comment_view"), t_sUrl, sWidth, sHeight, "iframe-ifNoScroll");    //  의견보기
    parent.Common.ShowDialog("btCommentView", "DivPop_" + openID, Common.GetDic("COMMENT_TYPE_EXAMINATION"), t_sUrl, sWidth, sHeight, "iframe-ifNoScroll");    //  의견보기

}
//별도보고
function btCommentSpecial() {
    var t_sUrl = "/Approval/Comment/comment_view.aspx?piid=" + getInfo("piid") + "&form_inst_id=" + getInfo("fiid") + "&commentType=CommentSpecial";
    if (g_IS_TabUI == "Y") { t_sUrl = t_sUrl + "&IS_Tab=Y"; }
    var openID = getInfo('fmid');
    var t_Height = 290;
    var t_Width = 530;
    //20120131 by ssuby, 의견창위치 화면 중앙으로 맞추기
    var nLeft = (screen.width - t_Width) / 2;
    var nTop = (screen.height - t_Height) / 2;
    var sWidth = t_Width.toString() + "px";
    var sHeight = t_Height.toString() + "px";
    //if ($("#" + openID + "_if", parent.document).length > 0) {
    parent.Common.ShowDialog("btCommentView", "DivPop_" + openID, Common.GetDic("lbl_apv_Special_Report"), t_sUrl, sWidth, sHeight, "iframe-ifNoScroll");    //  의견보기
    //} else { //바닥 popup
    //    var iHeight = 400; var iWidth = 600;
    //    CFN_OpenWindow(t_sUrl, "", iWidth, iHeight, "fix");
    //}
    //parent.CFN_OpenWindow(t_sUrl, "FormTemplate", t_Width, t_Height, "fix");
}
//지시의견, 협조전
function btCommentOpinion() {
    var t_sUrl = "/Approval/Comment/comment_view.aspx?piid=" + getInfo("piid") + "&form_inst_id=" + getInfo("fiid") + "&commentType=CommentOpinion";
    if (g_IS_TabUI == "Y") { t_sUrl = t_sUrl + "&IS_Tab=Y"; }
    var openID = getInfo('fmid');
    var t_Height = 290;
    var t_Width = 530;
    //20120131 by ssuby, 의견창위치 화면 중앙으로 맞추기
    var nLeft = (screen.width - t_Width) / 2;
    var nTop = (screen.height - t_Height) / 2;
    var sWidth = t_Width.toString() + "px";
    var sHeight = t_Height.toString() + "px";

    // 20171127 hpark 결재의견 명칭정리
    //parent.Common.ShowDialog("btCommentView", "DivPop_" + openID, Common.GetDic("lbl_apv_comment_view"), t_sUrl, sWidth, sHeight, "iframe-ifNoScroll");    //  의견보기
    if (getInfo("pdef") == "REQST_CRRF_PATTERN") {
        parent.Common.ShowDialog("btCommentView", "DivPop_" + openID, Common.GetDic("lbl_apv_comment_view_rec"), t_sUrl, sWidth, sHeight, "iframe-ifNoScroll");    //  의견보기
    }
    else {
        parent.Common.ShowDialog("btCommentView", "DivPop_" + openID, Common.GetDic("COMMENT_TYPE_OPINION"), t_sUrl, sWidth, sHeight, "iframe-ifNoScroll");    //  의견보기
    }

    //parent.CFN_OpenWindow(t_sUrl, "FormTemplate", t_Width, t_Height, "fix");
}
// 보존년한 바인딩
function GetSaveTerm() {
    var l_DocSaveDuration = getInfo('SaveDurationFormText');
    var arrl_DocSaveDuration = l_DocSaveDuration.split(/;/g);
    //var item = Common.GetBaseCode("SaveDuration").CacheData;
    var initEntCode = (getInfo("ENT_CODE")) ? getInfo("ENT_CODE") : getInfo("etid");
    if (getInfo("reuse") == "C") initEntCode = getInfo("etid");
    //var item = Common.GetDomainBaseCode("SaveDuration", initEntCode).CacheData;
    var item = _BaseCodeApv.SaveDuration;

    if (document.getElementById("SAVETERM") != null && document.getElementById("SAVETERM").tagName != "INPUT") {
        $.each(item, function (i, obj) {
            for (var i = 0; i < arrl_DocSaveDuration.length; i++) {
                if (arrl_DocSaveDuration[i] == this.Code) {
                    if (wStrSearchDicInfo[this.CodeGroup + "_" + this.Code] == null)
                        makeCBOobject(this.Code, Common.GetDic(this.CodeGroup + "_" + this.Code), document.getElementById("SAVETERM"));
                    else
                        makeCBOobject(this.Code, wStrSearchDicInfo[this.CodeGroup + "_" + this.Code], document.getElementById("SAVETERM"));
                }
            }
        });
    }
    // if (document.getElementById("SAVETERM") != null && document.getElementById("SAVETERM").options.length > 0) {
    //   debugger;
    if (document.getElementById("SAVETERM") != null) {
        if ((document.getElementById("SAVETERM").tagName != "INPUT" && document.getElementById("SAVETERM").tagName != "SPAN") && document.getElementById("SAVETERM").options.length > 0) {
            if (getInfo("SaveDurationDefault") != "" && getInfo("SaveDurationDefault") != undefined) {
                if (getInfo("mode") == "DRAFT") {
                    document.getElementById("SAVE_TERM").value = getInfo("SaveDurationDefault");
                    document.getElementById("SAVETERM").value = getInfo("SaveDurationDefault");
                }
            }
            else {
                document.getElementById("SAVE_TERM").value = document.getElementById("SAVETERM").options[0].value;
                document.getElementById("SAVETERM").value = document.getElementById("SAVETERM").options[0].value;
            }
        }
        else {
            if (document.getElementById("SAVETERM").tagName == "INPUT") {
                document.getElementById("SAVE_TERM").value = getInfo("SaveDurationDefault");
                document.getElementById("SAVETERM").value = getInfo("SaveDurationDefault");
            }
            else if (document.getElementById("SAVETERM").tagName == "SPAN") {
                document.getElementById("SAVE_TERM").innerText = getInfo("SaveDurationDefault");
                document.getElementById("SAVETERM").innerText = getInfo("SaveDurationDefault");
            }
        }
    }
}

//보안등급 바인딩
function GetDocLevel() {
    var l_DocSecurityGrade = getInfo('SecurityLevelFormText');
    // 양식별 보안등급
    if (l_DocSecurityGrade != "") {
        l_DocSecurityGrade = ";" + l_DocSecurityGrade + ";";
    } else {
        l_DocSecurityGrade = "";
    }
    //var item = Common.GetBaseCode("DocSecurityGrade").CacheData;
    var initEntCode = (getInfo("ENT_CODE")) ? getInfo("ENT_CODE") : getInfo("etid");
    if (getInfo("reuse") == "C") initEntCode = getInfo("etid");
    //var item = Common.GetDomainBaseCode("DocSecurityGrade", initEntCode).CacheData;
    var item = _BaseCodeApv.DocSecurityGrade;
    if (document.getElementById("DOCLEVEL") != null && document.getElementById("DOCLEVEL").tagName != "INPUT") {
        $.each(item, function (i) {
            if (l_DocSecurityGrade.indexOf(";" + this.Code + ";") > -1 || l_DocSecurityGrade == "") {
                if (wStrSearchDicInfo[this.CodeGroup + "_" + this.Code] == null)
                    makeCBOobject(this.Code, Common.GetDic(this.CodeGroup + "_" + this.Code), document.getElementById("DOCLEVEL"));
                else
                    makeCBOobject(this.Code, wStrSearchDicInfo[this.CodeGroup + "_" + this.Code], document.getElementById("DOCLEVEL"));
                //if (i == 0) {
                //    document.getElementById("DOC_LEVEL").value = this.Code;
                //}
            }
        });
    }
    if (document.getElementById("DOCLEVEL") != null) {
        if ((document.getElementById("DOCLEVEL").tagName != "INPUT" && document.getElementById("DOCLEVEL").tagName != "SPAN") && document.getElementById("DOCLEVEL").options.length > 0) {
            if (getInfo("SecurityLevelDefault") != "" && getInfo("SecurityLevelDefault") != undefined) {
                if (getInfo("mode") == "DRAFT") {
                    document.getElementById("DOC_LEVEL").value = getInfo("SecurityLevelDefault");
                    document.getElementById("DOCLEVEL").value = getInfo("SecurityLevelDefault");
                }
            }
            else {
                document.getElementById("DOC_LEVEL").value = document.getElementById("DOCLEVEL").options[0].value;
                document.getElementById("DOCLEVEL").value = document.getElementById("DOCLEVEL").options[0].value;
            }
        }
        else {
            if (document.getElementById("DOC_LEVEL").tagName == "INPUT") {
                document.getElementById("DOC_LEVEL").value = getInfo("SecurityLevelDefault");
                document.getElementById("DOCLEVEL").value = getInfo("SecurityLevelDefault");
            }
            else if (document.getElementById("DOC_LEVEL").tagName == "SPAN") {
                document.getElementById("DOC_LEVEL").innerText = getInfo("SecurityLevelDefault");
                document.getElementById("DOCLEVEL").innerText = getInfo("SecurityLevelDefault");
            }

        }
    }
}

//문서구분 바인딩
// GetDocGuBun("DocSecurityGrade");
//function GetDocGuBun(_codeGroup) {
//    var item = _BaseCodeApv.Doc_GuBnu_Form;
//    for (var i = 0; i < item.length; i++) {
//        //makeCBOobject(item[i].Code, item[i].CodeName, document.getElementById("DOC_DIVISION"));
//        if (wStrSearchDicInfo[item[i].CodeGroup + "_" + item[i].Code] == null)
//            makeCBOobject(item[i].Code, Common.GetDic(item[i].CodeGroup + "_" + item[i].Code), document.getElementById("DOC_DIVISION"));
//        else
//            makeCBOobject(item[i].Code, wStrSearchDicInfo[item[i].CodeGroup + "_" + item[i].Code], document.getElementById("DOC_DIVISION"));
//    }
//}
function GetDocGuBun(_codeGroup) {
    var item;
    if (_codeGroup == "Doc_GuBnu_Form")
        item = _BaseCodeApv.Doc_GuBnu_Form;
    else
        item = Common.GetBaseCode(_codeGroup).CacheData;

    for (var i = 0; i < item.length; i++) {
        if (wStrSearchDicInfo[_codeGroup + "_" + item[i].Code] == null)
            makeCBOobject(item[i].Code, Common.GetDic(_codeGroup + "_" + item[i].Code), document.getElementById("DOC_DIVISION"));
        else
            makeCBOobject(item[i].Code, wStrSearchDicInfo[_codeGroup + "_" + item[i].Code], document.getElementById("DOC_DIVISION"));
    }
}


//협조처 BOX내 협조처 접수 확인 팝업 오픈, 2017.05.19. 양유빈
function OpenCooperationView_PopUp() {
    var pdef = getInfo("pdef");
    var process_instance_id = getInfo("PROCESS_INSTANCE_ID");
    var piid_parent = getInfo("piid_parent");
    var approvalOrder = getInfo("approvalOrder");
    var Subject = escape(getInfo("SUBJECT"));
    //의견처리
    var defaultCommentAll = getInfo("DefaultCommentAll");
    var defaultComment = getInfo("DefaultComment");
    var defaultOpinion = getInfo("DefaultOpinion");
    var defaultExamination = getInfo("DefaultExamination");
    var defaultCtrlComment = getInfo("DefaultCtrlComment");

    var strURL = String.format("/Approval/Forms/Templates/popup/ReceiptStatus_Popup2.aspx?pdef={0}&process_instance_id={1}&Subject={2}&piid_parent={3}&approvalOrder={4}&DefaultCommentAll={5}&DefaultComment={6}&DefaultOpinion={7}&DefaultExamination={8}&DefaultCtrlComment={9}", pdef, process_instance_id, Subject, piid_parent, approvalOrder, defaultCommentAll, defaultComment, defaultOpinion, defaultExamination, defaultCtrlComment);
    if (getInfo("loct") == "ARCHIVE") strURL = String.format("/Approval/Forms/Templates/popup/ReceiptStatus_Popup_Archive.aspx?pdef={0}&process_instance_id={1}&Subject={2}&FORM_INST_ID={3}&type=GENERAL_PATTERN", pdef, process_instance_id, Subject, getInfo("FORM_INST_ID"));
    var Title = Common.GetDic("btn_apv_detailview");
    //통합로그 기록
    XFN_AccessLogWrite("102", LogType.Event, getInfo("piid"), getInfo("fmpf"), getInfo("fmnm"), "협조처 상세조회", "", BizCode.ApprovalForm, AccessTargetType.Page, AccessEventCodeType.Common);
    parent.Common.ShowDialog("ReceiptStatus_Popup", "ReceiptStatus_Popup", Title, strURL, "800px", "560px", "iframe");
    return false;
}

function SetCooperationInfo() {
    var cooperationList = document.getElementById("CONSULT_LIST").value;
    var cCoo = cooperationList.split("|");
    var DeptList = "";
    var cnt_Cooper = 0;
    for (i = 0; i < cCoo.length; i++) {
        if (cCoo[i] != "") {
            //{법인코드}+':'+{['R'ole:'T'eam:'U'ser] 구분}+':'+{팀코드}+':'+{사번}+':'+{팀.실 구분코드-OrgGradeCode}+':'+{발송유무[Y:N]}+':'+{표시명}+ ':'(회사명)"|" 
            if (cCoo[i].split(/:/g).length > 8) {
                var TeamName = (cCoo[i].split(/:/g)[7] != "") ? CFN_GetDicDatas(cCoo[i].split(/:/g)[7]) : "";
                DeptList += (DeptList == "") ? TeamName : ", " + TeamName;
                cnt_Cooper++;
            }
        }
    }
    try {
        if (DeptList != "") {
            $('#divCooperationInfo').css('height', "");
            $("#divCooperationInfo").html(DeptList);
            $("#CooperCount").text("(" + cnt_Cooper.toString() + ")");
            $("#tbCooperationInfo").show();
            if ($("#divCooperationInfo").height() > 48) {
                $("#PlusMinusCooperationInfo").val("+");
                $('#PlusMinusCooperationInfo').css('display', "");
                $("#divCooperationInfo").css("height", "48px");
                $("#divCooperationInfo").css("overflow-y", "hidden");
            } else {
                $("#PlusMinusCooperationInfo").val("");
                $('#PlusMinusCooperationInfo').css('display', "none");
            }
        } else {
            $('#divCooperationInfo').css('height', "");
            $("#divCooperationInfo").html("");
            $("#CooperCount").text("");
            $("#tbCooperationInfo").hide();
        }
    } catch (e) { }

}

function ReceiptStatus_CommentList(strProcessCode, strIanguageCode, strCompanyCode, strDepartmentCode, strUserId, strProcessInstanceId, strKind) {

    var sUrl = "/Approval/ApvProcess/ApvActBasic_CommentList.aspx?type=COMMENTLIST&ProcessCode=" + strProcessCode + "&CompanyCode=" + strCompanyCode + "&DepartmentCode=" + strDepartmentCode + "&UserId=" + strUserId + "&ProcessInstanceId=" + strProcessInstanceId + "&Kind=" + strKind;
    var iWidth = 500;
    var iHeight = 310;
    var sTitle = Common.GetDic("lbl_RejectedReason");
    if (strKind == "OPINION") {
        sTitle = Common.GetDic("lbl_apv_comment_view")
    }
    else if (strKind == "INSTRUCTION_OPINION") {
        sTitle = Common.GetDic("btn_apv_Order_comment")
    }

    Common.ShowDialog("", "divApvActBasic", sTitle, sUrl, iWidth, iHeight, "iframe-ifNoScroll");//의견

}

//2017.07 yu2mi 양식별 첨부 파일 
function fnFormAttachOpen(sObjID) {
    var iHeight = 260;
    var iWidth = 700;
    var bCheck = true;
    var iMaxFileCnt = 0;
    var sUrl = "/Approval/FileAttach/FormAttach.aspx?FormAttachID=" + sObjID;
    sUrl += "&MessageID=" + escape($("#" + sObjID).val());
    if (g_IS_TabUI == "Y") { sUrl = sUrl + "&IS_Tab=Y"; }
    if ($("#hidlimitFileCnt_" + sObjID).length > 0) {
        if ($("#hidOldFile_" + sObjID).length > 0) {
            var iOldFileCnt = $("#hidOldFile_" + sObjID).val().split("|").length - 1;
            var iNewFileCnt = $("#hidFileSize_" + sObjID).val().split("|").length - 1;
            var iLimitFileCnt = parseInt($("#hidlimitFileCnt_" + sObjID).val());
            iMaxFileCnt = iLimitFileCnt;
            if (iLimitFileCnt - iNewFileCnt - iOldFileCnt <= 0)
                bCheck = false;
        }
    }
    //if (bCheck)
    //    parent.Common.ShowDialog("btapproved", "DivPop_btapproved", Common.GetDic("lbl_apv_attachfile"), sUrl, iWidth, iHeight, "iframe-ifNoScroll"); //파일첨부   // 승인 등의 openID 처리 용
    //else
    //    Common.Inform(String.format(Common.GetDic("msg_MaxAttachCnt"), iMaxFileCnt));

    //KBW 수주품의[양식-계약서 첨부시] 경우의 파일 첨부 제한 없이 팝업창을 띄울 수 있게 수정
    if (bCheck || getInfo("fmpf") == "GWOK_GENERAL_AES")
        parent.Common.ShowDialog("btapproved", "DivPop_btapproved", Common.GetDic("lbl_apv_attachfile"), sUrl, iWidth, iHeight, "iframe-ifNoScroll"); //파일첨부   // 승인 등의 openID 처리 용
    else
        Common.Inform(String.format(Common.GetDic("msg_MaxAttachCnt"), iMaxFileCnt));
}

function fnFormAttach(sObjID) {
    var sFileHtml = "";
    //var sFileSizeOLD = $("#hidFileSizeOLD_" + sObjID).val();
    //var nOldCount = 0;
    //if (sFileSizeOLD != "") {
    //    var aFileSize = sFileSizeOLD.split("|");
    //    nOldCount = aFileSize.length - 1;
    //    for (var i = 0; i < aFileSize.length; i++) {
    //        var aFileinfo = aFileSize[i].split(":");
    //        if (aFileinfo.length > 2) {
    //            sFileHtml += String.format("<div class='c-checkbox' style='margin-top:3px;margin-bottom:3px;'>");
    //            sFileHtml += String.format("<input class='c-checkbox__input' id='chkold_{0}_{1}' type='checkbox'>", sObjID, i);
    //            //sFileHtml += String.format("<label class='c-checkbox__label' id='chk_chk{0}_{1}' for='chk{0}_{1}'>", sObjID, i);
    //            sFileHtml += String.format("<label class='c-checkbox__label' for='chkold_{0}_{1}'>", sObjID, i);
    //            sFileHtml += String.format("{0} ({1} KB)", aFileinfo[0], XFN_ConvertFileSize(aFileinfo[2]));
    //            sFileHtml += String.format("</label></div>");
    //        }
    //    }
    //}

    var nOldCount = 0;
    $("[id^='chk_" + sObjID + "']").each(function (i, elm) {
        $(elm).parent().remove();
        //nOldCount++;
    });

    var sFileSize = $("#hidFileSize_" + sObjID).val();
    var sFrontPath = $("#hidFrontPath_" + sObjID).val();
    if (sFileSize != "" && sFrontPath != null) {
        var aFileSize = sFileSize.split("|");
        for (var i = 0; i < aFileSize.length; i++) {
            var aFileinfo = aFileSize[i].split(":");
            if (aFileinfo.length > 2) {
                sFileHtml += String.format("<div class='c-checkbox'  style='margin-top:3px;margin-bottom:3px;'>");
                sFileHtml += String.format("<input class='c-checkbox__input' id='chk_{0}_{1}' type='checkbox'>", sObjID, i + nOldCount);
                //sFileHtml += String.format("<label class='c-checkbox__label' id='chk_chk{0}_{1}' for='chk{0}_{1}'>", sObjID, i);
                sFileHtml += String.format("<label class='c-checkbox__label' for='chk_{0}_{1}'>", sObjID, i + nOldCount);
                sFileHtml += String.format("{0} ({1} KB)", aFileinfo[0], XFN_ConvertFileSize(aFileinfo[2]));
                sFileHtml += String.format("</label></div>");
            }
        }
    }
    $("#span" + sObjID).html($("#span" + sObjID).html() + sFileHtml);
}


var FormfileInfo_AttacheDelete = "";
function fnFormAttachDel(sObjID, sDeleteSeqs) {
    var sFileSizeOLD = $("#hidFileSizeOLD_" + sObjID).val();
    var sFileSizeOLD2 = "";
    var sFileOLD = $("#hidOldFile_" + sObjID).val();
    var sFileOLD2 = "";
    var i = 0;
    if (sDeleteSeqs != undefined && sDeleteSeqs != "") {
        var arrDeleteSeqs = sDeleteSeqs.split("|");
        var iLength = arrDeleteSeqs.length;
        $("[id^='chkold_" + sObjID + "']").prop("checked", false);
        $("[id^='chk_" + sObjID + "']").prop("checked", false);
        for (var j = 0; j < iLength - 1; j++) {
            $("#span" + sObjID).find("div").not("[style*=\"display: none\"]").find("[id^='chk']:checkbox").each(function (m, elm) {
                if (m + 1 == arrDeleteSeqs[j]) $(this).prop("checked", true);
            });
        }
    }
    i = 0;
    $("[id^='chkold_" + sObjID + "']").each(function (k, elm) {
        if ($(elm).parent().css('display') != "none" && $(elm).is(":checked")) {
            //sFileSizeOLD = sFileSizeOLD.replace(sFileSizeOLD.split("|")[i] + "|", "");
            //if (sFileOLD != undefined) sFileOLD = sFileSizeOLD.replace(sFileOLD.split("|")[i] + "|", "");
            FormfileInfo_AttacheDelete += "ObjectType=FormAttach&MessageID=" + escape($("#" + sObjID).val()) + "&FileID=" + $(elm).attr("id").replace("chkold_" + sObjID + "_", "");
            FormfileInfo_AttacheDelete += "@@@";
            $(elm).parent().css('display', 'none');
            $(elm).prop("checked", false);
            i++;
        } else if ($(elm).parent().css('display') != "none") {
            sFileSizeOLD2 = sFileSizeOLD2 + sFileSizeOLD.split("|")[i] + "|";
            if (sFileOLD != undefined) sFileOLD2 = sFileOLD2 + sFileOLD.split("|")[i] + "|";
            i++;
        }
    });
    $("#hidFileSizeOLD_" + sObjID).val(sFileSizeOLD2);
    if (sFileOLD != undefined) $("#hidOldFile_" + sObjID).val(sFileOLD2);
    //fnFormAttach(sObjID);

    var sFileSize = $("#hidFileSize_" + sObjID).val();
    var sFileSize2 = "";
    $("[id^='chk_" + sObjID + "']").each(function (k, elm) {
        if (!$(elm).is(":checked")) {
            sFileSize2 += sFileSize.split("|")[k] + "|";
        }
    });
    $("[id^='chk_" + sObjID + "']").each(function (k, elm) {
        if ($(elm).is(":checked")) {
            $(elm).parent().remove();
        }
    });
    $("#hidFileSize_" + sObjID).val(sFileSize2);
    //fnFormAttach(sObjID);

    if ($("#VIST_BIZ_DATAS_if", parent.document).length > 0) {
        var oSrc = $("#VIST_BIZ_DATAS_if", parent.document)[0].contentWindow;
        var obj = oSrc.document.getElementById("spanFormAttach01");
        $(obj).html($("#span" + sObjID).html());
    }
}
function fnFormAttachUpload() {

    //저장
    $("[id^='hidFileSize_']").each(function () {

        var sObjID = $(this).attr("id").replace("hidFileSize_", "");
        if ($(this).val() != "") {
            var fileInfo = "FileInfo=" + escape($("#hidFileSize_" + sObjID).val().replace(/\+/g, "%2B").replace(/·/gi, "%c2%b7")) + "&FrontPath=" + escape($("#hidFrontPath_" + sObjID).val()) + "&FormID=" + getInfo("fiid") + "&etid=" + getInfo("etid");
            fileInfo += "&ObjectType=FormAttach"
            CFN_CallAjax("/Approval/FileAttach/CommentUpload.aspx?", fileInfo, function (xmlReturn) {
                var sFileID = "";
                var errorNode = $(xmlReturn).find("response > error");
                if ($(errorNode).length > 0) {
                    throw new Error(-1, $(errorNode).text());
                } else {
                    var sFileID = "";
                    if ($(xmlReturn).find("response > fileInfo").length > 0) {
                        sFileID = $($(xmlReturn).find("response > fileInfo")).text();
                    }
                }
                //CFN_GetCtrlById(sObjID).value = sFileID;
                $("#" + sObjID).val(sFileID);
            }, false, "xml");

        }
    });

    //삭제
    if (getInfo("mode") != "DRAFT") {
        var aFormfileInfo_AttacheDelete = FormfileInfo_AttacheDelete.split("@@@");
        if (aFormfileInfo_AttacheDelete.length > 1) {
            for (var i = 0; i < aFormfileInfo_AttacheDelete.length; i++) {
                var fileInfo = aFormfileInfo_AttacheDelete[i];
                if (fileInfo.length > 0) {
                    CFN_CallAjax("/Approval/FileAttach/AttacheDelete.aspx?", fileInfo, function (xmlReturn) {
                        var errorNode = $(xmlReturn).find("response > error");
                        if ($(errorNode).length > 0) {
                            throw new Error(-1, $(errorNode).text());
                        }
                    }, false, "xml");
                }
            }
        }
    }
}

function fnFormAttachLoad(bLink) {

    $("[id^='FormAttach']").each(function () {
        var sObjID = $(this).attr("id");
        var CountAttach = $(this).val();
        // if (CountAttach != "") {
        if (CountAttach != "" && (sObjID != "FormAttach07" || getInfo("fmpf") != "GOJP_WORKFORM_W01")) { // 업무표준에서 서식첨부(FormAttach07)은 조회해오는 파일이 아니므로 제외
            var szURL = "/Approval/Controls/ApprovalExecuteWebService.asmx/AttachCmtList";
            var Param = String.format("{ messageID:'{0}'}", CountAttach);
            var oResult = CFN_CallAjaxJson(szURL, Param, false, null);
            oResult = $.parseJSON(oResult);
            var xmlReturn = $.parseXML(oResult.d);

            var sFileHtml = "";
            var errorNode = $(xmlReturn).find("response > error");
            if (errorNode.length > 0) {
                Common.Error("Desc: " + errorNode.text());
                return false;
            }
            else {
                var sFileSize = "";
                var sFrontPath = "";

                var elmlist = $(xmlReturn).find("NewDataSet > Table");
                if (getInfo("templatemode") == "Read") {
                    sFileHtml += "<div style='padding-top:5px;padding-bottom:5px' id='" + CountAttach + "'>";
                    $(elmlist).each(function (i, elm) {

                        //법인인감 실물날인 처리시
                        if (getInfo("fmpf") == "HWGP_CORPSEALRQST_W01" && getInfo("editmode") == "M") {
                            //"D:\FrontStorage\|20170706|41ivkogmrdkt3eddgmaix1iw|3994d753-63e1-43c6-aa3b-0ed5a72a7ffe"
                            var sSize = (parseInt($(elm).find("Size").text()) / 1024).toFixed(2);
                            var arrFileSize = sSize.split('.');
                            var sFileCommaSize = setComma(arrFileSize[0]);
                            if (arrFileSize[1] != undefined) sFileCommaSize = sFileCommaSize + "." + arrFileSize[1];
                            sFileSize += String.format("{0}:{0}:{1}|", $(elm).find("FileName").text(), $(elm).find("Size").text());
                            //sFrontPath = String.format("{0}|{1}|{2}|{3}", "", $(elm).find("FilePath").text().replace("/", ""), Common.GetSession("SessionID"), $(elm).find("MessageID").text());
                            sFrontPath += String.format("{0}:{1}:undefined::{2}:{3}{4}:{5}|", $(elm).find("FileName").text(), $(elm).find("Size").text(), $(elm).find("Extention").text(), $(elm).find("FilePath").text(), $(elm).find("SavedName").text(), $(elm).find("FileID").text());
                            sFileHtml += String.format("<div class='c-checkbox'>");
                            sFileHtml += String.format("<input class='c-checkbox__input' id='chkold_{0}_{1}' type='checkbox'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("<label class='c-checkbox__label' for='chkold_{0}_{1}'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("{0} ({1} KB)", $(elm).find("FileName").text(), sFileCommaSize);
                            sFileHtml += String.format("</label></div>");
                        }//지마린서비스 법인인감 실물날인 처리시
                        else if (getInfo("fmpf") == "WF_GMARINE_CORPSEAL" && getInfo("editmode") == "M") {
                            //"D:\FrontStorage\|20170706|41ivkogmrdkt3eddgmaix1iw|3994d753-63e1-43c6-aa3b-0ed5a72a7ffe"
                            var sSize = (parseInt($(elm).find("Size").text()) / 1024).toFixed(2);
                            var arrFileSize = sSize.split('.');
                            var sFileCommaSize = setComma(arrFileSize[0]);
                            if (arrFileSize[1] != undefined) sFileCommaSize = sFileCommaSize + "." + arrFileSize[1];
                            sFileSize += String.format("{0}:{0}:{1}|", $(elm).find("FileName").text(), $(elm).find("Size").text());
                            //sFrontPath = String.format("{0}|{1}|{2}|{3}", "", $(elm).find("FilePath").text().replace("/", ""), Common.GetSession("SessionID"), $(elm).find("MessageID").text());
                            sFrontPath += String.format("{0}:{1}:undefined::{2}:{3}{4}:{5}|", $(elm).find("FileName").text(), $(elm).find("Size").text(), $(elm).find("Extention").text(), $(elm).find("FilePath").text(), $(elm).find("SavedName").text(), $(elm).find("FileID").text());
                            sFileHtml += String.format("<div class='c-checkbox'>");
                            sFileHtml += String.format("<input class='c-checkbox__input' id='chkold_{0}_{1}' type='checkbox'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("<label class='c-checkbox__label' for='chkold_{0}_{1}'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("{0} ({1} KB)", $(elm).find("FileName").text(), sFileCommaSize);
                            sFileHtml += String.format("</label></div>");
                        }//지마린서비스 사용인감 실물날인 처리시
                        else if (getInfo("fmpf") == "WF_GMARINE_SEAL" && getInfo("editmode") == "M") {
                            //"D:\FrontStorage\|20170706|41ivkogmrdkt3eddgmaix1iw|3994d753-63e1-43c6-aa3b-0ed5a72a7ffe"
                            var sSize = (parseInt($(elm).find("Size").text()) / 1024).toFixed(2);
                            var arrFileSize = sSize.split('.');
                            var sFileCommaSize = setComma(arrFileSize[0]);
                            if (arrFileSize[1] != undefined) sFileCommaSize = sFileCommaSize + "." + arrFileSize[1];
                            sFileSize += String.format("{0}:{0}:{1}|", $(elm).find("FileName").text(), $(elm).find("Size").text());
                            //sFrontPath = String.format("{0}|{1}|{2}|{3}", "", $(elm).find("FilePath").text().replace("/", ""), Common.GetSession("SessionID"), $(elm).find("MessageID").text());
                            sFrontPath += String.format("{0}:{1}:undefined::{2}:{3}{4}:{5}|", $(elm).find("FileName").text(), $(elm).find("Size").text(), $(elm).find("Extention").text(), $(elm).find("FilePath").text(), $(elm).find("SavedName").text(), $(elm).find("FileID").text());
                            sFileHtml += String.format("<div class='c-checkbox'>");
                            sFileHtml += String.format("<input class='c-checkbox__input' id='chkold_{0}_{1}' type='checkbox'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("<label class='c-checkbox__label' for='chkold_{0}_{1}'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("{0} ({1} KB)", $(elm).find("FileName").text(), sFileCommaSize);
                            sFileHtml += String.format("</label></div>");
                        }//위아 > 해외출장품의 처리시
                        else if (getInfo("fmpf") == "GWOK_OVER_BIZ_TRIP_WIA" && getInfo("editmode") == "M") {
                            //"D:\FrontStorage\|20170706|41ivkogmrdkt3eddgmaix1iw|3994d753-63e1-43c6-aa3b-0ed5a72a7ffe"
                            var sSize = (parseInt($(elm).find("Size").text()) / 1024).toFixed(2);
                            var arrFileSize = sSize.split('.');
                            var sFileCommaSize = setComma(arrFileSize[0]);
                            if (arrFileSize[1] != undefined) sFileCommaSize = sFileCommaSize + "." + arrFileSize[1];
                            sFileSize += String.format("{0}:{0}:{1}|", $(elm).find("FileName").text(), $(elm).find("Size").text());
                            //sFrontPath = String.format("{0}|{1}|{2}|{3}", "", $(elm).find("FilePath").text().replace("/", ""), Common.GetSession("SessionID"), $(elm).find("MessageID").text());
                            sFrontPath += String.format("{0}:{1}:undefined::{2}:{3}{4}:{5}|", $(elm).find("FileName").text(), $(elm).find("Size").text(), $(elm).find("Extention").text(), $(elm).find("FilePath").text(), $(elm).find("SavedName").text(), $(elm).find("FileID").text());
                            sFileHtml += String.format("<div class='c-checkbox'>");
                            sFileHtml += String.format("<input class='c-checkbox__input' id='chkold_{0}_{1}' type='checkbox'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("<label class='c-checkbox__label' for='chkold_{0}_{1}'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("{0} ({1} KB)", $(elm).find("FileName").text(), sFileCommaSize);
                            sFileHtml += String.format("</label></div>");
                        }//북경글로비스 법인인감 실물날인 처리시
                        else if (getInfo("fmpf") == "HWGP_CORPSEAL_RQST_BJG" && getInfo("editmode") == "M") {
                            //"D:\FrontStorage\|20170706|41ivkogmrdkt3eddgmaix1iw|3994d753-63e1-43c6-aa3b-0ed5a72a7ffe"
                            var sSize = (parseInt($(elm).find("Size").text()) / 1024).toFixed(2);
                            var arrFileSize = sSize.split('.');
                            var sFileCommaSize = setComma(arrFileSize[0]);
                            if (arrFileSize[1] != undefined) sFileCommaSize = sFileCommaSize + "." + arrFileSize[1];
                            sFileSize += String.format("{0}:{0}:{1}|", $(elm).find("FileName").text(), $(elm).find("Size").text());
                            //sFrontPath = String.format("{0}|{1}|{2}|{3}", "", $(elm).find("FilePath").text().replace("/", ""), Common.GetSession("SessionID"), $(elm).find("MessageID").text());
                            sFrontPath += String.format("{0}:{1}:undefined::{2}:{3}{4}:{5}|", $(elm).find("FileName").text(), $(elm).find("Size").text(), $(elm).find("Extention").text(), $(elm).find("FilePath").text(), $(elm).find("SavedName").text(), $(elm).find("FileID").text());
                            sFileHtml += String.format("<div class='c-checkbox'>");
                            sFileHtml += String.format("<input class='c-checkbox__input' id='chkold_{0}_{1}' type='checkbox'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("<label class='c-checkbox__label' for='chkold_{0}_{1}'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("{0} ({1} KB)", $(elm).find("FileName").text(), sFileCommaSize);
                            sFileHtml += String.format("</label></div>");
                        }
                        else {
                            var FileID = $(elm).find("FileID").text();
                            var MessageID = $(elm).find("MessageID").text();
                            var FileName = $(elm).find("FileName").text();
                            var Extention = $(elm).find("Extention").text();
                            var Seq = $(elm).find("Seq").text();
                            if (bLink) {
                                //sFileHtml += String.format("&nbsp<a onclick='CommonFileDownLoadProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                                //sFileHtml += String.format("<img src='/images/images/Controls/file/data_any.gif'  >&nbsp;{0}&nbsp;<i class='i-download' ></i>", FileName);
                                sFileHtml += String.format("&nbsp<a onclick='CommonFileOpenProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                                sFileHtml += String.format("<img src='{0}'  >&nbsp;{1}&nbsp;", getAttachImage_form(Extention), FileName);
                                sFileHtml += String.format("</a>");
                                sFileHtml += String.format("<i class='i-download' onclick='CommonFileDownLoadProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'></i>&nbsp&nbsp", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                            } else {
                                //sFileHtml += String.format("&nbsp;<img src='{1}'  >&nbsp;{0}&nbsp;", FileName, getAttachImage_form(Extention));
                                sFileHtml += String.format("&nbsp<a onclick='CommonFileOpenProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                                sFileHtml += String.format("<img src='{0}'  >&nbsp;{1}&nbsp;", getAttachImage_form(Extention), FileName);
                                sFileHtml += String.format("</a>");
                            }
                            sFileHtml += String.format("<br/>");
                        }

                    });

                    //법인인감 실물날인 처리시
                    if (getInfo("fmpf") == "HWGP_CORPSEALRQST_W01" && getInfo("editmode") == "M") {
                        $("#hidFileSizeOLD_" + sObjID).val(sFileSize);
                        $("#hidOldFile_" + sObjID).val(sFrontPath);
                        //$("#hidFrontPath_" + sObjID).val(sFrontPath);
                    } if (getInfo("fmpf") == "WF_GMARINE_CORPSEAL" && getInfo("editmode") == "M") { //지마린서비스 법인인감 실물날인 처리시
                        $("#hidFileSizeOLD_" + sObjID).val(sFileSize);
                        $("#hidOldFile_" + sObjID).val(sFrontPath);
                        //$("#hidFrontPath_" + sObjID).val(sFrontPath);
                    } if (getInfo("fmpf") == "WF_GMARINE_SEAL" && getInfo("editmode") == "M") { //지마린서비스 사용인감 실물날인 처리시
                        $("#hidFileSizeOLD_" + sObjID).val(sFileSize);
                        $("#hidOldFile_" + sObjID).val(sFrontPath);
                        //$("#hidFrontPath_" + sObjID).val(sFrontPath);
                    }
                    //위아 > 해외출장품의 처리시
                    if (getInfo("fmpf") == "GWOK_OVER_BIZ_TRIP_WIA" && getInfo("editmode") == "M") {
                        $("#hidFileSizeOLD_" + sObjID).val(sFileSize);
                        $("#hidOldFile_" + sObjID).val(sFrontPath);
                        //$("#hidFrontPath_" + sObjID).val(sFrontPath);
                    }
                    //북경글로비스 법인인감 실물날인 처리시
                    if (getInfo("fmpf") == "HWGP_CORPSEAL_RQST_BJG" && getInfo("editmode") == "M") {
                        $("#hidFileSizeOLD_" + sObjID).val(sFileSize);
                        $("#hidOldFile_" + sObjID).val(sFrontPath);
                        //$("#hidFrontPath_" + sObjID).val(sFrontPath);
                    }

                    sFileHtml += "</div>";
                    //$("#btn" + sObjID).hide();

                } else {
                    $(elmlist).each(function (i, elm) {
                        //법인인감 사후관리 write 처리시
                        if (getInfo("fmpf") == "HWGP_CORPSEALRQST_POST_W01"
                            || getInfo("fmpf") == "WF_GMARINE_CORPSEAL_P"   //지마린 법인인감 사후관리
                            || getInfo("fmpf") == "HWGP_CORPSEAL_POST_BJG"  //북경글로비스 법인인감 사후관리
                            ) {
                            var FileID = $(elm).find("FileID").text();
                            var MessageID = $(elm).find("MessageID").text();
                            var FileName = $(elm).find("FileName").text();
                            var Extention = $(elm).find("Extention").text();
                            var Seq = $(elm).find("Seq").text();
                            if (bLink) {
                                //sFileHtml += String.format("&nbsp<a onclick='CommonFileDownLoadProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                                //sFileHtml += String.format("<img src='/images/images/Controls/file/data_any.gif'  >&nbsp;{0}&nbsp;<i class='i-download' ></i>", FileName);
                                sFileHtml += String.format("&nbsp<a onclick='CommonFileOpenProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                                sFileHtml += String.format("<img src='{0}'  >&nbsp;{1}&nbsp;", getAttachImage_form(Extention), FileName);
                                sFileHtml += String.format("</a>");
                                sFileHtml += String.format("<i class='i-download' onclick='CommonFileDownLoadProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'></i>&nbsp&nbsp", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                            } else {
                                //sFileHtml += String.format("&nbsp;<img src='{1}'  >&nbsp;{0}&nbsp;", FileName, getAttachImage_form(Extention));
                                sFileHtml += String.format("&nbsp<a onclick='CommonFileOpenProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                                sFileHtml += String.format("<img src='{0}'  >&nbsp;{1}&nbsp;", getAttachImage_form(Extention), FileName);
                                sFileHtml += String.format("</a>");
                            }
                            sFileHtml += String.format("<br/>");
                        }
                            //아래의 지마린 관련 구문, 글로비스/북경글로비스 법인인감 사후관리 조건과 동일
                            //기존 소스 주석 처리 후, if 조건으로 추가함 2019.11.12
                            //} if (getInfo("fmpf") == "WF_GMARINE_CORPSEAL_P") {
                            //    var FileID = $(elm).find("FileID").text();
                            //    var MessageID = $(elm).find("MessageID").text();
                            //    var FileName = $(elm).find("FileName").text();
                            //    var Extention = $(elm).find("Extention").text();
                            //    var Seq = $(elm).find("Seq").text();
                            //    if (bLink) {
                            //        //sFileHtml += String.format("&nbsp<a onclick='CommonFileDownLoadProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                            //        //sFileHtml += String.format("<img src='/images/images/Controls/file/data_any.gif'  >&nbsp;{0}&nbsp;<i class='i-download' ></i>", FileName);
                            //        sFileHtml += String.format("&nbsp<a onclick='CommonFileOpenProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                            //        sFileHtml += String.format("<img src='{0}'  >&nbsp;{1}&nbsp;", getAttachImage_form(Extention), FileName);
                            //        sFileHtml += String.format("</a>");
                            //        sFileHtml += String.format("<i class='i-download' onclick='CommonFileDownLoadProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'></i>&nbsp&nbsp", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                            //    } else {
                            //        //sFileHtml += String.format("&nbsp;<img src='{1}'  >&nbsp;{0}&nbsp;", FileName, getAttachImage_form(Extention));
                            //        sFileHtml += String.format("&nbsp<a onclick='CommonFileOpenProcess(\"{0}\",\"{1}\",\"{2}\",\"{3}\");' style='cursor:pointer'>", FileID, Seq, MessageID, formJson.oFormData.DOC_LEVEL);
                            //        sFileHtml += String.format("<img src='{0}'  >&nbsp;{1}&nbsp;", getAttachImage_form(Extention), FileName);
                            //        sFileHtml += String.format("</a>");
                            //    }
                            //    sFileHtml += String.format("<br/>");
                            //}
                        else {
                            //"D:\FrontStorage\|20170706|41ivkogmrdkt3eddgmaix1iw|3994d753-63e1-43c6-aa3b-0ed5a72a7ffe"
                            var sSize = (parseInt($(elm).find("Size").text()) / 1024).toFixed(2);
                            var arrFileSize = sSize.split('.');
                            var sFileCommaSize = setComma(arrFileSize[0]);
                            if (arrFileSize[1] != undefined) sFileCommaSize = sFileCommaSize + "." + arrFileSize[1];
                            sFileSize += String.format("{0}:{0}:{1}|", $(elm).find("FileName").text(), $(elm).find("Size").text());
                            //sFrontPath = String.format("{0}|{1}|{2}|{3}", "", $(elm).find("FilePath").text().replace("/", ""), Common.GetSession("SessionID"), $(elm).find("MessageID").text());
                            sFrontPath += String.format("{0}:{1}:undefined::{2}:{3}{4}:{5}|", $(elm).find("FileName").text(), $(elm).find("Size").text(), $(elm).find("Extention").text(), $(elm).find("FilePath").text(), $(elm).find("SavedName").text(), $(elm).find("FileID").text());
                            sFileHtml += String.format("<div class='c-checkbox'>");
                            sFileHtml += String.format("<input class='c-checkbox__input' id='chkold_{0}_{1}' type='checkbox'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("<label class='c-checkbox__label' for='chkold_{0}_{1}'>", sObjID, $(elm).find("FileID").text());
                            sFileHtml += String.format("{0} ({1} KB)", $(elm).find("FileName").text(), sFileCommaSize);
                            sFileHtml += String.format("</label></div>");
                        }
                    });

                    //법인인감 사후관리가 아닐 때
                    if (getInfo("fmpf") != "HWGP_CORPSEALRQST_POST_W01"
                        && getInfo("fmpf") != "HWGP_CORPSEAL_POST_BJG"   //북경 글로비스 법인인감 사후관리
                        ) {
                        $("#hidFileSizeOLD_" + sObjID).val(sFileSize);
                        $("#hidOldFile_" + sObjID).val(sFrontPath);
                        //$("#hidFrontPath_" + sObjID).val(sFrontPath);
                    }//법인인감 사후관리가 아닐 때
                    else if (getInfo("fmpf") != "WF_GMARINE_CORPSEAL_P") {
                        $("#hidFileSizeOLD_" + sObjID).val(sFileSize);
                        $("#hidOldFile_" + sObjID).val(sFrontPath);
                        //$("#hidFrontPath_" + sObjID).val(sFrontPath);
                    }
                }
            }
            $("#span" + sObjID).html(sFileHtml);
        } else {
            if (CFN_GetQueryString("Readtype") == "preview") {
                var sFileHtml = "";

                var sFileSize = opener.$("#hidFileSize_" + sObjID).val();
                var sFrontPath = opener.$("#hidFrontPath_" + sObjID).val();
                if (sFileSize != "" && sFrontPath != null) {
                    var aFileSize = sFileSize.split("|");
                    for (var i = 0; i < aFileSize.length; i++) {
                        var aFileinfo = aFileSize[i].split(":");
                        if (aFileinfo.length > 2) {
                            sFileHtml += String.format("<div class='c-checkbox'  style='margin-top:3px;margin-bottom:3px;'>");
                            sFileHtml += String.format("  {0} ({1} KB)", aFileinfo[0], XFN_ConvertFileSize(aFileinfo[2]));
                            sFileHtml += String.format("</div>");
                        }
                    }
                }
                $("#span" + sObjID).html(sFileHtml);
                if (sFileHtml != "") $("#" + sObjID).closest("table").show();
            }
        }
    });

}
function printIE() {
    var wb = '<OBJECT ID="WebBrowser" WIDTH=0 HEIGHT=0 CLASSID="CLSID:8856F961-340A-11D0-A96B-00C04FD705A2"></OBJECT>';
    document.body.insertAdjacentHTML('beforeEnd', wb);
    WebBrowser.ExecWB(7, -1);
    WebBrowser.outerHTML = '';
    self.close();
}

function fnConsultDate() {
    if ($('#CONSULT_LIST').val() != "" && $('#CONSULT_LIST').val().indexOf(":N:") > -1) {
        var strConsultDate = CFN_TransDateServerFormat($("#CONSULT_DATE").val()); // 20171204 hpark m/r/dField 날짜포멧 변경
        strConsultDate = parseInt(strConsultDate.replace(/-/g, ""));
        var today = new Date();
        //var today = new Date("2017-12-04");

        var holiydaycheck = 0;
        var cooperationCount = 5;

        //지마린서비스 법인인감 실물날인 처리시
        if (getInfo("fmpf") == "GWOK_ORCREPORT_W01" || getInfo("fmpf") == "HWGP_CORPSEALRQST_W01" || getInfo("fmpf") == "WF_GMARINE_CORPSEAL" || getInfo("fmpf") == "WF_GMARINE_SEAL" || getInfo("fmpf") == "HWGP_CORPSEAL_POST_BJG") {
            cooperationCount = 3;
        }

        for (var i = 1; i <= cooperationCount; i++) {
            today.setDate(today.getDate() + 1);
            if (0 < today.getDay() && today.getDay() < 6) {
                //평일
            } else {
                //2017-11-27 추가 토요일인 경우 2일
                if (today.getDay() == 0 && holiydaycheck == 0)
                    holiydaycheck = 1;
                else
                    holiydaycheck = 2;
            }
        }
        today.setDate(today.getDate() + holiydaycheck);
        var mm = today.getMonth() + 1;
        var dd = today.getDate();
        var yyyy = today.getFullYear();
        if (today.getDate() < 10) {
            dd = '0' + today.getDate()
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        var minimumConsultDate = parseInt(yyyy + "" + mm + "" + dd);
        if (strConsultDate < minimumConsultDate) {
            $("#CONSULT_DATE").val('');
            alert(Common.GetDic("msg_apv_chkcooperatedata").replace("{0}", CFN_TransDateLocalFormat(yyyy + "-" + mm + "-" + dd)));// 이후로 협조기한을 지정하세요.  // 20171204 hpark m/r/dField 날짜포멧 변경
            return false;
        }
    }
}

function setComma(setnum) {
    var str = setnum.toString();
    var ret_str = "";
    for (i = 1; i <= str.length; i++) {
        if (i > 1 && (i % 3) == 1)
            ret_str = str.charAt(str.length - i) + "," + ret_str;
        else
            ret_str = str.charAt(str.length - i) + ret_str;
    }
    return ret_str;
}

// 20171101 hpark XSS 관련 수정
function fn_replaceXLCharacter(targetTxt) {
    var rtnTxt = targetTxt.toString();
    //rtnTxt = rtnTxt.replace(/&/gi, '&amp;');
    //rtnTxt = rtnTxt.replace(/</gi, '&lt;');
    //rtnTxt = rtnTxt.replace(/>/gi, '&gt;');
    //rtnTxt = rtnTxt.replace(/"/gi, '&quot;');
    //rtnTxt = rtnTxt.replace(/'/gi, '&apos;');
    //rtnTxt = rtnTxt.replace(/<script/gi,'&lt;script');
    //rtnTxt = rtnTxt.replace(/<\/script>/,'&lt;/script&gt;');
    rtnTxt = XFN_ConvertXssView(rtnTxt);
    return rtnTxt;
}

//양식에 협조처 지정시 협조기한을 설정하는 함수 이며 각 양식에 있는 로직을 아래 함수로 이동한 상태임
//적용시 에는 아래함수를 양식에서 각각 호출 함, 2017.11.02 양유빈
function CooperationConsultDateSetting() {
    if (($('#CONSULT_LIST').val() != '') && ($('#CONSULT_DATE').val() == '')) {
        var today = new Date();

        var holiydaycheck = 0;
        for (var i = 1; i <= 5; i++) {
            today.setDate(today.getDate() + 1);
            if (0 < today.getDay() && today.getDay() < 6) {
                //평일
            } else {
                if (today.getDay() == 0 && holiydaycheck == 0)
                    holiydaycheck = 1;
                else
                    holiydaycheck = 2;
            }
        }
        today.setDate(today.getDate() + holiydaycheck);


        var mm = today.getMonth() + 1;
        var dd = today.getDate();
        var yyyy = today.getFullYear();
        if (today.getDate() < 10) {
            dd = '0' + today.getDate()
        }
        if (mm < 10) {
            mm = '0' + mm
        }

        // 20171204 hpark m/r/dField 날짜포멧 변경
        //var dataChange = CFN_TransLocalTime(yyyy + "-" + mm + "-" + dd); 
        var dataChange = CFN_TransDateLocalFormat(yyyy + "-" + mm + "-" + dd);

        $('#CONSULT_DATE').val(dataChange);
    }
}
//협조처 지정 후 협조일자 검증 함수. 각 양식에 존재하는 로직을 아래 함수로 이동한 상태
//적용시 에는 아래함수를 양식에서 호출 사용, 2017.11.02 양유빈
function CooperationDateCheck() {
    var strConsultDate = CFN_TransServerTime($("#CONSULT_DATE").val());
    strConsultDate = parseInt(strConsultDate.replace(/-/g, ""));
    var today = new Date();
    var holiydaycheck = 0;
    var cooperationCount = 5;
    //지마린서비스 법인인감 실물날인 처리시
    if (getInfo("fmpf") == "GWOK_ORCREPORT_W01" || getInfo("fmpf") == "HWGP_CORPSEALRQST_W01" || getInfo("fmpf") == "WF_GMARINE_CORPSEAL" || getInfo("fmpf") == "WF_GMARINE_SEAL" || getInfo("fmpf") == "HWGP_CORPSEAL_POST_BJG") {
        cooperationCount = 3;
    }

    for (var i = 1; i <= cooperationCount; i++) {
        today.setDate(today.getDate() + 1);
        if (0 < today.getDay() && today.getDay() < 6) {
            //평일
        } else {
            //holiydaycheck = +1; //기존 로직
            //2017-11-27 추가 토요일인 경우 2일
            if (today.getDay() == 0 && holiydaycheck == 0)
                holiydaycheck = 1;
            else
                holiydaycheck = 2;
        }
    }
    today.setDate(today.getDate() + holiydaycheck);
    var mm = today.getMonth() + 1;
    var dd = today.getDate();
    var yyyy = today.getFullYear();
    if (today.getDate() < 10) {
        dd = '0' + today.getDate()
    }
    if (mm < 10) {
        mm = '0' + mm
    }
    var minimumConsultDate = parseInt(yyyy + "" + mm + "" + dd);
    if (strConsultDate < minimumConsultDate) {
        alert(Common.GetDic("msg_apv_chkcooperatedata").replace("{0}", CFN_TransDateLocalFormat(yyyy + "-" + mm + "-" + dd)));// 이후로 협조기한을 지정하세요.  // 20171204 hpark m/r/dField 날짜포멧 변경
        return false;
    }
    else {
        return true;
    }
}

//TO-DO : 결재선의 최종 결재자가 조직장인지 확인한다
function CheckApprovalOrder() {
    var oApvlist;
    //지마린서비스 법인인감 실물날인 처리시
    if (getInfo("fmpf") == "GWOK_ADD_BUDGET" || getInfo("fmpf") == "GWOK_BUDGET_RQST" || getInfo("fmpf") == "HWGP_CORPSEALRQST_W01" || getInfo("fmpf") == "HWGP_CORPSEALRQST_OVER_W01" || getInfo("fmpf") == "HWGP_CORPSEALRQST_EXPIRE_W01" || getInfo("fmpf") == "WF_GMARINE_CORPSEAL" || getInfo("fmpf") == "WF_GMARINE_CORPSEAL_O" || getInfo("fmpf") == "WF_GMARINE_CORPSEAL_E" || getInfo("fmpf") == "WF_GMARINE_SEAL" || getInfo("fmpf") == "WF_GMARINE_SEAL_O" || getInfo("fmpf") == "WF_GMARINE_SEAL_E" || getInfo("fmpf") == "HWGP_CORPSEAL_EXPR_BJG") {
        var tempoApvlist = $.parseXML($("#APVLIST").val());

        var is_role = false;
        $(tempoApvlist).find("division > step").each(function (i, elm) {
            if ($(elm).attr("unittype") == "role") {
                $(elm).remove();
                is_role = true;
            }
            else {
                if (is_role) {
                    $(elm).remove();
                }
            }
        });
        oApvlist = tempoApvlist;
    }
    else {
        oApvlist = $.parseXML($("#APVLIST").val());
    }
    //var oApvlist = $.parseXML($("#APVLIST").val());
    var currentApprovalOrder = 1;
    if (getInfo("mode") != "DRAFT" && getInfo("mode") != "TEMPSAVE") {
        // 다음 결재자가 있는지만 체크하는 값인데 kind는 결재진행전/후 모두 normal 이므로 status 로 체크하는게 맞음
        //currentApprovalOrder = $(oApvlist).find("division[divisiontype='send'] > step[processinstanceid='" + getInfo("processinstanceid") + "'] > ou > person >taskinfo[kind='inactive']").length;
        currentApprovalOrder = $(oApvlist).find("division[divisiontype='send'] > step[processinstanceid='" + getInfo("piid") + "'] > ou > person >taskinfo[status='inactive']").length;
    }

    //var LastApproverOU = $(oApvlist).find("division > step > ou:last");
    var LastApproverOU = $(oApvlist).find("division[divisiontype='send'] > step[routetype='approve'] > ou:has(person):last");
    var LastApproverCompanyCode = $(LastApproverOU).attr("companycode");
    var LastApproverOUCode = $(LastApproverOU).find("person:last").attr("oucode");
    var sWhere = "DeptCode='" + LastApproverOUCode + "'";

    if (currentApprovalOrder > 0) {
        if (LastApproverCompanyCode == "H101" || LastApproverCompanyCode == "K101")
            sWhere += " AND A.DN_code IN ('H101','K101')";
        else
            sWhere += " AND A.DN_code ='" + LastApproverCompanyCode + "'";

        //var oRet = Common.GetObjectInfo("GR", "", "IntegratedYN", sWhere, "");//통합조직여부 조회
        //var LastApproverCompanyCode_Real = (oRet.Table[0].IntegratedYN == "Y") ? "H101" : LastApproverCompanyCode;
        var oRet = Common.GetObjectInfo("GR", "", "A.IntegratedYN,A.DN_Code", sWhere, "");//통합조직여부 조회
        var LastApproverCompanyCode_Real = LastApproverCompanyCode;
        if (oRet != null && $(oRet.Table).length > 0 && oRet.Table[0].DN_Code) {
            LastApproverCompanyCode_Real = oRet.Table[0].DN_Code;
        }

        var LastApproverURCode = $(LastApproverOU).find("person:last").attr("code");

        //var OUManager = Common.GetObjectInfo("GR", LastApproverCompanyCode_Real + "_" + LastApproverOUCode, "ManagerCode").Table[0].ManagerCode;

        var oResult = CFN_CallAjaxJson("/Common/Base/Controls/WebService.asmx/GetManagerCode", "{pGR_Code:'" + LastApproverCompanyCode_Real + "_" + LastApproverOUCode + "'}", false, null);
        var bSucces = eval($.parseJSON(oResult).d[0].Value);

        if ($(oApvlist).find("division[divisiontype='send'] > step").length == 1) { //전결일 경우는 대결 설정까지 확인 해야함.
            if (getInfo("usismanager") == "Y")
                return true;
            else
                return false;
        } else {
            // 현대위아 국내출장품의서의 대결설정시 대결지정자가 결재할때 전결권이 없다는 메시지 오류로 인해 수정.2019.07.05 STS HK.CHO.
            if ($(oApvlist).find("division[divisiontype='send'] > step").length == 2 && $(oApvlist).find("division[divisiontype='send'] > step > ou > role").length == 1) {
                if (getInfo("usismanager") == "Y")
                    return true;
                else
                    return false;
            }
            else {
                if (bSucces) {
                    //OUManager
                    var OUManager = $.parseJSON(oResult).d[1].Value;
                    var encManagerCode = $.parseJSON(oResult).d[2].Value;
                    if (getInfo("ResidentAuthorityYN") == "Y" && (";" + getInfo("ResidentJobTItleCode") + ";").indexOf(";" + $(LastApproverOU).find("person:last").attr("dutycode") + ';') > -1) { //**주재원 작업**
                        return true;
                    }
                    else if (OUManager != LastApproverURCode) {
                        return false;
                    }
                    else {
                        $("#hidManagerCode").val(OUManager);
                        $("#hidEncManagerCode").val(encodeURIComponent(encManagerCode));
                        return true;
                    }
                } else {
                    return false;
                }
            }
        }
    }
    else
        return true;
}

function getToday(arg, dilimeter) {
    var yyyy = arg.getFullYear().toString();
    var mm = (arg.getMonth() + 1).toString(); // getMonth() is zero-based
    var dd = arg.getDate().toString();
    var ds = (dilimeter) ? dilimeter : '-';
    return yyyy + ds + (mm[1] ? mm : "0" + mm[0]) + ds + (dd[1] ? dd : "0" + dd[0]); // padding
};

// 20171127 hpark 양식오픈시 srolltop, focus
function setInitFormFocus() {
    //if ($("#SUBJECT").length > 0 && $("#SUBJECT").css("display") != "none") {
    try {
        if ($("#SUBJECT").is(':visible')) {
            $("#SUBJECT").focus();
        }
        else {
            for (var i = 0; i < document.all.length; i++) {
                if (document.all[i].tagName.toUpperCase() == "INPUT" && $(document.all[i]).attr("type").toUpperCase() == "TEXT" && !$(document.all[i]).attr("readonly")) {
                    setTimeout(function () {
                        document.all[i].focus();
                    }, 0);
                    break;
                }
            }
        }
    }
    catch (e) { }
}

// 20171127 hpark 양식오픈시 srolltop, focus
function setInitFormFocus2() {
    //if ($("#SUBJECT").length > 0 && $("#SUBJECT").css("display") != "none") {
    try {
        if (getInfo("reuseinfo") == "C") doButtonAction($("#btSave")[0]);
    }
    catch (e) { }
}
// 20171204 hpark m/r/dField 날짜포멧 변경
// pTransType = S(서버타입으로변환) , L(로컬타입으로변환)
// pDataType = 데이터종류(rField mField dField Comment Reply ..)
function formDateConvert(pDate, pTransType, pDataType) {
    var rtnData = "";

    if (pTransType == "L") {
        rtnData = CFN_TransDateLocalFormat(pDate); // CFN_TransLocalTime , CFN_TransDateLocalFormat
    } else if (pTransType == "S") {
        rtnData = CFN_TransDateServerFormat(pDate); // CFN_TransServerTime , CFN_TransDateServerFormat
    }

    return rtnData;
}

//첨부파일 아이콘 표시
function getAttachImage_form(image) {
    image = ((image == null || image == undefined) ? "" : image = image.toLowerCase());
    if (image == "alz" || image == "asf" || image == "asp" || image == "avi" ||
        image == "bmp" || image == "cab" || image == "css" || image == "csv" ||
        image == "dll" || image == "doc" || image == "exe" || image == "gif" ||
        image == "zip" || image == "doc" || image == "ppt" || image == "dll" ||
        image == "htm" || image == "html" || image == "inf" || image == "iso" ||
        image == "jpg" || image == "js" || image == "lzh" || image == "mid" ||
        image == "mp3" || image == "mpeg" || image == "mpg" || image == "pdf" ||
        image == "rar" || image == "reg" || image == "sys" || image == "txt" ||
        image == "htm" || image == "html" || image == "inf" || image == "iso" ||
        image == "vbs" || image == "wav" || image == "wma" || image == "wmv" ||
        image == "xls" || image == "xml" || image == "zip" || image == "png" ||
        image == "xlsx" || image == "docx" || image == "pptx" || image == "hwp") {
        //        var imageurl = "<img src='../../Common/Images/icon/filetype/" + image + ".gif' class='img_align' />";
        //20120221 임시 경로 변경 - ../../Common/Images/icon/filetype/경로를 찾을 수 없음
        // var imageurl = "<img src='\/Images\/Images\/file-icon\/" + image + ".png' width='17' height='17' class='img_align' />";
        var imageurl = "\/Images\/Images\/file-icon\/data_" + image + ".png";
    }
    else {
        //var imageurl = "<img src='../../Common/Images/icon/filetype/unknown.gif' class='img_align' />";
        ///Images/Images/file-icon/icaccdb.png
        var imageurl = "\/Images\/Images\/file-icon\/data_etc.png";
    }
    return imageurl;
}

// 보존연한 상세설명 팝업
function setSaveTermSpec() {
    $("#spn_SAVETERM_POP").remove();
    // 작성중이고, 보존연한이 있고(보이고), 기안자회사의 popup설정값이 있을때
    if (getInfo("templatemode") == "Write" && getInfo('readtype') != 'preview' && getInfo('readtype') != 'Print') {
        var init_ent_code = "";
        var popURL = "";
        var spnHtml = "";
        var str_title = Common.GetDic("lbl_SaveDurationStandard");

        if ($("#SAVETERM").is(':visible')) {
            $("#SAVETERM").css("display", "inline-block");
            if (getInfo("ENT_CODE")) init_ent_code = getInfo("ENT_CODE");
            else init_ent_code = getInfo("etid");

            if (init_ent_code) {
                //popURL = Common.GetDomainBaseConfig("SaveDurationPopURL", init_ent_code);
                popURL = _BaseConfigApv.SaveDurationPopURL;
                if (popURL) {
                    var str_callPopup = String.format('Common.ShowDialog("SaveDurationPop", "SaveDurationPop", "{0}", "/Approval/Forms/Templates/popup/{1}", "700px", "740px", "iframe-bodyScroll");', str_title, popURL);

                    spnHtml += String.format("<span id='spn_SAVETERM_POP' onclick='{0}' style='margin-left:10px;color:red;font-weight:bold;cursor:pointer;display:inline-block;'>", str_callPopup);
                    spnHtml += String.format("&lt;{0}&gt;", str_title);
                    spnHtml += String.format("</span>");
                    $("#SAVETERM").after(spnHtml);
                }
            }
        }
    }
}

function setLineFeedDel(val) {
    var regexp = new RegExp(/[\x0B]/g);
    return val.replace(regexp, '');
}

//var DataManager = { };
//    // 명령관리 활용
//DataManager.Execute = function (orderName, orderParam) {
//    //var orderName = "orderCommand01";
//    //var orderParam = "[{'EntCode':'H101'}]"

//    var data = {
//        "orderName": orderName
//        , "orderParam": orderParam
//    };

//    $.ajax({
//        type: "POST",
//        url: "/IF/ExternalApi/ExecuteDataManager", //https://autowaywfif.dhmc.co.kr/IF/ExternalApi/ExecuteDataManager
//        data: JSON.stringify(data),
//        contentType: "application/json; charset=utf-8",
//        dataType: "json",
//        success: function (message) {
//            Common.Inform(message);
//        },
//        error: function (message) {
//            Common.Error(message);

//            return false;
//        }
//    });
//}

var DataManager = {
    Execute: function (orderName, orderParam) {
        //var orderName = "orderCommand01";
        //var orderParam = "[{'status':'N'}]"

        var data = {
            "orderName": orderName
            , "orderParam": orderParam
        };

        $.ajax({
            type: "POST",
            url: "/IF/ExternalApi/ExecuteDataManager", //https://autowaywfif.dhmc.co.kr/IF/ExternalApi/ExecuteDataManager
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {

                Common.Inform(result.resultMessage);
            },
            error: function (result) {
                Common.Error(result.resultMessage);

                return false;
            }
        });
    }
}

// 마지막 결재자 여부 // 20200610 hpark 예결함에서 선결
// pDivisionType : 단계 (all , send , receive)
// pDivisionStep : 단계순번(0,1)
// pRouteType : 마지막 결재자 단계(all , approve , assist)
// pAllotType : pRouteType이 assist일때만 상세구분(all , parallel , serial)
// return : urcode|approvalorder|routetype|allottype
function fn_IsLastApprover(pDivisionType, pDivisionStep, pRouteType, pAllotType) {
    var m_oApvList = $.parseXML(getInfo("apst"));
    var str_lastcode = "";
    var str_approvalorder = "";
    var str_lastRouteTpye = "";
    var str_lastAllotType = "";
    var str_selector = "steps ";


    if (pDivisionType) pDivisionType = pDivisionType.toLowerCase(); else pDivisionType = "all";
    if (pDivisionStep != undefined) pDivisionStep = pDivisionStep; else pDivisionStep = 0;
    if (pRouteType) pRouteType = pRouteType.toLowerCase(); else pRouteType = "all";
    if (pAllotType) pAllotType = pAllotType.toLowerCase(); else pAllotType = "all";

    if (pDivisionType != "all") {
        if (pDivisionStep == "all") str_selector += "division[divisiontype='" + pDivisionType + "'] ";
        else str_selector += "division[divisiontype='" + pDivisionType + "']:eq(" + pDivisionStep + ") ";
    }

    if (pRouteType == "all") {
        str_selector += "step ou person";
    } else {
        if (pAllotType == "all") str_selector += "step[routetype='" + pRouteType + "'] ou person";
        else str_selector += "step[routetype='" + pRouteType + "'][allottype='" + pAllotType + "'] ou person";
    }

    oLastStep = $(m_oApvList).find(str_selector).last();

    str_lastcode = $(oLastStep).attr("code");
    str_approvalorder = $(oLastStep).closest("step").attr("approvalorder");
    str_lastRouteTpye = $(oLastStep).closest("step").attr("routetype");
    str_lastAllotType = $(oLastStep).closest("step").attr("allottype");

    if (!str_lastcode) str_lastcode = "";
    if (!str_approvalorder) str_approvalorder = "";
    if (!str_lastRouteTpye) str_lastRouteTpye = "";
    if (!str_lastAllotType) str_lastAllotType = "";

    return str_lastcode + "|" + str_approvalorder + "|" + str_lastRouteTpye + "|" + str_lastAllotType;
}

function CallBack_mf_OpenIntegratedWindow(sToken) {
    var in_ComPanyCode = getInfo("etid");
    var in_UserID = getInfo("sabun");
    var in_DeptCode = getInfo("dpid");
    var in_VersionID = "";
    var in_DocID = getInfo("lgy_doc_id");
    var in_PID = "";
    if (getInfo("piid_parent") != "")
        in_PID = getInfo("piid");
    else
        in_PID = "";
    var in_MODE = "";

    var in_ApprovalPhase = getApprovalPhase();
    var in_LangType = formJson.BODY_CONTEXT.LANG_TYPE;
    var in_SecurityGrade = $("#DOCLEVEL").val();
    var ReceiptEditDepth = formJson.BODY_CONTEXT.RECEIPT_EDIT_DEPTH;
    var ReceiptEditMode = formJson.BODY_CONTEXT.RECEIPT_EDIT_MODE;

    var in_LastModifyDateTime = "";
    if (getInfo("mode") == "DRAFT" || getInfo("mode") == "TEMPSAVE") {

        if (TempDoc_Cancel_YN == "Y") {
            in_MODE = "REWRITE";
        } else {
            if (getInfo("mode").toUpperCase() == "DRAFT" || getInfo("mode").toUpperCase() == "TEMPSAVE") {
                in_MODE = "DRAFT";
            }
            else {
                in_MODE = "EDIT";
            }

            if (in_ApprovalPhase > 1) {
                if (ReceiptCheck(in_ApprovalPhase))
                    in_MODE = "RECEIPT";
            }
        }
        if (in_MODE == "WRITE" || in_MODE == "REWRITE" || in_MODE == "TEMPSAVE") {
            in_LastModifyDateTime = "";
        }

        var in_ReturnUrl = "";
        if (TempDoc_Cancel_YN != "Y" && (getInfo("mode").toUpperCase() == "DRAFT" || getInfo("mode").toUpperCase() == "TEMPSAVE")) {
            in_ReturnUrl = String.format("{0}://{1}/Common/Auth/HDEC_Legacy_Draft.aspx?UserID={2}&fmid={3}&fiid={4}&ftid={5}&entCode={6}&langCode={7}"
            , Common.GetBaseConfig("WebServiceProtocol"), Common.GetBaseConfig("WebServerDomain"), getInfo("sabun"), getInfo("fmid"), getInfo("fiid"), getInfo("ftid"), getInfo("etid"), in_LangType);

            //string.Format("{0}://{1}/Common/Auth/HDEC_Legacy_Draft.aspx?UserID={2}&fmid={3}&fiid={4}&ftid={5}&entCode={6}&langCode={7}&openApv=Y"
            //, CFC.GetBaseConfig("WebServiceProtocol"), CFC.GetBaseConfig("WebServerDomain"), dftUserId, atyFormId, form_inst_id, form_temp_inst_id, dftCompId, LangType);
        }
        else {
            in_ReturnUrl = String.format("{0}://{1}/Common/Auth/HDEC_Legacy_Read.aspx?processInstanceId={2}&parentProcessInstanceId={3}&UserID={4}&processCode={5}&formprefix={6}&entCode={7}&langCode={8}"
            , Common.GetBaseConfig("WebServiceProtocol"), Common.GetBaseConfig("WebServerDomain"), getInfo("piid"), getInfo("piid_parent"), getInfo("sabun"), getInfo("pdef"), getInfo("fmpf"), getInfo("etid"), in_LangType);
        }

        var vwidth = 840;
        if (_BaseConfigApv.HEC_COMPANY == "Y") {
            if (IsWideOpenFormCheckReal(getInfo("fmpf"), Common.GetSession("DN_Code"))) {
                vwidth = Common.GetBaseConfig("WideOpenFormWidth");
            } else {
                vwidth = Common.GetBaseConfig("TallOpenFormWidth");
            }
        }
        var vheight = (window.screen.height - 40);

        if (g_IS_TabUI == "Y") {
            var currentTabID = parent.document.getElementById("hidMasterCurrentTab").value;
            currentIframe = parent.document.getElementById("ifrTabContent_" + currentTabID).contentWindow;
            currentIframe.parent.goOpenIntegratedWindow(in_ComPanyCode, in_UserID, in_DeptCode, in_VersionID, in_DocID, in_PID, in_MODE, in_ApprovalPhase, in_LangType, g_IS_TabUI, in_ReturnUrl, in_SecurityGrade, in_LastModifyDateTime, sToken, vwidth, vheight);
            parent.Master_TabClose_OnClick_ByFunction(currentTabID);
        } else {
            //opener.goOpenIntegratedWindow(in_ComPanyCode, in_UserID, in_DeptCode, in_VersionID, in_DocID, in_PID, in_MODE, in_ApprovalPhase, in_LangType, in_ReturnUrl, g_IS_TabUI);
            //window.close();

            var submitForm = document.createElement("FORM");
            document.body.appendChild(submitForm);
            submitForm.method = "GET";
            submitForm.name = "DocModify";

            var newElement = document.createElement("INPUT");
            submitForm.appendChild(newElement);
            newElement.id = 'CompanyCode';
            newElement.name = 'CompanyCode';
            newElement.value = in_ComPanyCode;
            newElement.style.display = 'none';

            var newElement1 = document.createElement("INPUT");
            submitForm.appendChild(newElement1);
            newElement1.id = 'UserID';
            newElement1.name = 'UserID';
            newElement1.value = in_UserID;
            newElement1.style.display = 'none';

            var newElement2 = document.createElement("INPUT");
            submitForm.appendChild(newElement2);
            newElement2.id = 'DeptCode';
            newElement2.name = 'DeptCode';
            newElement2.value = in_DeptCode;
            newElement2.style.display = 'none';

            var newElement3 = document.createElement("INPUT");
            submitForm.appendChild(newElement3);
            newElement3.id = 'VersionID';
            newElement3.name = 'VersionID';
            newElement3.value = in_VersionID;
            newElement3.style.display = 'none';

            var newElement4 = document.createElement("INPUT");
            submitForm.appendChild(newElement4);
            newElement4.id = 'DocID';
            newElement4.name = 'DocID';
            newElement4.value = in_DocID;
            newElement4.style.display = 'none';

            var newElement5 = document.createElement("INPUT");
            submitForm.appendChild(newElement5);
            newElement5.id = 'pid';
            newElement5.name = 'pid';
            newElement5.value = in_PID;
            newElement5.style.display = 'none';

            var newElement6 = document.createElement("INPUT");
            submitForm.appendChild(newElement6);
            newElement6.id = 'Mode';
            newElement6.name = 'Mode';
            newElement6.value = in_MODE;
            newElement6.style.display = 'none';

            var newElement7 = document.createElement("INPUT");
            submitForm.appendChild(newElement7);
            newElement7.id = 'ApprovalPhase';
            newElement7.name = 'ApprovalPhase';
            newElement7.value = in_ApprovalPhase;
            newElement7.style.display = 'none';

            var newElement8 = document.createElement("INPUT");
            submitForm.appendChild(newElement8);
            newElement8.id = 'ReturnUrl';
            newElement8.name = 'ReturnUrl';
            newElement8.value = in_ReturnUrl;
            newElement8.style.display = 'none';

            var newElement9 = document.createElement("INPUT");
            submitForm.appendChild(newElement9);
            newElement9.id = 'LangType';
            newElement9.name = 'LangType';
            newElement9.value = in_LangType;
            newElement9.style.display = 'none';

            var newElement10 = document.createElement("INPUT");
            submitForm.appendChild(newElement10);
            newElement10.id = 'IsTab';
            newElement10.name = 'IsTab';
            newElement10.value = "N";
            newElement10.style.display = 'none';

            var newElement11 = document.createElement("INPUT");
            submitForm.appendChild(newElement11);
            newElement11.id = 'Token';
            newElement11.name = 'Token';
            newElement11.value = sToken;
            newElement11.style.display = 'none';

            var newElement12 = document.createElement("INPUT");
            submitForm.appendChild(newElement12);
            newElement12.id = 'securityGrade';
            newElement12.name = 'securityGrade';
            newElement12.value = in_SecurityGrade;
            newElement12.style.display = 'none';

            var newElement13 = document.createElement("INPUT");
            submitForm.appendChild(newElement13);
            newElement13.id = 'lastModifyDateTime';
            newElement13.name = 'lastModifyDateTime';
            newElement13.value = in_LastModifyDateTime;
            newElement13.style.display = 'none';




            var x = Number(vwidth);
            var y = Number(vheight);
            // 화면 사이즈 보다 팝업이 큰경우 높이값 조정
            if (window.screen.height < (y + 82)) {
                y = window.screen.height - 82;
            }

            var sy = window.screen.height / 2 - parseInt(y) / 2 - 70;
            var sx = window.screen.width / 2 - parseInt(x) / 2;

            /*
                var IntegratedWindow = window.open("", "IntegratedWindow", "width=" + vwidth + ", height=" + vheight + ", left=" + sx + ", top=" + sy + ", scrollbars=yes");
                submitForm.target = "IntegratedWindow";
            */
            //window.resizeTo(x, y);
            //window.moveTo(sx, sy);

            submitForm.target = "_self";
            //submitForm.action = "http://hdecwfdev.hdec.co.kr/Interface/Write";
            submitForm.action = Common.GetBaseConfig("IntegratedSystem_InterfaceURL");
            submitForm.submit();
        }
    }
    else {
        var szURL = "/Approval/Controls/ApprovalExecuteWebService.asmx/GetDocLastModifiedDate";
        var Param = String.format("{ piid:'{0}' }", (typeof getInfo("piid_parent") != "undefined" && getInfo("piid_parent") != "") ? getInfo("piid_parent") : getInfo("piid"));
        CFN_CallAjaxJson(szURL, Param, false, function (pObjData) {
            in_LastModifyDateTime = String($.parseJSON(pObjData).d);

            if (TempDoc_Cancel_YN == "Y") {
                in_MODE = "REWRITE";
            } else {
                if (getInfo("mode").toUpperCase() == "DRAFT" || getInfo("mode").toUpperCase() == "TEMPSAVE") {
                    in_MODE = "DRAFT";
                }
                else {
                    in_MODE = "EDIT";
                }

                if (in_ApprovalPhase > 1) {
                    if (ReceiptCheck(in_ApprovalPhase))
                        in_MODE = "RECEIPT";
                }
            }
            if (in_MODE == "WRITE" || in_MODE == "REWRITE" || in_MODE == "TEMPSAVE") {
                in_LastModifyDateTime = "";
            }

            var in_ReturnUrl = "";
            if (TempDoc_Cancel_YN != "Y" && (getInfo("mode").toUpperCase() == "DRAFT" || getInfo("mode").toUpperCase() == "TEMPSAVE")) {
                in_ReturnUrl = String.format("{0}://{1}/Common/Auth/HDEC_Legacy_Draft.aspx?UserID={2}&fmid={3}&fiid={4}&ftid={5}&entCode={6}&langCode={7}"
                , Common.GetBaseConfig("WebServiceProtocol"), Common.GetBaseConfig("WebServerDomain"), getInfo("sabun"), getInfo("fmid"), getInfo("fiid"), getInfo("ftid"), getInfo("etid"), in_LangType);

                //string.Format("{0}://{1}/Common/Auth/HDEC_Legacy_Draft.aspx?UserID={2}&fmid={3}&fiid={4}&ftid={5}&entCode={6}&langCode={7}&openApv=Y"
                //, CFC.GetBaseConfig("WebServiceProtocol"), CFC.GetBaseConfig("WebServerDomain"), dftUserId, atyFormId, form_inst_id, form_temp_inst_id, dftCompId, LangType);
            }
            else {
                in_ReturnUrl = String.format("{0}://{1}/Common/Auth/HDEC_Legacy_Read.aspx?processInstanceId={2}&parentProcessInstanceId={3}&UserID={4}&processCode={5}&formprefix={6}&entCode={7}&langCode={8}"
                , Common.GetBaseConfig("WebServiceProtocol"), Common.GetBaseConfig("WebServerDomain"), getInfo("piid"), getInfo("piid_parent"), getInfo("sabun"), getInfo("pdef"), getInfo("fmpf"), getInfo("etid"), in_LangType);
            }

            var vwidth = 840;
            if (_BaseConfigApv.HEC_COMPANY == "Y") {
                if (IsWideOpenFormCheckReal(getInfo("fmpf"), Common.GetSession("DN_Code"))) {
                    vwidth = Common.GetBaseConfig("WideOpenFormWidth");
                } else {
                    vwidth = Common.GetBaseConfig("TallOpenFormWidth");
                }
            }
            var vheight = (window.screen.height - 40);

            if (g_IS_TabUI == "Y") {
                var currentTabID = parent.document.getElementById("hidMasterCurrentTab").value;
                currentIframe = parent.document.getElementById("ifrTabContent_" + currentTabID).contentWindow;
                currentIframe.parent.goOpenIntegratedWindow(in_ComPanyCode, in_UserID, in_DeptCode, in_VersionID, in_DocID, in_PID, in_MODE, in_ApprovalPhase, in_LangType, g_IS_TabUI, in_ReturnUrl, in_SecurityGrade, in_LastModifyDateTime, sToken, vwidth, vheight);
                parent.Master_TabClose_OnClick_ByFunction(currentTabID);
            } else {
                //opener.goOpenIntegratedWindow(in_ComPanyCode, in_UserID, in_DeptCode, in_VersionID, in_DocID, in_PID, in_MODE, in_ApprovalPhase, in_LangType, in_ReturnUrl, g_IS_TabUI);
                //window.close();

                var submitForm = document.createElement("FORM");
                document.body.appendChild(submitForm);
                submitForm.method = "GET";
                submitForm.name = "DocModify";

                var newElement = document.createElement("INPUT");
                submitForm.appendChild(newElement);
                newElement.id = 'CompanyCode';
                newElement.name = 'CompanyCode';
                newElement.value = in_ComPanyCode;
                newElement.style.display = 'none';

                var newElement1 = document.createElement("INPUT");
                submitForm.appendChild(newElement1);
                newElement1.id = 'UserID';
                newElement1.name = 'UserID';
                newElement1.value = in_UserID;
                newElement1.style.display = 'none';

                var newElement2 = document.createElement("INPUT");
                submitForm.appendChild(newElement2);
                newElement2.id = 'DeptCode';
                newElement2.name = 'DeptCode';
                newElement2.value = in_DeptCode;
                newElement2.style.display = 'none';

                var newElement3 = document.createElement("INPUT");
                submitForm.appendChild(newElement3);
                newElement3.id = 'VersionID';
                newElement3.name = 'VersionID';
                newElement3.value = in_VersionID;
                newElement3.style.display = 'none';

                var newElement4 = document.createElement("INPUT");
                submitForm.appendChild(newElement4);
                newElement4.id = 'DocID';
                newElement4.name = 'DocID';
                newElement4.value = in_DocID;
                newElement4.style.display = 'none';

                var newElement5 = document.createElement("INPUT");
                submitForm.appendChild(newElement5);
                newElement5.id = 'pid';
                newElement5.name = 'pid';
                newElement5.value = in_PID;
                newElement5.style.display = 'none';

                var newElement6 = document.createElement("INPUT");
                submitForm.appendChild(newElement6);
                newElement6.id = 'Mode';
                newElement6.name = 'Mode';
                newElement6.value = in_MODE;
                newElement6.style.display = 'none';

                var newElement7 = document.createElement("INPUT");
                submitForm.appendChild(newElement7);
                newElement7.id = 'ApprovalPhase';
                newElement7.name = 'ApprovalPhase';
                newElement7.value = in_ApprovalPhase;
                newElement7.style.display = 'none';

                var newElement8 = document.createElement("INPUT");
                submitForm.appendChild(newElement8);
                newElement8.id = 'ReturnUrl';
                newElement8.name = 'ReturnUrl';
                newElement8.value = in_ReturnUrl;
                newElement8.style.display = 'none';

                var newElement9 = document.createElement("INPUT");
                submitForm.appendChild(newElement9);
                newElement9.id = 'LangType';
                newElement9.name = 'LangType';
                newElement9.value = in_LangType;
                newElement9.style.display = 'none';

                var newElement10 = document.createElement("INPUT");
                submitForm.appendChild(newElement10);
                newElement10.id = 'IsTab';
                newElement10.name = 'IsTab';
                newElement10.value = "N";
                newElement10.style.display = 'none';

                var newElement11 = document.createElement("INPUT");
                submitForm.appendChild(newElement11);
                newElement11.id = 'Token';
                newElement11.name = 'Token';
                newElement11.value = sToken;
                newElement11.style.display = 'none';

                var newElement12 = document.createElement("INPUT");
                submitForm.appendChild(newElement12);
                newElement12.id = 'securityGrade';
                newElement12.name = 'securityGrade';
                newElement12.value = in_SecurityGrade;
                newElement12.style.display = 'none';

                var newElement13 = document.createElement("INPUT");
                submitForm.appendChild(newElement13);
                newElement13.id = 'lastModifyDateTime';
                newElement13.name = 'lastModifyDateTime';
                newElement13.value = in_LastModifyDateTime;
                newElement13.style.display = 'none';




                var x = Number(vwidth);
                var y = Number(vheight);
                // 화면 사이즈 보다 팝업이 큰경우 높이값 조정
                if (window.screen.height < (y + 82)) {
                    y = window.screen.height - 82;
                }

                var sy = window.screen.height / 2 - parseInt(y) / 2 - 70;
                var sx = window.screen.width / 2 - parseInt(x) / 2;

                /*
                    var IntegratedWindow = window.open("", "IntegratedWindow", "width=" + vwidth + ", height=" + vheight + ", left=" + sx + ", top=" + sy + ", scrollbars=yes");
                    submitForm.target = "IntegratedWindow";
                */
                //window.resizeTo(x, y);
                //window.moveTo(sx, sy);

                submitForm.target = "_self";
                //submitForm.action = "http://hdecwfdev.hdec.co.kr/Interface/Write";
                submitForm.action = Common.GetBaseConfig("IntegratedSystem_InterfaceURL");
                submitForm.submit();
            }
        });
    }
}

function ReceiptCheck(intPhase) {
    var m_oApvList = $.parseXML(document.getElementById("APVLIST").value);
    var m_divisionList = $(m_oApvList).find("division");
    var chkReturn = false;
    var taskStatus = $(m_divisionList[intPhase - 1]).find("step > ou > person > taskinfo").eq(0).attr("status");
    if (taskStatus == "pending" || taskStatus == "inactive") {
        chkReturn = true;
    }

    return chkReturn;
}


function getApprovalPhase() {
    var intPhase = 0;
    var m_oApvList = $.parseXML(document.getElementById("APVLIST").value);
    var m_divisionList = $(m_oApvList).find("division");
    for (var i = 0; i < m_divisionList.length; i++) {
        intPhase = (i + 1);
        if ($(m_divisionList[i]).find("step > ou > person > taskinfo[status='pending']").length > 0 || $(m_divisionList[i]).find("step > ou > person > taskinfo[status='inactive']").length > 0) {
            break;
        }
    }

    return intPhase;
}


